<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" class="js-theme-default is-logged-out js-astro better-docs better-docs-wide better-docs-wide-bg complete"><head>
        <meta http-equiv="content-type" content="text/html; charset=utf-8">
        <link rel="P3Pv1" href="/w3c/p3p.xml">
        <style id="placeholder-styles">@-webkit-keyframes a{0%{background-color:#d3d3d3}50%{background-color:#e5e5e5}to{background-color:#d3d3d3}}@keyframes a{0%{background-color:#d3d3d3}50%{background-color:#e5e5e5}to{background-color:#d3d3d3}}.placeholder{-webkit-animation:a 1.5s ease-in infinite;animation:a 1.5s ease-in infinite;background-color:#e5e5e5}.placeholder-hero{height:20em}.placeholder-heading{height:3em;width:55%}.placeholder-sentence{height:1.5em;margin-bottom:.5em}.placeholder-sentence-last{width:85%}.placeholder-paragraph{height:8em;margin-top:1.5625em}.placeholder-btn{height:3em;width:8em}.placeholder-btn,.placeholder-heading,.placeholder-hero,.placeholder-paragraph{margin-bottom:1.5625em}</style><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="shortcut icon" href="/files/favicon.ico"><link rel="icon" sizes="16x16 24x24 32x32 64x64" href="/files/favicon.ico"><style id="better-docs-lang-styles">pre.lang-bash,pre.language-bash,pre.lang-ruby,pre.language-ruby,pre.lang-python,pre.language-python{display:none;visibility:hidden;}pre.lang-bash.active,pre.language-bash.active,pre.lang-ruby.active,pre.language-ruby.active,pre.lang-python.active,pre.language-python.active{display:block;visibility:visible;}</style><script src="https://cdn.jsdelivr.net/gh/bramstein/fontfaceobserver@2.0.13/fontfaceobserver.standalone.js"></script><script src="/public/Mashery/scripts/themes/blackbeard/prism.js"></script><script async="" src="https://www.googletagmanager.com/gtm.js?id=GTM-PV9XWHD"></script><script type="text/javascript">
            //<![CDATA[
            var mashery_info = {
                        };

            // iframe'd detection, to pop out if in an iframe
            if (window.location !== parent.window.location && !(/(page|docs|blog)\/preview/.test(window.location.pathname))) {
                parent.window.location = window.location;
            }
            //]]>
        </script>
            <title>NBA v7 | Sportradar US API Portal</title>
    <link rel="alternate" type="application/rss+xml" href="https://developer.sportradar.com/docs/feed-comments/basketball/NBA_v7">
    <link rel="stylesheet" type="text/css" media="screen" href="https://developer.sportradar.com/files/default.min.css">
    <script src="/public/Mashery/scripts/themes/blackbeard/placeholders.js" type="text/javascript"></script>
    <script src="https://cdn.polyfill.io/v2/polyfill.min.js" type="text/javascript"></script>
    <script src="/public/Mashery/scripts/Mashery/source/ForumPreview.js" type="text/javascript"></script>
<script type="text/javascript">
//<![CDATA[
// @temp
// Coming to core
portalOptions.ajaxIgnore = '.js-ajax-ignore';

var redirectMap = [
	{
		original: '/files/index.html',
		redirect: '/docs/read/Home'
	},
	{
		original: '/files/indexSoccer.html#soccer-extended-api-v3',
		redirect: '/docs/read/football_soccer/Soccer_Extended_v3'
	},
	{
		original: '/files/indexSoccer.html#soccer-api-v3',
		redirect: '/docs/read/football_soccer/Soccer_v3'
	},
	{
		original: '/files/indexSoccer.html#soccer-api-v2-1',
		redirect: '/docs/read/football_soccer/Soccer_v21'
	},
	{
		original: '/files/indexSoccer.html#soccer-api-v2',
		redirect: '/docs/read/football_soccer/Soccer_v2'
	},
	{
		original: '/files/indexSoccer.html#beach-soccer-api',
		redirect: '/docs/read/football_soccer/Beach_Soccer_v1'
	},
	{
		original: '/files/indexSoccer.html',
		redirect: '/docs/read/football_soccer/Soccer_Extended_v3'
	},
	{
		original: '/files/indexFootball.html#nfl-official-api-v5',
		redirect: '/docs/read/american_football/NFL_v5'
	},
	{
		original: '/files/indexFootball.html#nfl-official-api-v2',
		redirect: '/docs/read/american_football/NFL_v2'
	},
	{
		original: '/files/indexFootball.html#nfl-official-api-v1',
		redirect: '/docs/read/american_football/NFL_v1'
	},
	{
		original: '/files/indexFootball.html#nfl-next-generation-stats-api',
		redirect: '/docs/read/american_football/NFL_Next_Generation_Stats_v1'
	},
	{
		original: '/files/indexFootball.html#classic-nfl-api',
		redirect: '/docs/read/american_football/Classic_NFL_v1'
	},
	{
		original: '/files/indexFootball.html#ncaa-football-api',
		redirect: '/docs/read/american_football/NCAA_Mens_Football_v1'
	},
	{
		original: '/files/indexFootball.html#arena-football-league',
		redirect: '/docs/read/american_football/Arena_Football_v1'
	},
	{
		original: '/files/indexFootball.html#global-american-football-api',
		redirect: '/docs/read/american_football/Global_American_Football_v1'
	},
	{
		original: '/files/indexFootball.html',
		redirect: '/docs/read/american_football/NFL_v5'
	},
	{
		original: '/files/indexFootball.html#aussie-rules-football-v2',
		redirect: '/docs/read/australian_rules_football/Australian_Rules_Football_v2'
	},
	{
		original: '/files/indexFootball.html#aussie-rules-football-v1',
		redirect: '/docs/read/australian_rules_football/Australian_Rules_Football_v1'
	},
	{
		original: '/files/indexBaseball.html#major-league-baseball-api-v6-5',
		redirect: '/docs/read/baseball/MLB_v65'
	},
	{
		original: '/files/indexBaseball.html#major-league-baseball-api-v6',
		redirect: '/docs/read/baseball/MLB_v6'
	},
	{
		original: '/files/indexBaseball.html#major-league-baseball-api-v5',
		redirect: '/docs/read/baseball/MLB_v5'
	},
	{
		original: '/files/indexBaseball.html#global-baseball-api',
		redirect: '/docs/read/baseball/Global_Baseball_v1'
	},
	{
		original: '/files/indexBaseball.html',
		redirect: '/docs/read/baseball/MLB_v65'
	},
	{
		original: '/files/indexBasketball.html#nba-api-v5',
		redirect: '/docs/read/basketball/NBA_v5'
	},
	{
		original: '/files/indexBasketball.html#nba-api-v4',
		redirect: '/docs/read/basketball/NBA_v4'
	},
	{
		original: '/files/indexBasketball.html#nba-api-v3',
		redirect: '/docs/read/basketball/NBA_v3'
	},
	{
		original: '/files/indexBasketball.html#wnba-api-v4',
		redirect: '/docs/read/basketball/WNBA_v4'
	},
	{
		original: '/files/indexBasketball.html#wnba-api-v3',
		redirect: '/docs/read/basketball/WNBA_v3'
	},
	{
		original: '/files/indexBasketball.html#ncaa-mens-basketball-api-v4',
		redirect: '/docs/read/basketball/NCAA_Mens_Basketball_v4'
	},
	{
		original: '/files/indexBasketball.html#ncaa-mens-basketball-api-v3',
		redirect: '/docs/read/basketball/NCAA_Mens_Basketball_v3'
	},
	{
		original: '/files/indexBasketball.html#ncaa-womens-basketball-api',
		redirect: '/docs/read/basketball/NCAA_Womens_Basketball_v3'
	},
	{
		original: '/files/indexBasketball.html#global-basketball-api',
		redirect: '/docs/read/basketball/Global_Basketball_v1'
	},
	{
		original: '/files/indexBasketball.html',
		redirect: '/docs/read/basketball/NBA_v5'
	},
	{
		original: '/files/indexCricket.html#cricket-v2',
		redirect: '/docs/read/cricket/Cricket_v2'
	},
	{
		original: '/files/indexCricket.html#cricket-v1',
		redirect: '/docs/read/cricket/Cricket_v1'
	},
	{
		original: '/files/indexCricket.html',
		redirect: '/docs/read/cricket/Cricket_v2'
	},
	{
		original: '/files/indexEditorial.html#editorial-content-api',
		redirect: '/docs/read/editorial_content/Editorial_Content_v3'
	},
	{
		original: '/files/indexEditorial.html',
		redirect: '/docs/read/editorial_content/Editorial_Content_v3'
	},
	{
		original: '/files/indexeSports.html',
		redirect: '/docs/read/esports/CounterStrike_Global_Offensive_v1'
	},
	{
		original: '/files/indexGolf.html#golf-api',
		redirect: '/docs/read/golf/Golf_v2'
	},
	{
		original: '/files/indexGolf.html',
		redirect: '/docs/read/golf/Golf_v2'
	},
	{
		original: '/files/indexHandball.html#handball-api-v2',
		redirect: '/docs/read/handball/Handball_v2'
	},
	{
		original: '/files/indexHandball.html#handball-api-v1',
		redirect: '/docs/read/handball/Handball_v1'
	},
	{
		original: '/files/indexHandball.html',
		redirect: '/docs/read/handball/Handball_v2'
	},
	{
		original: '/files/indexHockey.html#nhl-api-v5',
		redirect: '/docs/read/hockey/NHL_v5'
	},
	{
		original: '/files/indexHockey.html#nhl-api-v4',
		redirect: '/docs/read/hockey/NHL_v4'
	},
	{
		original: '/files/indexHockey.html#ncaa-mens-hockey-api',
		redirect: '/docs/read/hockey/NCAA_Mens_Hockey_v1'
	},
	{
		original: '/files/indexHockey.html#global-ice-hockey-api',
		redirect: '/docs/read/hockey/Global_Ice_Hockey_v1'
	},
	{
		original: '/files/indexHockey.html#field-hockey-api',
		redirect: '/docs/read/hockey/Field_Hockey_v1'
	},
	{
		original: '/files/indexHockey.html',
		redirect: '/docs/read/hockey/NHL_v5'
	},
	{
		original: '/files/indexImages.html#images-api-v3',
		redirect: '/docs/read/images/Images_v3'
	},
	{
		original: '/files/indexImages.html',
		redirect: '/docs/read/images/Images_v3'
	},
	{
		original: '/files/indexOdds.html#odds-comparison-api',
		redirect: '/docs/read/odds/Odds_Comparison_v1'
	},
	{
		original: '/files/indexOdds.html',
		redirect: '/docs/read/odds/Odds_Comparison_v1'
	},
	{
		original: '/files/indexOlympics.html#winter-olympics-api',
		redirect: '/docs/read/olympics/Winter_Olympics_v3'
	},
	{
		original: '/files/indexOlympics.html',
		redirect: '/docs/read/olympics/Winter_Olympics_v3'
	},
	{
		original: '/files/indexRacing.html#official-nascar-api',
		redirect: '/docs/read/racing/NASCAR_v3'
	},
	{
		original: '/files/indexRacing.html#sr-nascar-api',
		redirect: '/docs/read/racing/Classic_NASCAR_v3'
	},
	{
		original: '/files/indexRacing.html#motorsport-api',
		redirect: '/docs/read/racing/Motorsport_v1'
	},
	{
		original: '/files/indexRacing.html#formula-1-api',
		redirect: '/docs/read/racing/Formula_1_v2'
	},
	{
		original: '/files/indexRacing.html#formula-e-api',
		redirect: '/docs/read/racing/Formula_E_v2'
	},
	{
		original: '/files/indexRacing.html#indycar-api',
		redirect: '/docs/read/racing/IndyCar_v2'
	},
	{
		original: '/files/indexRacing.html#motogp-api',
		redirect: '/docs/read/racing/MotoGP_v2'
	},
	{
		original: '/files/indexRacing.html',
		redirect: '/docs/read/racing/NASCAR_v3'
	},
	{
		original: '/files/indexRugby.html#rugby-api-v2',
		redirect: '/docs/read/rugby/Rugby_v2'
	},
	{
		original: '/files/indexRugby.html#rugby-api-v1',
		redirect: '/docs/read/rugby/Rugby_v1'
	},
	{
		original: '/files/indexRugby.html',
		redirect: '/docs/read/rugby/Rugby_v2'
	},
	{
		original: '/files/indexTennis.html#tennis-v2-api',
		redirect: '/docs/read/tennis/Tennis_v2'
	},
	{
		original: '/files/indexTennis.html',
		redirect: '/docs/read/tennis/Tennis_v2'
	},
	{
		original: '/files/indexBadminton.html',
		redirect: '/docs/read/baseline_sports_coverage/Badminton_v1'
	},
	{
		original: '/files/indexBandy.html',
		redirect: '/docs/read/baseline_sports_coverage/Bandy_v1'
	},
	{
		original: '/files/indexCurling.html',
		redirect: '/docs/read/baseline_sports_coverage/Curling_v1'
	},
	{
		original: '/files/indexCycling.html',
		redirect: '/docs/read/baseline_sports_coverage/Cycling_v1'
	},
	{
		original: '/files/indexDarts.html',
		redirect: '/docs/read/baseline_sports_coverage/Darts_v1'
	},
	{
		original: '/files/indexFloorball.html',
		redirect: '/docs/read/baseline_sports_coverage/Floorball_v1'
	},
	{
		original: '/files/indexFutsal.html',
		redirect: '/docs/read/baseline_sports_coverage/Futsal_v1'
	},
	{
		original: '/files/indexPesapallo.html',
		redirect: '/docs/read/baseline_sports_coverage/Pesapallo_v1'
	},
	{
		original: '/files/indexSnooker.html',
		redirect: '/docs/read/baseline_sports_coverage/Snooker_v1'
	},
	{
		original: '/files/indexSquash.html',
		redirect: '/docs/read/baseline_sports_coverage/Squash_v1'
	},
	{
		original: 'indexVolleyball.html#beach-volleyball-api',
		redirect: '/docs/read/baseline_sports_coverage/Volleyball_Beach'
	},
	{
		original: '/files/indexVolleyball.html#indoor-volleyball-api',
		redirect: '/docs/read/baseline_sports_coverage/Volleyball_Indoor'
	},
	{
		original: '/files/indexVolleyball.html',
		redirect: '/docs/read/baseline_sports_coverage/Volleyball_Beach'
	},
	{
		original: '/files/indexWaterpolo.html',
		redirect: '/docs/read/baseline_sports_coverage/Waterpolo_v1'
	}
];

window.addEventListener('portalBeforeRender', function () {
	if (mashery.contentType !== 'fourOhFour') return;
	var redirect = redirectMap.find(function (item) {
		return new RegExp(item.original).test(window.location.href);
	});
	if (!redirect) return;
	window.location.href = redirect.redirect;
}, false);

(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-PV9XWHD');

// Toggle IO-Docs
var toggleIODocs=function(){"use strict";var e,t=document.querySelector("#apiId");t&&function(e,t){if(e.api&&e.method){var o=document.querySelectorAll("#api"+t+" .methods .title .name");if(!(o.length<1)){var n=Array.from(o).filter(function(t){return t.textContent.trim()===decodeURIComponent(e.method)});if(!(n.length<1)){var r=n[0].closest(".method");if(r){ioDocs.hideAllMethods(),ioDocs.toggleMethod(r);var i=function(e){var t=0;if(e.offsetParent)do{t+=e.offsetTop,e=e.offsetParent}while(e);return t>=0?t:0}(r);window.scrollTo(0,i)}}}}}(e=function(e){var t={},o=document.createElement("a");o.href=e;for(var n=o.search.substring(1).split("&"),r=0;r<n.length;r++){var i=n[r].split("=");t[i[0]]=decodeURIComponent(i[1])}return t}(window.location.href),function(e){if(e.api){var o=Array.from(t.options).filter(function(t){return t.textContent.trim()===decodeURIComponent(e.api)});if(!(o.length<1))return t.value=o[0].value,ioDocs.selectAPI(o[0].value),o[0].value}}(e))};
//]]>
</script>
        <!-- add syntax highlighter -->
        <script type="text/javascript">
            if(window.SyntaxHighlighter != undefined) { // check for syntax highlighter load before using
                SyntaxHighlighter.all();
            }
        </script>
        <!-- end syntax highlighter -->
        <!--[if lt IE 7.]>
            <link href="/public/Mashery/styles/IE6.css" type="text/css" media="screen" rel="stylesheet" />
        <![endif]-->
        <!--[if IE 7]>
            <link href="/public/Mashery/styles/IE7.css" type="text/css" media="screen" rel="stylesheet" />
        <![endif]-->
        <!--[if gte IE 8]>
            <link href="/public/Mashery/styles/IE8.css" type="text/css" media="screen" rel="stylesheet" />
        <![endif]-->

    <style id="fluid-vids-styles">.fluidvids {width: 100%; max-width: 100%; position: relative;}.fluidvids-item {position: absolute; top: 0px; left: 0px; width: 100%; height: 100%;}</style></head>
    <body id="page-docs" class="page-docs read en_US offside-js--init">
        <!-- PAGE -->
        
        <!-- /page -->

        <!-- Start Branding script tag -->
        <script type="text/javascript">
            // get the branding logo to set the mouseover/out and onclick
            var brandingLogo = document.getElementById('branding-logo');
            if(brandingLogo != undefined) {
                brandingLogo['onclick'] = function() {
                    location.href = "http://www.sportradar.com/";
                };
                brandingLogo['onmouseover'] = function() {
                    this.style.cursor = 'pointer';
                };
                brandingLogo['onmouseout'] = function() {
                    this.style.cursor = 'auto';
                };
            }

            // get the mashery logo to set the mouseover/out and onclick
            var masheryLogo = document.getElementById('branding-mashery');
            if(masheryLogo != undefined) {
                masheryLogo['onclick'] = function() {
                    location.href = "http://www.mashery.com/";
                };
                masheryLogo['onmouseover'] = function() {
                    this.style.cursor = 'pointer';
                };
                masheryLogo['onmouseout'] = function() {
                    this.style.cursor = 'auto';
                };
            }
        </script>
        <!-- End Branding script tag -->
            <!-- <div id="extra1">&nbsp;</div>
            <div id="extra2">&nbsp;</div> -->

        <script type="text/javascript" src="/public/Mashery/scripts/themes/blackbeard/app.js"></script><div id="app-wrapper" class="category-docs single-docs-basketball-nba_v7"><!-- Old Browser Warning --><!--[if lt IE 9]><section class="container">Did you know that your web browser is a bit old? Some of the content on this site might not work right as a result. <a href="http://whatbrowser.org">Upgrade your browser</a> for a faster, better, and safer web experience.</section><![endif]--><div id="app" class="tabindex" tabindex="-1"><a class="screen-reader screen-reader-focusable" href="#main-wrapper">Skip to content</a><nav id="nav-primary-wrapper"><div class="nav-primary nav-wrap" id="nav-primary"><div class="container padding-top-small padding-bottom-small"><a id="logo" class="logo" href="/"><img height="35" width="202" alt="Sportradar Developer Portal" src="https://developer.sportradar.com/files/logo.svg"></a><div class="nav-toggle-wrap"><a role="button" class="nav-toggle" id="nav-primary-toggle" data-nav-toggle=".nav-collapse" href="#">☰ Menu</a><a role="button" class="nav-toggle margin-right js-scroll-ignore" id="nav-docs-toggle" href="#">⋮ Docs Navigation</a></div><div class="nav-menu nav-collapse" id="nav-primary-menu"><ul class="nav" id="nav-primary-list"><li><a href="https://developer.sportradar.com/api_gallery">COVERAGE</a></li><li><a href="https://developer.sportradar.com/API_Packaging">PACKAGES</a></li><li><a href="https://developer.sportradar.com/docs/read/Home">DOCUMENTATION</a></li><li><a href="https://developer.sportradar.com/io-docs">API SANDBOX</a></li><li><a href="https://developer.sportradar.com/API_Release_Log">RELEASE LOG</a></li></ul></div></div></div></nav><nav id="nav-user-wrapper"><div class="nav-user container" id="nav-user"><div class="nav-menu nav-collapse" id="nav-user-menu"><ul class="nav-user-list list-inline text-muted text-right-large padding-top-small padding-bottom-small no-margin-bottom" id="nav-user-list"><li id="nav-user-signin"><a href="https://developer.sportradar.com/login/login?r=https%3A%2F%2Fdeveloper.sportradar.com%2Fdocs%2Fread%2Fbasketball%2FNBA_v7&amp;h=b7a1af7526123c37797a535c97147d60">Sign In</a></li><li id="nav-user-register"><a href="/member/register">Register</a></li></ul></div></div></nav><!-- tabindex="-1" hack for skipnav link: https://code.google.com/p/chromium/issues/detail?id=37721 --><main class="tabindex" tabindex="-1" id="main-wrapper"><div class="main" id="main"><div class="row row-docs"><div class="grid-docs grid-flip content better-docs-content better-docs-wide-content offside-sliding-element"><div class="better-docs-nav"><ul><li><a role="button" data-lang="bash" href="#lang-bash" class="active">Bash</a></li><li><a role="button" data-lang="ruby" href="#lang-ruby">Ruby</a></li><li><a role="button" data-lang="python" href="#lang-python">Python</a></li></ul></div><h1>NBA v7</h1>
<p><a name="top"></a></p>
<p><button class="btn btn-pdf btn-large btn-block summary js-right-height-content" onclick="window.open('/files/Sportradar_NBA_v7_Statistics_Summary.pdf','','scrollbars=yes,resizable=yes');return false;" style="text-decoration:none;font-size:140%">Statistics Summary</button><br>
<button class="btn btn-pdf btn-large btn-block feeds js-right-height-content" onclick="window.open('/files/Sportradar_NBA_v7_Statistics_Feeds.pdf','','scrollbars=yes,resizable=yes');return false;" style="text-decoration:none;font-size:140%">Documentation</button><br>
<button class="btn btn-pdf btn-large btn-block feeds js-right-height-content" onclick="window.open('/files/Sportradar_NBA_In_Season_Tournament.pdf','','scrollbars=yes,resizable=yes');return false;" style="text-decoration:none;font-size:140%">In-Season Tournament</button><br>
<button class="btn btn-pdf btn-large btn-block log js-right-height-content" onclick="window.open('/files/NBA_API_v7_Change_Log.pdf','','scrollbars=yes,resizable=yes');return false;" style="text-decoration:none;font-size:140%">Change Log</button><br>
<a href="#FAQNBAv7" class="btn btn-block js-right-height-content js-scroll float-middle" data-options="{ &quot;easing&quot;: &quot;linear&quot; }" style="height: 50px;vertical-align: middle;text-decoration:none;font-size:140%">Frequently Asked Questions</a></p>
<table class="basetable version">
<thead>
<tr>
<td colspan="2" style="width:350px ;text-align:center" class="heading"><b>Quick Access</b></td>
</tr>
<tr>
<td style="width:350px ;text-align:center" class="heading"><b>Postman Collection</b></td>
<td style="width:350px ;text-align:center" class="heading"><b>XSD Schema</b></td>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><a href="https://app.getpostman.com/run-collection/17203961-89640c6c-af84-43c1-abd7-caf50d30a08c?action=collection%2Ffork&amp;collection-url=entityId%3D17203961-89640c6c-af84-43c1-abd7-caf50d30a08c%26entityType%3Dcollection%26workspaceId%3Da6193b92-ee53-4979-bbfe-7ffdc589c3fc"><img src="https://run.pstmn.io/button.svg"></a></td>
<td style="text-align:center" class="heading"><a href="/files/NBA_v7.zip">Download</a></td>
</tr>
</tbody>
</table>
<h2 id="nba-api-overview">NBA API Overview</h2>
<p>Sportradar is the Official Data Provider of NBA statistics. We combine on-venue speed, detailed game and seasonal statistics, and advanced metrics for a full basketball experience. Every NBA game – including preseason – updates in real-time, with live event positional data.   </p>
<p>The NBA API is consistent in structure, format, and behavior with our other League Specific APIs. Our primary feeds return schedules, standings, team/player data, and real-time scores.  </p>
<p>Our other NBA feeds provide a host of complementary statistics and information, including:</p>
<ul><li>Rankings</li>
<li>League leaders</li>
<li>Game splits</li>
<li>Season splits</li>
<li>Injuries</li>
<li>Free agents</li>
<li>Draft information</li>
<li>Live advanced metrics</li>
<li>In-game substitution info</li>
<li>Live event positional data</li></ul>
<p>Real-time customers are also offered five delivery <a href="#Push">Push Feeds</a> to enhance speed.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:210px ;text-align:center"><b>API</b></td>
<td style="width:210px ;text-align:center"><b>API Version</b></td>
<td style="width:210px ;text-align:center"><b>Data Entry Workflow</b></td>
<td style="width:210px ;text-align:center"><b>Failover</b></td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:210px ;text-align:center" class="heading">NBA</td>
<td style="width:210px ;text-align:center">v7</td>
<td style="width:210px ;text-align:center"><a onclick="window.open('/NBA_Workflow','','scrollbars=yes,resizable=yes');return false;">Data Entry Workflow</a></td>
<td style="text-align:center"><a onclick="window.open('/files/Official_Basketball_Data_Unavailable_During_Failover.pdf','','scrollbars=yes,resizable=yes');return false;">Failover Details</a><br><a onclick="window.open('/files/Official_Basketball_vs_Failover_Statistics.pdf','','scrollbars=yes,resizable=yes');return false;">Failover Summary</a></td></tr>

</tbody>
</table>
<table>
<thead><tr>
<td style="padding:20px;background-color:#00003c;color:white;width:57%;text-align:left;cursor:default;">
<b>Note</b>: Authentication is required for all API calls.
</td>
</tr></thead><tbody>
</tbody></table>
<h2 id="nba-api-map">NBA API Map</h2>
<p><a name="mapNBAv7"></a></p>
<p>To best utilize the NBA API v7, you will need several parameters to create your API calls. The map below illustrates how you can obtain the parameters you need.</p>
<blockquote>
  <p><ins></ins></p><h3>Examples:</h3><p></p>
  <p>To find a team's leader in assists for a given game:</p>
  <ol><li>Call the schedule or series schedule feed and find the Game Id for the game of your choice</li><li>Call the Game Boxscore using the Game Id</li><li>Find the Team of your choice, locate the Leaders statistics, then locate the player full_name attribute</li></ol>
  <p>The name of the team's leader in assists is displayed.</p>
  <ol></ol>
  <p>To find a player's average points per game:</p>
  <ol><li>Call the schedule or series schedule and find id for the team the player is on</li><li>Call the Team Profile using the Team ID</li><li>Locate the Player ID for your chosen player and call the Player Profile.</li><li>Find the average element with the points attribute</li></ol>
  <p>The players's average points are displayed.</p>
</blockquote>
<p>The primary feeds require only a date or season to call the endpoints. Those feeds provide Game, Team, or Player Ids which can be used to generate the game, team, and player feeds. All of the other feeds require no variables.</p>
<p><img style="margin:0px auto;display:block" src="/files/NBAv7SVG.svg"></p>
<h2 id="coverage-levels">Coverage Levels</h2>
<p>We provide two different levels of detail to ensure maximum coverage. We combine coverage levels with the correct feeds to ensure you are getting the most comprehensive data offering in the most efficient manner possible. Full coverage is available for all regular and postseason games. Most preseason games will also have full coverage, though in some rare cases extended boxscore may be used.</p>
<p><b>Full</b> – We provide live play-by-play coverage for the entire game. We provide updated scores and time remaining as well as team- and player-level data in near real time.</p>
<p><b>Extended Boxscore</b> – We provide scores, time remaining, and team leaders (assists, points, and rebounds), in a timely manner, as the game progresses. We provide team- and player-level data for the game within 30 minutes of the official results being posted.</p>
<table>
<thead><tr>
<td style="padding:20px;background-color:#00003c;color:white;width:57%;text-align:left;cursor:default;">
<b>Note</b>: Preseason coverage of NBA games may vary. Due to data-entry coverage (from venue) not being available, some games may be covered via our extended boxscore coverage.
</td>
</tr></thead><tbody>
</tbody></table>
<h2 id="nba-api-v7-simulations">NBA API v7 Simulations</h2>
<p>Our NBA simulations give you the opportunity to test your code against a simulation of live data before the preseason starts or any time! Our simulation system replays select completed games allowing you to view our API feeds as if they were happening live.</p>
<p>Simulations run every day according to the below schedule. Data is reset for each day's simulations at 12:45pm UTC.</p>
<table class="basetable version">
<thead>
<tr>
<td colspan="2" style="width:350px ;text-align:center" class="heading"><b>Quick Access</b></td>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><a href="https://app.getpostman.com/run-collection/17203961-57f86353-56c3-4418-b8aa-5fff8070c41f?action=collection%2Ffork&amp;collection-url=entityId%3D17203961-57f86353-56c3-4418-b8aa-5fff8070c41f%26entityType%3Dcollection%26workspaceId%3Da6193b92-ee53-4979-bbfe-7ffdc589c3fc"><img src="https://run.pstmn.io/button.svg"></a></td>
</tr>
</tbody>
</table>
<table class="basetable version">
<thead>
<tr>
<td style="width:210px ;text-align:center"><b>Start Time (UTC) </b></td>
<td style="width:210px ;text-align:center"><b>Game </b></td>
<td style="width:210px ;text-align:center"><b>Game ID </b></td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:210px ;text-align:center">1:00pm</td>
<td style="width:210px ;text-align:center">Chicago Bulls at New York Knicks</td>
<td style="width:210px ;text-align:center">26e0906a-a222-4013-a9c8-dea6a8fe1f4f</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:210px ;text-align:center">1:00pm</td>
<td style="width:210px ;text-align:center">Brooklyn Nets at Portland Trailblazers</td>
<td style="width:210px ;text-align:center">0d996d35-85e5-4913-bd45-ac9cfedbf272</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:210px ;text-align:center">5:00pm</td>
<td style="width:210px ;text-align:center">Utah Jazz at Los Angeles Clippers</td>
<td style="width:210px ;text-align:center">a2a43125-5538-43f7-84a9-e8e02a8a772f</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:210px ;text-align:center">5:00pm</td>
<td style="width:210px ;text-align:center">Philadelphia 76ers at Detroit Pistons</td>
<td style="width:210px ;text-align:center">9c322810-33cc-4aa8-b1c7-43bc6ed9af73</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:210px ;text-align:center">5:00pm</td>
<td style="width:210px ;text-align:center">Washington Wizards at Golden State Warriors</td>
<td style="width:210px ;text-align:center">f8367461-6e6f-4cbb-b758-4b866f554f80​</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:210px ;text-align:center">7:00pm</td>
<td style="width:210px ;text-align:center">San Antonio Spurs at Los Angeles Lakers</td>
<td style="width:210px ;text-align:center">12b2e554-c80f-404f-b140-c25400996ac7</td>
</tr>
</tbody>
</table>
<p>To retrieve the game IDs, team IDs, and other associated information for each game listed above, you can use the following URL with the syntax noted below. If you have an existing NBA API key, simply replace the access_level (trial or production) in the URL of a feed with simulation.</p>
<p>https://api.sportradar.com/nba/simulation/<code>{version}</code>/<code>{language_code}</code>/games/2017/SIM/schedule.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>nba_season</code></td>
<td>Regular Season (REG).</td>
</tr>
<tr>
<td><code>season_year</code></td>
<td>Year in 4 digit format (YYYY). <em>Use 2017 for simulations</em></td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p><strong>Feeds Available:</strong> Schedule, Standings, League Hierarchy, Game Boxscore, Game Summary, Play-By-Play, Team Profile, Seasonal Statistics, Injuries, Rankings, Push Events, and Push Statistics</p>
<p>For syntax structure on each feed, please reference the below documentation.</p>
<h2 id="in-season-tournament">In-Season Tournament</h2>
<p>The inaugural NBA In-Season Tournament will take place during the 2023-24 NBA season. The tournament is divided into a group play stage and a knockout stage. </p>
<p>In group play, all 30 teams are randomly drawn into groups of five (six groups overall) within their conference based on their previous season’s win-loss record. Each team will play four designated group play games against each opponent in its group, with two games at home and two on the road.</p>
<p>Eight teams advance to the knockout rounds: the six teams with the best standing in their group and two wild card teams (the team from each conference with the best record in Group Play games that finished second in its group).</p>
<p>All 67 In-Season Tournament games count towards the regular season standings except for the In-season Tournament Championship game. Each team will continue to play 82 regular season games.</p>
<h3 id="season-types">Season Types</h3>
<p>A new season type was created in the NBA API for the NBA In-Season Tournament called In-Season Tournament with code (also referred to as parameter) of <code>IST</code>. This season type can be retrieved via the NBA Seasons feed:</p>
<blockquote>
  <p>Click below for XML and JSON samples of the Seasons feed with the <code>IST</code> season included<br><br>
  <a onclick="window.open('/files/nba_v8_seasons_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v8_seasons_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p><a href="https://api.sportradar.com/nba/production/v8/en/league/seasons.xml?api_key=">https://api.sportradar.com/nba/production/v8/en/league/seasons.xml?api_key=</a></p>
<p><code class="language-xml">

    &lt;season id="170cfa7b-54e8-468b-ab9f-21244769bd75" year="2023" start_date="2023-12-09" end_date="2023-12-10" status="scheduled"&gt;
        &lt;type code="IST" name="In-Season Tournament"&gt;
&lt;/type&gt;&lt;/season&gt;
</code></p>
<p>This code (or parameter) can be used to retrieve endpoints for the following feeds:</p>
<ul>
<li>League Leaders</li>
<li>Rankings</li>
<li>Schedule</li>
<li>Seasonal Statistics</li>
<li>Seasons</li>
<li>Series Schedule</li>
<li>Splits (Game)</li>
<li>Splits (Hierarchy)</li>
<li>Splits (In-Game)</li>
<li>Splits (Schedule)</li>
<li>Standings</li>
</ul>
<h3 id="tournament-schedule">Tournament Schedule</h3>
<h4>Group Play</h4>
<p>With the exception of the In-season Championship Game, all NBA In-Season Tournament games will appear in the NBA API Regular Season (REG) schedule.</p>
<p>Example for 2023 season: <a href="https://api.sportradar.com/nba/production/v8/en/games/2023/REG/schedule.xml?api_key=">https://api.sportradar.com/nba/production/v8/en/games/2023/REG/schedule.xml?api_key=</a></p>
<blockquote>
  <p>Click below for XML and JSON samples of the Schedule feed with the <code>inseason_tournament</code> games included<br><br>
  <a onclick="window.open('/files/nba_v8_schedule_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v8_schedule_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>The regular season games included in the NBA In-Season Tournament will have a game attribute called <code>inseason_tournament</code> with a value of <code>true</code>.</p>
<p><code class="language-xml">
&lt;game id="d4d3c86e-43f3-48e6-bdf6-b92f18b172e5" status="scheduled" coverage="full" scheduled="2023-11-03T23:00:00Z" inseason_tournament="true" reference="0022300001" home_team="583ec7cd-fb46-11e1-82cb-f4ce4684ea4c" away_team="583ec773-fb46-11e1-82cb-f4ce4684ea4c"&gt;
&lt;/game&gt;</code></p>
<h4>Quarterfinals &amp; Semifinals</h4>
<p>In the knockout rounds, all games will be created as a part of a one-game series. The quarterfinals and semifinals will be created in the regular season and will appear in the regular season schedule paths (League Schedule and Series Schedule):</p>
<blockquote>
  <p>Click below for XML and JSON samples of the knockout rounds<br><br>
  <a onclick="window.open('/files/NBA_IST_RegSeason_Series_Schedule_Quarterfinals_Semifinals.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/NBA_IST_RegSeason_Series_Schedule_Quarterfinals_Semifinals.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>League Schedule: <a href="https://api.sportradar.us/nba/production/v8/en/games/2023/REG/schedule.xml?api_key=">https://api.sportradar.us/nba/production/v8/en/games/2023/REG/schedule.xml?api_key=</a></p>
<p>Series Schedule:<br>
<a href="https://api.sportradar.us/nba/production/v8/en/series/2023/REG/schedule.xml?api_key=">https://api.sportradar.us/nba/production/v8/en/series/2023/REG/schedule.xml?api_key=</a></p>
<p>Sample Data:</p>
<p class="aligncenter"><img src="../../../files/NBA_IST_Series_Sched.png" align="middle"></p>
<h4>Championship Game</h4>
<p>The NBA In-Season Tournament Championship game, due to not counting towards the regular season standings, will appear in the In-Season Tournament (IST) season and series  schedule:</p>
<blockquote>
  <p>Click below for XML and JSON samples of the Championship round<br><br>
  <a onclick="window.open('/files/NBA_IST_Series_Schedule_Champ_Game.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/NBA_IST_Series_Schedule_Champ_Game.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>League Schedule: <a href="https://api.sportradar.us/nba/production/v8/en/games/2023/IST/schedule.xml?api_key=">https://api.sportradar.us/nba/production/v8/en/games/2023/IST/schedule.xml?api_key=</a></p>
<p>Series Schedule:<br>
<a href="https://api.sportradar.us/nba/production/v8/en/series/2023/IST/schedule.xml?api_key=">https://api.sportradar.us/nba/production/v8/en/series/2023/IST/schedule.xml?api_key=</a></p>
<p>Sample Data:</p>
<p class="aligncenter"><img src="../../../files/NBA_IST_Series_Sched_2.png" align="middle"></p>
<h3 id="standings">Standings</h3>
<p>To access the In-Season Tournament standings, you need use the IST season parameter. In the endpoint below, you will see teams placed in the In-Season Tournament groups. </p>
<blockquote>
  <p>Click below for XML and JSON samples of the IST Standings feed games included<br><br>
  <a onclick="window.open('/files/nba_v8_ist_standings_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v8_ist_standings_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Please note that no in-season tournament data will exist in the Regular Season standings.</p>
<p><a href="https://api.sportradar.us/nba/production/v8/en/seasons/2023/IST/standings.xml?api_key=">https://api.sportradar.us/nba/production/v8/en/seasons/2023/IST/standings.xml?api_key=</a></p>
<p>Sample Data:</p>
<p class="aligncenter"><img src="../../../files/NBA_IST_Standings.png" align="middle"></p>
<h2 id="play-in-tournament">Play-In Tournament</h2>
<p>Each NBA season will feature a play-in tournament to determine the 7th and 8th seeds for each conference’s playoff bracket. The 2023 Play-In Tournament will begin Tuesday, April 11 and conclude Friday, April 14.</p>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/games/2021/PIT/schedule.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/games/2021/PIT/schedule.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/games/2021/PIT/schedule.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of the Play-In Tournament Schedule feed<br><br>
  <a onclick="window.open('/files/nba_v7_play_in_tournament_schedule_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_play_in_tournament_schedule_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>In the NBA API, these games will be found in the Play-in Tournament (PIT) season schedule:</p>
<p><a href="https://api.sportradar.com/nba/production/v7/en/games/2022/PIT/schedule.xml?api=">https://api.sportradar.com/nba/production/v7/en/games/2022/PIT/schedule.xml?api=</a></p>
<p>The season parameter of <code>PIT</code> must also be used to retrieve seasonal statistics for these games.</p>
<p>At the conclusion of the regular season but prior to the first round of the playoffs, the team with the 7th-highest winning percentage in each conference will host the team with the 8th-highest winning percentage in a Play-In Game (the “Seven-Eight Game”). The winner of the Seven-Eight Game in each conference will earn the No. 7 seed.</p>
<ul>
In the below example, the Miami Heat would host the Charlotte Hornets in the Seven-Eight Game. The winner of that game would be the 7th seed in the Eastern Conference playoffs and would play the 2nd seed in the first round.
</ul>
<p><code class="language-xml">
  &lt;team id="583ecea6-fb46-11e1-82cb-f4ce4684ea4c" name="Heat" market="Miami" sr_id="sr:team:3435" reference="1610612748"&gt;
  &lt;/team&gt;</code><br>
  <code class="language-xml">
  &lt;rank conference="7" division="2"&gt;

  &lt;/rank&gt;</code></p>
<p><code class="language-xml">
  &lt;team id="583ec97e-fb46-11e1-82cb-f4ce4684ea4c" name="Hornets" market="Charlotte" sr_id="sr:team:3430" reference="1610612766"&gt;
  &lt;/team&gt;</code><br>
  <code class="language-xml">
  &lt;rank conference="8" division="3"&gt;
  &lt;/rank&gt;</code></p>
<ul>
Additionally, the team with the 9th-highest winning percentage in each conference will host the team with the 10th-highest winning percentage in the “Nine-Ten Game”.
</ul>
<p><code class="language-xml">
  &lt;team id="583ec7cd-fb46-11e1-82cb-f4ce4684ea4c" name="Pacers" market="Indiana" sr_id="sr:team:3419" reference="1610612754"&gt;
  &lt;/team&gt;</code><br>
  <code class="language-xml">
  &lt;rank conference="9" division="2"&gt;
  &lt;/rank&gt;</code></p>
<p><code class="language-xml">
  &lt;team id="583ec8d4-fb46-11e1-82cb-f4ce4684ea4c" name="Wizards" market="Washington" sr_id="sr:team:3431" reference="1610612764"&gt;
  &lt;/team&gt;</code><br>
  <code class="language-xml">
  &lt;rank conference="10" division="4"&gt;

  &lt;/rank&gt;</code></p>
<ul>
In this example, the Indiana Pacers would host the Washington Wizards in the “Nine-Ten Game.” The loser of that game would be eliminated from playoff contention. The winner would play the loser of the Heat/Hornets game (Seven-Eight Game). The winner of that game would earn the 8th seed and play the 1st seed in the first round of the playoffs.
</ul>
<p>While all playoff series will appear in the postseason series schedule feed at the completion of the regular season, the final playoff matchups will not be determined until the play-in tournament is complete.</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/v7/<code>{language_code}</code>/series/<code>{season_year}</code>/PST/schedule.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<h2 id="all-star-game-faq">All-Star Game FAQ</h2>
<blockquote>
  <p>Click here for for a <a onclick="window.open('/files/nba_v7_allstar_game_summary_example.xml','','scrollbars=yes,resizable=yes');return false;">Game Summary</a> or <a onclick="window.open('/files/nba_v7_allstar_game_pbp_example.xml','','scrollbars=yes,resizable=yes');return false;">Play-by-Play</a> sample of the 2022 All-Star game.</p>
</blockquote>
<h3 id="how-do-i-locate-the-all-star-game">How do I locate the All-Star game?</h3>
<p>The game can be found in the Daily Schedule feed on the date of the event. For example: <code>nba/trial/v7/en/games/2022/02/20/schedule</code></p>
<p><b>Note: the game will not be created until around a day prior to the scheduled date.</b></p>
<p>Every game-centric feed (e.g. Game Play-by-Play, Game Summary, Push Events, etc) can be accessed during the games.</p>
<p>Click here for for a <a onclick="window.open('/files/nba_v7_allstar_game_summary_example.xml','','scrollbars=yes,resizable=yes');return false;">Game Summary</a> or <a onclick="window.open('/files/nba_v7_allstar_game_pbp_example.xml','','scrollbars=yes,resizable=yes');return false;">Play-by-Play</a> sample of the 2022 game.</p>
<h3 id="what-are-the-differences-from-a-typical-nba-game">What are the differences from a typical NBA game?</h3>
<p>All-Star teams are named after team captains so the teams do not exist in our database until those captains are named (typically a couple weeks before the game).</p>
<p>2022 Teams:<br>
<code class="language-xml">
name="Team LeBron West" alias="LBN" id="9a1f6434-9dcb-4613-aa9b-5ff3a2de5eba"
reference="1610616834"</code></p>
<p><code class="language-xml">
name="Team Durant East" alias="DRT" id="40c84241-d030-4816-bf9b-80df3514c354" reference="1610616833"</code></p>
<h3 id="is-the-all-star-game-covered-in-realtime">Is the All-Star game covered in realtime?</h3>
<p>Yes. The game is covered in realtime, including the same level of team and player statistics as a regular season game.</p>
<h3 id="when-are-the-all-star-rosters-set">When are the All-Star rosters set?</h3>
<p>All-Star game rosters will be available shortly prior to tipoff.</p>
<p>Please note that we only provide game rosters (not team rosters) for each game. Request the <b>Game Summary</b> endpoint prior to the game to receive rosters.</p>
<h2 id="daily-change-log">Daily Change Log</h2>
<p>Provides IDs and timestamps for teams, players, game statistics, schedules, and standings that have been modified on a given date. To receive the data updates, use these unique IDs to pull relevant API feeds.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Game Info Data Points:</b></td>
<td>Game Id </td>
<td colspan="2">Last Updated </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Info Data Points:</b></td>
<td>League Alias <br>League Id </td>
<td>League Name </td>
<td>Season Id </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Data Points:</b></td>
<td>Full Name <br>Last Modified </td>
<td>Id </td>
<td>SR Id </td>
</tr>
</tbody><tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Data Points:</b></td>
<td style="width:170px">Id <br>Last Modified </td>
<td style="width:170px">Market <br>Name </td>
<td style="width:170px">Reference <br>SR Id</td>
</tr>
</tbody>

</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/league/2022/01/27/changes.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/league/2022/01/27/changes.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/league/2022/01/27/changes.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_change_log_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_change_log_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Daily Change Log feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/league/<code>{year}</code>/<code>{month}</code>/<code>{day}</code>/changes.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production) or Trial (trial)</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>year</code></td>
<td>Year in 4 digit format (YYYY).</td>
</tr>
<tr>
<td><code>month</code></td>
<td>Month in 2 digit format (MM).</td>
</tr>
<tr>
<td><code>day</code></td>
<td>Day in 2 digit format (DD).</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for the Daily Change Log, use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/changelog-v2.0.xsd">https://feed.elasticstats.com/schema/basketball/changelog-v2.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="daily-schedule">Daily Schedule</h2>
<p>Date, time, location, and other event details for every game taking place in the league-defined day.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Game Info Data Points:</b></td>
<td style="width:170px">Away Team Alias <br>Away Team Id <br>Away Team Name <br>Away Team Points <br>Away Team Reference <br>Away Team Seed Number <br>Away Team SR Id <br>Broadcast Cable <br>Broadcast Channel <br>Broadcast Internet <br>Broadcast Locale </td>
<td style="width:170px">Broadcast Network <br>Broadcast Radio <br>Broadcast Satellite <br>Broadcast Type <br>Game Coverage <br>Game Id <br>Game Reference <br>Game SR Id <br>Game Status <br>Game Title <br>Home Team Alias <br>Home Team Id </td>
<td style="width:170px">Home Team Name <br>Home Team Points <br>Home Team Reference <br>Home Team Seed Number <br>Home Team SR Id <br>Neutral Site <br>Scheduled Date <br>Scheduled Date and Time <br>Time Zones Away Team <br>Time Zones Home Team <br>Time Zones Venue <br>Track on Court </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Info Data Points:</b></td>
<td>League Alias </td>
<td>League Id </td>
<td>League Name </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Venue Info Data Points:</b></td>
<td>Address <br>Capacity <br>City <br>Country </td>
<td>Description <br>Name <br>SR Id </td>
<td>State <br>Id <br>Zip </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/games/2022/01/22/schedule.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/games/2022/01/22/schedule.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/games/2022/01/22/schedule.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_daily_schedule_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_daily_schedule_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Daily Schedule feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/games/<code>{year}</code>/<code>{month}</code>/<code>{day}</code>/schedule.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production) or Trial (trial)</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>year</code></td>
<td>Year in 4 digit format (YYYY).</td>
</tr>
<tr>
<td><code>month</code></td>
<td>Month in 2 digit format (MM).</td>
</tr>
<tr>
<td><code>day</code></td>
<td>Day in 2 digit format (DD).</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for the Daily Schedule use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/schedule-v5.0.xsd">https://feed.elasticstats.com/schema/basketball/schedule-v5.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="daily-transfers">Daily Transfers</h2>
<p>Information for all transfers added or edited during the league-defined day.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Info Data Points:</b></td>
<td style="width:170px">League Alias </td>
<td style="width:170px">League Id </td>
<td style="width:170px">League Name </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Info Data Points:</b></td>
<td>First Name <br>Full Name <br>Jersey Number <br>Last Name <br>Player Id <br>Position <br>Primary Position <br>Reference <br>SR Id </td>
<td>Transfers Description <br>Transfers Effective Date <br>Transfers End Date <br>Transfers Id <br>Transfers New Team Id <br>Transfers New Team Market <br>Transfers New Team Name <br>Transfers New Team Reference <br>Transfers New Team SR Id</td>
<td>Transfers Notes <br>Transfers Old Team Id <br>Transfers Old Team Market <br>Transfers Old Team Name <br>Transfers Old Team Reference <br>Transfers Old Team SR Id <br>Transfers Start Date <br>Transfers Transaction Code <br>Transfers Transaction Type <br>Transfers Update Date </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/league/2022/01/22/transfers.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/league/2022/01/22/transfers.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/league/2022/01/22/transfers.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_daily_transfers_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_daily_transfers_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Daily Transfers feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/league/<code>{year}</code>/<code>{month}</code>/<code>{day}</code>/transfers.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production) or Trial (trial)</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>year</code></td>
<td>Year in 4 digit format (YYYY).</td>
</tr>
<tr>
<td><code>month</code></td>
<td>Month in 2 digit format (MM).</td>
</tr>
<tr>
<td><code>day</code></td>
<td>Day in 2 digit format (DD).</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for the Daily Transfers use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/transfers-v7.0.xsd">https://feed.elasticstats.com/schema/basketball/transfers-v7.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="draft-summary">Draft Summary</h2>
<p>Provides pre-draft pick order with live pick selections during the draft. Displays information on draft rounds, picks, teams, and prospects for a given draft year.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">5am CST Daily</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">Raw XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Draft Information Data Points:</b></td>
<td style="width:170px">Broadcast Channel <br>Broadcast Internet <br>Broadcast Network <br>Draft End Date <br>Draft Id <br>Draft Start Date <br>Draft Status <br>Draft Team Alias </td>
<td style="width:170px">Draft Team Id <br>Draft Team Market <br>Draft Team Name <br>Draft Year <br>Pick Id <br>Pick Number <br>Pick Overall </td>
<td style="width:170px">Round End Date <br>Round Id <br>Round Number <br>Round Start Date <br>Round Status <br>Trade Id </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>League Information Data Points:</b></td>
<td style="width:170px">Alias </td>
<td style="width:170px">Id </td>
<td style="width:170px">Name </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>Player Information Data Points:</b></td>
<td style="width:170px">Prospect Birth Place <br>Prospect Experience <br>Prospect First Name <br>Prospect Height </td>
<td style="width:170px">Prospect Id <br>Prospect Last Name <br>Prospect League Id <br>Prospect Name </td>
<td style="width:170px">Prospect Position <br>Prospect Source Id <br>Prospect Top Prospect <br>Prospect Weight </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>Team Information Data Points:</b></td>
<td style="width:170px">Alias <br>Id </td>
<td style="width:170px">Market </td>
<td style="width:170px">Name </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>Venue Information Data Points:</b></td>
<td style="width:170px">Address <br>City </td>
<td style="width:170px">Country <br>Name </td>
<td style="width:170px">State </td>
</tr>
</tbody>
</table>
<blockquote>
  <p>To generate the Draft Summary for 2018 replace {your_api_key} with your API key:</p>
</blockquote>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/draft/nba/trial/v1/en/2021/draft.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/draft/nba/trial/v1/en/2021/draft.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/draft/nba/trial/v1/en/2021/draft.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/NBA_Draft_Summary_Sample_v7.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/NBA_Draft_Summary_Sample_v7.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Draft Summary feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/draft/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/<code>{year}</code>/draft.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), or Trial (trial).</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the Draft API you are accessing (current version: v1). NOTE: All draft feeds are currently v1.</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English).</td>
</tr>
<tr>
<td><code>year</code></td>
<td>Year in 4 digit format (YYYY).</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for the Draft Summary, use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/draft/summary-v1.0.xsd">https://feed.elasticstats.com/schema/draft/summary-v1.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="free-agents">Free Agents</h2>
<p>Detailed player information for all current free agents in the league.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Info Data Points:</b></td>
<td style="width:170px">League Alias </td>
<td style="width:170px">League Id </td>
<td style="width:170px">League Name </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Info Data Points:</b></td>
<td>Abbreviated Name <br>Birth Date <br>Birth Place <br>College <br>Experience <br>First Name <br>Full Name </td>
<td>High School <br>Height (in) <br>Jersey Number <br>Last Name <br>Name Suffix <br>Player Id <br>Position </td>
<td>Primary Position <br>Reference <br>Rookie Year <br>SR Id <br>Status <br>Updated <br>Weight (lbs) </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/league/free_agents.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/league/free_agents.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/league/free_agents.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_free_agents_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_free_agents_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Free Agents feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/league/free_agents.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production) or Trial (trial)</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for the Free Agents use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/free-agents-v7.0.xsd">https://feed.elasticstats.com/schema/basketball/free-agents-v7.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="game-boxscore">Game Boxscore</h2>
<p>Top-level team scores by quarter, along with full statistics for each teams’ leaders in points, rebounds, and assists.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">Real-time</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Game Info Data Points:</b></td>
<td style="width:170px">Away Team Id <br>Game Clock <br>Game Coverage <br>Game Duration <br>Game Id <br>Game Quarter </td>
<td style="width:170px">Game Reference <br>Game SR Id <br>Game Status <br>Game Title <br>Home Team Id </td>
<td style="width:170px">Neutral Site <br>Scheduled Date And Time <br>Time Zones Away Team <br>Time Zones Home <br>Time Zones Venue <br>Track on Court </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Boxscore Data Points:</b></td>
<td>Attendance <br>Lead Changes <br>Scoreboard - Away Team Bonus Flag <br>Scoreboard - Away Team Game Score <br>Scoreboard - Away Team Id <br>Scoreboard - Away Team Market <br>Scoreboard - Away Team Name <br>Scoreboard - Away Team Quarter Score <br>Scoreboard - Away Team Reference <br>Scoreboard - Away Team SR Id <br>Scoreboard - Home Bonus Flag </td>
<td>Scoreboard - Home Team Flag <br>Scoreboard - Home Team Game Score <br>Scoreboard - Home Team Id <br>Scoreboard - Home Team Market <br>Scoreboard - Home Team Name <br>Scoreboard - Home Team Quarter Score <br>Scoreboard - Home Team Reference <br>Scoreboard - Home Team SR Id <br>Scoreboard - Quarter Number <br>Scoreboard - Quarter Sequence <br>Team Assists Leader - Player Full Name </td>
<td>Team Assists Leader - Player Id <br>Team Assists Leader - Player Reference <br>Team Assists Leader - Player SR Id <br>Team Points Leader - Player Full Name <br>Team Points Leader - Player Id <br>Team Points Leader - Player Reference <br>Team Points Leader - Player SR Id <br>Team Rebounds Leader - Player Full Name <br>Team Rebounds Leader - Player Id <br>Team Rebounds Leader - Player Reference <br>Team Rebounds Leader - Player SR Id <br>Times Tied </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>Team Info Data Points:</b></td>
<td style="width:170px">Alias <br>Id </td>
<td style="width:170px">Market <br>Name </td>
<td style="width:170px">Reference <br>SR Id </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Info Data Points:</b></td>
<td>Full Name <br>Jersey Number <br>Player Id </td>
<td>Position <br>Primary Position </td>
<td>Reference <br>SR Id </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Game Statistics Data Points:</b></td>
<td style="width:170px">Assists <br>Assists To Turnover Ratio <br>Blocked Attempts <br>Blocked Shots <br>Defensive Rebounds <br>Double Double <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency Game Score <br>Field Goal Attempts <br>Field Goal Percentage <br>Field Goals Made <br>Flagrant Fouls <br>Fouls Drawn </td>
<td style="width:170px">Free Throw Attempts <br>Free Throw Percentage <br>Free Throws Made <br>Minutes Played <br>Offensive Fouls <br>Offensive Rebounds <br>Personal Fouls <br>Plus/Minus <br>Points <br>Points in the Paint <br>Points in the Paint Attempts <br>Points in the Paint Made <br>Points in the Paint Percentage </td>
<td style="width:170px">Points Off Turnovers <br>Rebounds <br>Second Chance Points <br>Steals <br>Technical Fouls <br>Technical Fouls - Non-Unsportsmanlike <br>Three Point Attempts <br>Three Point Percentage <br>Three Points Made <br>Triple Double <br>True Shooting Attempts <br>True Shooting Percentage <br>Turnovers <br>Two Point Attempts <br>Two Point Percentage <br>Two Points Made </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/games/1af034f5-e46e-4b8a-9c82-f91b41f6098e/boxscore.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/games/1af034f5-e46e-4b8a-9c82-f91b41f6098e/boxscore.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/games/1af034f5-e46e-4b8a-9c82-f91b41f6098e/boxscore.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_game_boxscore_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_game_boxscore_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Game Boxscore feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/games/<code>{game_id}</code>/boxscore.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), Trial (trial), or Simulation (simulation).</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>game_id</code></td>
<td>ID for a given game.</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for the Game Boxscore use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/game-v7.0.xsd">https://feed.elasticstats.com/schema/basketball/game-v7.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="game-summary">Game Summary</h2>
<p>Top-level boxscore information, along with detailed game stats at the team and player levels.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">Real-time</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Game Info Data Points:</b></td>
<td style="width:170px">Away Team Id <br>Game Clock <br>Game Coverage <br>Game Duration <br>Game Id </td>
<td style="width:170px">Game Quarter <br>Game SR Id <br>Game Status <br>Game Title <br>Home Team Id </td>
<td style="width:170px">Neutral Site <br>Scheduled Date And Time <br>Time Zones Away Team <br>Time Zones Home <br>Time Zones Venue <br>Track on Court </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Boxscore Info Data Points:</b></td>
<td>Attendance <br>Game Officials - Assignment <br>Game Officials - Experience <br>Game Officials - First Name <br>Game Officials - Full Name <br>Game Officials - Id <br>Game Officials - Last Name <br>Game Officials - Number <br>Lead Changes <br>Lineups - Active For Game <br>Lineups - Ejected <br>Lineups - Fouled Out </td>
<td>Lineups - Not Playing Reason <br>Lineups - On Court <br>Lineups - Played <br>Lineups - Started <br>Scoreboard - Away Team Bonus Flag <br>Scoreboard - Away Team Game Score <br>Scoreboard - Away Team Id <br>Scoreboard - Away Team Market <br>Scoreboard - Away Team Name <br>Scoreboard - Away Team Quarter Score <br>Scoreboard - Away Team Reference </td>
<td>Scoreboard - Away Team SR Id <br>Scoreboard - Home Team Bonus Flag <br>Scoreboard - Home Team Flag <br>Scoreboard - Home Team Game Score <br>Scoreboard - Home Team Id <br>Scoreboard - Home Team Market <br>Scoreboard - Home Team Name <br>Scoreboard - Home Team Quarter Score <br>Scoreboard - Home Team Reference <br>Scoreboard - Home Team SR Id <br>Scoreboard - Quarter Number <br>Scoreboard - Quarter Sequence <br>Times Tied </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>Team Info Data Points:</b></td>
<td style="width:170px">Alias <br>Coach - First Name <br>Coach - Full Name <br>Coach - Id </td>
<td style="width:170px">Coach - Last Name <br>Coach - Position <br>Coach - Reference <br>Id </td>
<td style="width:170px">Market <br>Name <br>Reference <br>SR Id </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Info Data Points:</b></td>
<td style="width:170px">First Name <br>Full Name <br>Jersey Number <br>Last Name </td>
<td style="width:170px">Name Suffix <br>Player Id <br>Position </td>
<td style="width:170px">Primary Position <br>Reference <br>SR Id </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>Player Period Statistics Data Points:</b></td>
<td style="width:170px">Assists <br>Assists To Turnover Ratio <br>Blocked Attempts <br>Blocked Shots <br>Coach Ejections <br>Coach Tech Fouls <br>Defensive Rating <br>Defensive Rebounds <br>Defensive Rebounds Percentage <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency Game Score <br>Fast Break Attempts <br>Fast Break Made <br>Fast Break Percentage <br>Fast Break Points <br>Field Goal Attempts <br>Field Goal Percentage <br>Field Goals Made <br>Flagrant Fouls <br>Fouls Drawn <br>Free Throw Attempts </td>
<td style="width:170px">Free Throw Percentage <br>Free Throws Made <br>Minus <br>Minutes Played <br>Offensive Fouls <br>Offensive Rating <br>Offensive Rebounds <br>Offensive Rebounds Percentage <br>Personal Fouls <br>Period Id <br>Period Number <br>Period Type <br>Period Sequence <br>Plus <br>Plus/Minus <br>Points <br>Points in the Paint <br>Points in the Paint Attempts <br>Points in the Paint Made <br>Points in the Paint Percentage </td>
<td style="width:170px">Points Off Turnovers <br>Rebounds <br>Rebounds Percentage <br>Second Chance Attempts <br>Second Chance Made <br>Second Chance Percentage <br>Second Chance Points <br>Steals <br>Steals Percentage <br>Technical Fouls <br>Technical Fouls - Non-Unsportsmanlike <br>Three Point Attempts <br>Three Point Percentage <br>Three Points Made <br>True Shooting Attempts <br>True Shooting Percentage <br>Turnovers <br>Turnovers Percentage <br>Two Point Attempts <br>Two Point Percentage <br>Two Points Made </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>Team Period Statistics Data Points:</b></td>
<td style="width:170px">Assists <br>Assists To Turnover Ratio <br>Bench Points <br>Biggest Lead <br>Blocked Attempts <br>Blocked Shots <br>Coach Ejections <br>Coach Technical Fouls <br>Defensive Points per Possession <br>Defensive Rating <br>Defensive Rebounds <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency Game Score <br>Ejections <br>Fast Break Attempts <br>Fast Break Made <br>Fast Break Percentage <br>Fast Break Points <br>Field Goal Attempts <br>Field Goal Percentage <br>Field Goals Made <br>Flagrant Fouls <br>Fouls Drawn <br>Free Throw Attempts </td>
<td style="width:170px">Free Throw Percentage <br>Free Throws Made <br>Minutes Played <br>Offensive Fouls <br>Offensive Points per Possession <br>Offensive Rating <br>Offensive Rebounds <br>Opponent Possessions <br>Pace <br>Period Id <br>Period Number <br>Period Sequence <br>Period Type <br>Personal Fouls <br>Player Technical Fouls <br>Plus/Minus <br>Points <br>Points Against <br>Points in the Paint <br>Points in the Paint Attempts <br>Points in the Paint Percentage <br>Points in the Paint Made <br>Points off Turnovers <br>Possessions <br>Rebounds <br>Second Chance Attempts <br>Second Chance Made </td>
<td style="width:170px">Second Chance Percentage <br>Second Chance Points <br>Steals <br>Team Defensive Rebounds <br>Team Fouls <br>Team Offensive Rebounds <br>Team Rebounds <br>Team Technical Fouls <br>Team Turnovers <br>Technical Other <br>Three Point Attempts <br>Three Point Percentage <br>Three Points Made <br>Time Leading <br>Total Fouls <br>Total Rebounds <br>True Shooting Attempts <br>True Shooting Percentage <br>Turnovers <br>Two Point Attempts <br>Two Point Percentage <br>Two Points Made </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Game Statistics Data Points:</b></td>
<td>Assists <br>Assists To Turnover Ratio <br>Blocked Attempts <br>Blocked Shots <br>Coach Ejections <br>Coach Tech Fouls <br>Defensive Rating <br>Defensive Rebounds <br>Defensive Rebounds Percentage <br>Double Double <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency Game Score <br>Fast Break Attempts <br>Fast Break Made <br>Fast Break Percentage <br>Fast Break Points <br>Field Goal Attempts <br>Field Goal Percentage <br>Field Goals Made <br>Flagrant Fouls <br>Fouled Out </td>
<td>Fouls Drawn <br>Free Throw Attempts <br>Free Throw Percentage <br>Free Throws Made <br>Games Played <br>Games Started <br>Minus <br>Minutes Played <br>Offensive Fouls <br>Offensive Rating <br>Offensive Rebounds <br>Offensive Rebounds Percentage <br>Personal Fouls <br>Plus <br>Plus/Minus <br>Points <br>Points in the Paint <br>Points in the Paint Attempts <br>Points in the Paint Made <br>Points in the Paint Percentage </td>
<td>Points Off Turnovers <br>Rebounds <br>Rebounds Percentage <br>Second Chance Attempts <br>Second Chance Made <br>Second Chance Percentage <br>Second Chance Points <br>Steals <br>Steals Percentage <br>Technical Fouls <br>Technical Fouls - Non-Unsportsmanlike <br>Three Point Attempts <br>Three Point Percentage <br>Three Points Made <br>Triple Double <br>True Shooting Attempts <br>True Shooting Percentage <br>Turnovers <br>Turnovers Percentage <br>Two Point Attempts <br>Two Point Percentage <br>Two Points Made </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Game Statistics Data Points:</b></td>
<td style="width:170px">Assists <br>Assists To Turnover Ratio <br>Bench Points <br>Biggest Lead <br>Blocked Attempts <br>Blocked Shots <br>Coach Ejections <br>Coach Technical Fouls <br>Defensive Points per Possession <br>Defensive Rating <br>Defensive Rebounds <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency Game Score <br>Ejections <br>Fast Break Attempts <br>Fast Break Made <br>Fast Break Percentage <br>Fast Break Points <br>Field Goal Attempts <br>Field Goal Percentage <br>Field Goals Made <br>Flagrant Fouls <br>Foul Outs <br>Fouls Drawn </td>
<td style="width:170px">Free Throw Attempts <br>Free Throw Percentage <br>Free Throws Made <br>Minutes Played <br>Most Unanswered - Opponent Score <br>Most Unanswered - Own Score <br>Most Unanswered - Points <br>Offensive Fouls <br>Offensive Points per Possession <br>Offensive Rating <br>Offensive Rebounds <br>Opponent Possessions <br>Pace <br>Personal Fouls <br>Player Technical Fouls <br>Plus/Minus <br>Points <br>Points Against <br>Points in the Paint <br>Points in the Paint Attempts <br>Points in the Paint Percentage <br>Points in the Paint Made <br>Points off Turnovers <br>Possessions <br>Rebounds <br>Second Chance Attempts </td>
<td style="width:170px">Second Chance Made <br>Second Chance Percentage <br>Second Chance Points <br>Steals <br>Team Defensive Rebounds <br>Team Fouls <br>Team Offensive Rebounds <br>Team Rebounds <br>Team Technical Fouls <br>Team Turnovers <br>Technical Other <br>Three Point Attempts <br>Three Point Percentage <br>Three Points Made <br>Time Leading <br>Total Fouls <br>Total Rebounds <br>True Shooting Attempts <br>True Shooting Percentage <br>Turnovers <br>Two Point Attempts <br>Two Point Percentage <br>Two Points Mad  </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Venue Data Points:</b></td>
<td style="width:170px">Address <br>Capacity <br>City <br>Country </td>
<td style="width:170px">Description <br>Name <br>SR Id </td>
<td style="width:170px">State <br>Venue Id <br>Zip </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/games/1af034f5-e46e-4b8a-9c82-f91b41f6098e/summary.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/games/1af034f5-e46e-4b8a-9c82-f91b41f6098e/summary.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/games/1af034f5-e46e-4b8a-9c82-f91b41f6098e/summary.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_game_summary_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_game_summary_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Game Summary feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/games/<code>{game_id}</code>/summary.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), Trial (trial), or Simulation (simulation).</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>game_id</code></td>
<td>ID for a given game.</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for the Game Summary use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/game-v7.0.xsd">https://feed.elasticstats.com/schema/basketball/game-v7.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="injuries">Injuries</h2>
<p>Information concerning all active player injuries for each NBA team.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Data Points:</b></td>
<td style="width:170px">League Alias </td>
<td style="width:170px">League Id </td>
<td style="width:170px">League Name </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Info Data Points:</b></td>
<td>First Name <br>Full Name <br>Injuries - Injury Comment <br>Injuries - Injury Description <br>Injuries - Injury Id </td>
<td>Injuries - Injury Start Date <br>Injuries - Injury Status <br>Injuries - Update Date <br>Jersey Number <br>Last Name </td>
<td>Name Suffix <br>Player Id <br>Position <br>Primary Position <br>Reference <br>SR Id </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Info Data Points:</b></td>
<td style="width:170px">Id <br>Market </td>
<td style="width:170px">Name <br>Reference </td>
<td style="width:170px">SR Id </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/league/injuries.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/league/injuries.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/league/injuries.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_injuries_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_injuries_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Injuries feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/league/injuries.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), Trial (trial), or Simulation (simulation).</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for Injuries, use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/injuries-v2.0.xsd">https://feed.elasticstats.com/schema/basketball/injuries-v2.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="league-hierarchy">League Hierarchy</h2>
<p>League, conference, division, and team identification and association information.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Info Data Points:</b></td>
<td style="width:170px">Conference Alias <br>Conference Id <br>Conference Name </td>
<td style="width:170px">Division Alias <br>Division Id <br>Division Name </td>
<td style="width:170px">League Alias <br>League Id <br>League Name </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Info Data Points:</b></td>
<td>Alias <br>Id </td>
<td>Market <br>Name </td>
<td>Reference <br>SR Id </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Venue Info Data Points:</b></td>
<td style="width:170px">Address <br>Capacity <br>City <br>Country </td>
<td style="width:170px">Description <br>Name <br>SR Id </td>
<td style="width:170px">State <br>Venue Id <br>Zip </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/league/hierarchy.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/league/hierarchy.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/league/hierarchy.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_league_hierarchy_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_league_hierarchy_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the League Hierarcy feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/league/hierarchy.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), Trial (trial), or Simulation (simulation).</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for League Hierarchy, use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/nba/hierarchy-v5.0.xsd">https://feed.elasticstats.com/schema/basketball/nba/hierarchy-v5.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="league-leaders">League Leaders</h2>
<p>NBA leader information for various offensive and defensive categories including full player seasonal statistics for each player in each category.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Info Data Points:</b></td>
<td style="width:170px">Season Id </td>
<td style="width:170px">Season Type </td>
<td style="width:170px">Season Year </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Leaders Data Points:</b></td>
<td>Assists <br>Assists Per Game <br>Blocked Attempts <br>Blocked Attempts Per Game <br>Blocked Shots <br>Blocked Shots Per Game <br>Category Name <br>Category Type <br>Defensive Rebounds <br>Defensive Rebounds Per Game <br>Field Goal Attempts <br>Field Goal Attempts Per Game <br>Field Goal Percentage <br>Field Goals Made <br>Field Goals Made Per Game <br>Foulouts <br>Free Throw Attempts <br>Free Throw Attempts Per Game </td>
<td>Free Throw Percentage <br>Free Throws Made <br>Free Throws Made Per Game <br>Leaders Alias <br>Leaders Id <br>Leaders Name <br>Leaders SR Id <br>Minutes Played <br>Minutes Played Per Game <br>Offensive Rebounds <br>Offensive Rebounds Per Game <br>Personal Fouls <br>Personal Fouls Per Game <br>Player Rank <br>Points <br>Points Per Game <br>Rebounds <br>Rebounds Per Game </td>
<td>Stat Category <br>Steals <br>Steals Per Game <br>Technical Fouls <br>Three Point Attempts <br>Three Point Attempts Per Game <br>Three Point Percentage <br>Three Points Made <br>Three Points Made Per Game <br>Tied Flag <br>Turnovers <br>Turnovers Per Game <br>Two Point Attempts <br>Two Point Attempts Per Game <br>Two Point Percentage <br>Two Points Made <br>Two Points Made Per Game </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Info Data Points:</b></td>
<td>First Name <br>Full Name <br>Jersey Number <br>Last Name </td>
<td>Name Suffix <br>Player Id <br>Position </td>
<td>Primary Position <br>Reference <br>SR Id </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Season Statistics Data Points:</b></td>
<td style="width:170px">Assists <br>Assists Per Game <br>Assists to Turnover Ratio <br>Blocked Attempts <br>Blocked Attempts Per Game <br>Blocked Shots <br>Blocked Shots Per Game <br>Coach Ejections <br>Coach Tech Fouls <br>Defensive Rebounds <br>Defensive Rebounds Per Game <br>Double Doubles <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency Per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts Per Game <br>Fast Break Made <br>Fast Break Made Per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points Per Game <br>Field Goal Attempts <br>Field Goal Attempts Per Game <br>Field Goal Percentage <br>Field Goals Made <br>Field Goals Made Per Game <br>Flagrant Fouls <br>Flagrant Fouls Per Game </td>
<td style="width:170px">Fouled Out <br>Fouls Drawn <br>Fouls Drawn Per Game <br>Free Throw Attempts <br>Free Throw Attempts Per Game <br>Free Throw Percentage <br>Free Throws Made <br>Free Throws Made Per Game <br>Games Played <br>Games Started <br>Minus <br>Minutes Played <br>Minutes Played Per Game <br>Offensive Fouls <br>Offensive Fouls Per Game <br>Offensive Rebounds <br>Offensive Rebounds Per Game <br>Personal Fouls <br>Personal Fouls Per Game <br>Plus <br>Points <br>Points in the Paint <br>Points in the Paint Attempts <br>Points in the Paint Attempts Per Game <br>Points in the Paint Made <br>Points in the Paint Made Per Game <br>Points in the Paint Per Game <br>Points in the Paint Percentage <br>Points Off Turnovers </td>
<td style="width:170px">Points Off Turnovers Per Game <br>Points Per Game <br>Rebounds <br>Rebounds Per Game <br>Second Chance Attempts <br>Second Chance Attempts Per Game <br>Second Chance Made <br>Second Chance Made Per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points Per Game <br>Steals <br>Steals Per Game <br>Technical Fouls <br>Technical Fouls - Non-Unsportsmanlike <br>Three Point Attempts <br>Three Point Attempts Per Game <br>Three Point Percentage <br>Three Points Made <br>Three Points Made Per Game <br>Triple Doubles <br>True Shooting Attempts <br>True Shooting Attempts Per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers Per Game <br>Two Point Attempts <br>Two Point Attempts Per Game <br>Two Point Percentage <br>Two Points Made <br>Two Points Made Per Game </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Data Points:</b></td>
<td style="width:170px">Id <br>Market </td>
<td style="width:170px">Name <br>Reference </td>
<td style="width:170px">SR Id </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/seasons/2021/REG/leaders.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/seasons/2021/REG/leaders.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/seasons/2021/REG/leaders.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_league_leaders_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_league_leaders_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the League Leaders feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/seasons/<code>{season_year}</code>/<code>{nba_season}</code>/leaders.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production) or Trial (trial)</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>season_year</code></td>
<td>Year in 4 digit format (YYYY).</td>
</tr>
<tr>
<td><code>nba_season</code></td>
<td>Preseason (PRE), Regular Season (REG), Play in Tournament (PIT), In-Season Tournament (IST), or Postseason (PST).</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for League Leaders use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/statistics-v3.0.xsd">https://feed.elasticstats.com/schema/basketball/statistics-v3.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="play-by-play">Play-By-Play</h2>
<p>Detailed, real-time information on every team possession and game event.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">Real-time</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Game Info Data Points:</b></td>
<td style="width:170px">Away Team Alias <br>Away Team Id <br>Away Team Name <br>Away Team Reference <br>Away Team SR Id <br>Entry Mode <br>Game Clock <br>Game Coverage <br>Game Duration <br>Game Id <br>Game Quarter </td>
<td style="width:170px">Game SR Id <br>Game Status <br>Game Title <br>Home Team Alias <br>Home Team Id <br>Home Team Name <br>Home Team Reference <br>Home Team SR Id </td>
<td style="width:170px">Neutral Site <br>Scheduled Date And Time <br>Time Zones Away Team <br>Time Zones Home Team <br>Time Zones Venue <br>Track on Court </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Boxscore Info Data Points:</b></td>
<td>Attendance </td>
<td>Lead Changes </td>
<td>Times Tied </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Play-By-Play Data Points:</b></td>
<td>Attribution - Team Id <br>Attribution - Team Market <br>Attribution - Team Name <br>Attribution - Team Reference <br>Attribution - Team SR Id <br>Away Team Alias <br>Away Team Bonus <br>Away Team Game Score <br>Away Team Id <br>Away Team Market <br>Away Team Name <br>Away Team Quarter Score <br>Away Team Reference <br>Away Team SR Id <br>Basket Team is Attacking <br>Clock Decimal <br>Event Attempt <br>Event Away Points <br>Event Clock <br>Event Description <br>Event Free Throw Type <br>Event Home Points <br>Event Id <br>Event Action Area <br>Event Location - X Coordinate <br>Event Location - Y Coordinate <br>Event Number <br>Event Participants - Player Full Name <br>Event Participants - Player Id <br>Event Participants - Player Jersey Number </td>
<td>Event Participants - Player Reference <br>Event Participants - Player SR Id <br>Event Participants - Team Id <br>Event Participants - Team Market <br>Event Participants - Team Name <br>Event Participants - Team Reference <br>Event Participants - Team SR Id <br>Event Qualifier Name <br>Event Qualifiers<br>Event Sequence <br>Event Shot Type <br>Event Shot Type Description <br>Event Turnover Type <br>Event Type <br>Event Updated <br>Event Wall Clock <br>Fieldgoal - Made Flag <br>Fieldgoal - Points <br>Fieldgoal - Shot Distance <br>Fieldgoal - Shot Type <br>Fieldgoal - Shot Type Description <br>Fieldgoal - Three Point Shot <br>Freethrow - Made Flag <br>Freethrow - Points <br>Freethrow - Free Throw Type <br>Home Team Alias <br>Home Team Bonus <br>Home Team Game Score <br>Home Team Id <br>Home Team Market </td>
<td>Home Team Name <br>Home Team Quarter Score <br>Home Team Reference <br>Home Team SR Id <br>On Court Participants - Player Full Name <br>On Court Participants - Player Id <br>On Court Participants - Player Jersey Number <br>On Court Participants - Player Reference <br>On Court Participants - Player SR Id <br>On Court Participants - Team Id <br>On Court Participants - Team Market <br>On Court Participants - Team Name <br>On Court Participants - Team Reference <br>On Court Participants - Team SR Id <br>Overtime Id <br>Overtime Number <br>Overtime Sequence <br>Possession - Team Id <br>Possession - Team Market <br>Possession - Team Name <br>Possession - Team Reference <br>Possession - Team SR Id<br>Quarter Id <br>Quarter Number <br>Quarter Sequence <br>Rebound - Rebound Type <br>Scoring Times Tied <br>Scoring Lead Changes </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/games/1af034f5-e46e-4b8a-9c82-f91b41f6098e/pbp.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/games/1af034f5-e46e-4b8a-9c82-f91b41f6098e/pbp.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/games/1af034f5-e46e-4b8a-9c82-f91b41f6098e/pbp.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_pbp_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_pbp_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Play-By-Play feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/games/<code>{game_id}</code>/pbp.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), Trial (trial), or Simulation (simulation).</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>game_id</code></td>
<td>ID for a given game.</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for Play-By-Play, use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/pbp-v7.0.xsd">https://feed.elasticstats.com/schema/basketball/pbp-v7.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="player-profile">Player Profile</h2>
<p>Provides player biographical information, draft information, and seasonal statistics for the regular season.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Info Data Points:</b></td>
<td style="width:170px">League Alias <br>League Id </td>
<td style="width:170px">League Name <br>Season Id </td>
<td style="width:170px">Season Type <br>Season Year </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Info Data Points:</b></td>
<td>Abbreviated Name <br>Birth Date <br>Birth Place <br>College <br>Draft Pick <br>Draft Round <br>Draft Team <br>Draft Year </td>
<td>Experience <br>First Name <br>Full Name <br>Height (in) <br>High School <br>Jersey Number <br>Last Name <br>Name Suffix <br>Player Id </td>
<td>Position <br>Primary Position <br>Reference <br>Rookie Year <br>SR Id <br>Status <br>Update Date <br>Weight (lbs) </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Seasonal Statistics Data Points:</b></td>
<td>Assists <br>Assists Per Game <br>Assists to Turnover Ratio <br>Blocked Attempts <br>Blocked Attempts Per Game <br>Blocked Shots <br>Blocked Shots Per Game <br>Coach Ejections <br>Coach Tech Fouls <br>Defensive Rebounds <br>Defensive Rebounds Per Game <br>Double Doubles <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency Per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts Per Game <br>Fast Break Made <br>Fast Break Made Per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points Per Game <br>Field Goal Attempts <br>Field Goal Attempts Per Game <br>Field Goal Percentage <br>Field Goals Made <br>Field Goals Made Per Game <br>Flagrant Fouls <br>Flagrant Fouls Per Game </td>
<td>Fouled Out <br>Fouls Drawn <br>Fouls Drawn Per Game <br>Free Throw Attempts <br>Free Throw Attempts Per Game <br>Free Throw Percentage <br>Free Throws Made <br>Free Throws Made Per Game <br>Games Played <br>Games Started <br>Minus <br>Minutes Played <br>Minutes Played Per Game <br>Offensive Fouls <br>Offensive Fouls Per Game <br>Offensive Rebounds <br>Offensive Rebounds Per Game <br>Personal Fouls <br>Personal Fouls Per Game <br>Plus <br>Points <br>Points in the Paint <br>Points in the Paint Attempts <br>Points in the Paint Attempts Per Game <br>Points in the Paint Made <br>Points in the Paint Made Per Game <br>Points in the Paint Per Game <br>Points in the Paint Percentage <br>Points Off Turnovers </td>
<td>Points Off Turnovers Per Game <br>Points Per Game <br>Rebounds <br>Rebounds Per Game <br>Second Chance Attempts <br>Second Chance Attempts Per Game <br>Second Chance Made <br>Second Chance Made Per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points Per Game <br>Steals <br>Steals Per Game <br>Technical Fouls <br>Technical Fouls - Non-Unsportsmanlike <br>Three Point Attempts <br>Three Point Attempts Per Game <br>Three Point Percentage <br>Three Points Made <br>Three Points Made Per Game <br>Triple Doubles <br>True Shooting Attempts <br>True Shooting Attempts Per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers Per Game <br>Two Point Attempts <br>Two Point Attempts Per Game <br>Two Point Percentage <br>Two Points Made <br>Two Points Made Per Game </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Info Data Points:</b></td>
<td style="width:170px">Alias <br>Id </td>
<td style="width:170px">Market <br>Name </td>
<td style="width:170px">Reference <br>SR Id </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/players/8ec91366-faea-4196-bbfd-b8fab7434795/profile.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/players/8ec91366-faea-4196-bbfd-b8fab7434795/profile.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/players/8ec91366-faea-4196-bbfd-b8fab7434795/profile.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_player_profile_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_player_profile_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Player Profile feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/players/<code>{player_id}</code>/profile.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production) or Trial (trial).</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>player_id</code></td>
<td>ID for a given player.</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for the Player Profile, use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/profile-v7.0.xsd">https://feed.elasticstats.com/schema/basketball/profile-v7.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="prospects">Prospects</h2>
<p>Provides a list of upcoming or historical draft prospects for a given year.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">Raw XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Draft Information Data Points:</b></td>
<td style="width:170px">Broadcast Channel <br>Broadcast Internet <br>Broadcast Network <br>Draft End Date </td>
<td style="width:170px">Draft Id <br>Draft Start Date <br>Draft Status <br>Draft Team Alias </td>
<td style="width:170px">Draft Team Id <br>Draft Team Market <br>Draft Team Name <br>Draft Year </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>League Information Data Points:</b></td>
<td style="width:170px">Alias <br>Conference Alias <br>Conference Id </td>
<td style="width:170px">Conference Name <br>Division Alias <br>Division Id </td>
<td style="width:170px">Division Name <br>Id <br>Name </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>Player Information Data Points:</b></td>
<td style="width:170px">Prospect Birth Place <br>Prospect Experience <br>Prospect First Name <br>Prospect Height <br>Prospect Id </td>
<td style="width:170px">Prospect Last Name <br>Prospect League Id <br>Prospect Name <br>Prospect Position </td>
<td style="width:170px">Prospect Source Id <br>Prospect Top Prospect <br>Prospect Weight </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>Team Information Data Points:</b></td>
<td style="width:170px">Alias <br>Id </td>
<td style="width:170px">Market </td>
<td style="width:170px">Name </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>Venue Information Data Points:</b></td>
<td style="width:170px">Address <br>City </td>
<td style="width:170px">Country <br>Name </td>
<td style="width:170px">State </td>
</tr>
</tbody>
</table>
<blockquote>
  <p>To generate the Prospects for the year below replace {your_api_key} with your API key:</p>
</blockquote>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/draft/nba/trial/v1/en/2021/prospects.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/draft/nba/trial/v1/en/2021/prospects.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/draft/nba/trial/v1/en/2021/prospects.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/NBA_Prospects_Sample_v7.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/NBA_Prospects_Sample_v7.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Prospects feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/draft/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/<code>{year}</code>/prospects.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), or Trial (trial).</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the Draft API you are accessing (current version: v1). NOTE: All draft feeds are currently v1.</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English).</td>
</tr>
<tr>
<td><code>year</code></td>
<td>Year in 4 digit format (YYYY).</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for the Prospects use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/draft/prospects-v1.0.xsd">https://feed.elasticstats.com/schema/draft/prospects-v1.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="rankings">Rankings</h2>
<p>Conference and division rank for each team, including playoff clinching status.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Info Data Points:</b></td>
<td style="width:170px">Conference Alias <br>Conference Id <br>Conference Name <br>Division Alias </td>
<td style="width:170px">Division Id <br>Division Name <br>League Alias <br>League Id </td>
<td style="width:170px">League Name <br>Season Id <br>Season Type <br>Season Year </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Standings Info Data Points:</b></td>
<td>Conference Rank </td>
<td>Division Rank </td>
<td>Playoff Status </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Data Points:</b></td>
<td>Id <br>Market </td>
<td>Name <br>Reference </td>
<td>SR Id </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/seasons/2021/REG/rankings.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/seasons/2021/REG/rankings.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/seasons/2021/REG/rankings.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_rankings_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_rankings_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Rankings feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/seasons/<code>{season_year}</code>/<code>{nba_season}</code>/rankings.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), Trial (trial), or Simulation (simulation).</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>season_year</code></td>
<td>Year in 4 digit format (YYYY).</td>
</tr>
<tr>
<td><code>nba_season</code></td>
<td>Preseason (PRE), Regular Season (REG), In-Season Tournament (IST), or Postseason (PST).</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for Rankings, use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/nba/rankings-v3.0.xsd">https://feed.elasticstats.com/schema/basketball/nba/rankings-v3.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="schedule">Schedule</h2>
<p>Date, time, location, and other event details for every match-up taking place in the full league season.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Game Info Data Points:</b></td>
<td style="width:170px">Away Team Alias <br>Away Team Id <br>Away Team Name <br>Away Team Points <br>Away Team Reference <br>Away Team Seed Number <br>Away Team SR Id <br>Broadcast Cable <br>Broadcast Channel <br>Broadcast Internet <br>Broadcast Locale </td>
<td style="width:170px">Broadcast Network <br>Broadcast Radio <br>Broadcast Satellite <br>Broadcast Type <br>Game Coverage <br>Game Id <br>Game Reference <br>Game SR Id <br>Game Status <br>Game Title <br>Home Team Alias <br>Home Team Id </td>
<td style="width:170px">Home Team Name <br>Home Team Points <br>Home Team Reference <br>Home Team Seed Number <br>Home Team SR Id <br>Neutral Site <br>Scheduled Date and Time <br>Time Zones Away Team <br>Time Zones Home Team <br>Time Zones Venue <br>Track on Court </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Info Data Points:</b></td>
<td>League Alias <br>League Id </td>
<td>League Name <br>Season Id </td>
<td>Season Type <br>Season Year </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Venue Info Data Points:</b></td>
<td>Address <br>Capacity <br>City <br>Country </td>
<td>Description <br>Name <br>SR Id </td>
<td>State  <br>Venue Id <br>Zip </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/games/2021/REG/schedule.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/games/2021/REG/schedule.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/games/2021/REG/schedule.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_schedule_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_schedule_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Schedule feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/games/<code>{season_year}</code>/<code>{nba_season}</code>/schedule.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), Trial (trial), or Simulation (simulation).</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>season_year</code></td>
<td>Year in 4 digit format (YYYY).</td>
</tr>
<tr>
<td><code>nba_season</code></td>
<td>Preseason (PRE), Regular Season (REG), Play in Tournament (PIT), In-Season Tournament (IST), or Postseason (PST).</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for the Schedule use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/schedule-v5.0.xsd">https://feed.elasticstats.com/schema/basketball/schedule-v5.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="seasonal-statistics-season-to-date">Seasonal Statistics (Season To Date)</h2>
<p>Provides complete team and player seasonal statistics for a given season and season type.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Info Data Points:</b></td>
<td style="width:170px">Season Id </td>
<td style="width:170px">Season Type </td>
<td style="width:170px">Season Year </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Data Points:</b></td>
<td>First Name <br>Full Name <br>Jersey Number <br>Last Name</td>
<td>Name Suffix <br>Player Id <br>Position </td>
<td>Primary Position <br>Reference <br>SR Id </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Opponent Seasonal Statistics Data Points:</b></td>
<td>Assists <br>Assists Per Game <br>Assists To Turnover Ratio <br>Bench Points <br>Bench Points Per Game <br>Blocked Attempts <br>Blocked Attempts Per Game <br>Blocked Shots <br>Blocked Shots Per Game <br>Coach Ejections <br>Coach Technical Fouls <br>Defensive Rebounds <br>Defensive Rebounds Per Game <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts Per Game <br>Fast Break Made <br>Fast Break Made Per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points Per Game <br>Field Goal Attempts <br>Field Goal Attempts Per Game <br>Field Goal Percentage <br>Field Goals Made <br>Field Goals Made Per Game <br>Flagrant Fouls <br>Flagrant Fouls Per Game <br>Foul Outs </td>
<td>Fouls Drawn <br>Fouls Drawn Per Game <br>Free Throw Attempts <br>Free Throw Attempts Per Game <br>Free Throw Percentage <br>Free Throws Made <br>Free Throws Made Per Game <br>Games Played <br>Minutes Played <br>Minutes Played Per Game <br>Offensive Fouls <br>Offensive Fouls Per Game <br>Offensive Rebounds <br>Offensive Rebounds Per Game <br>Personal Fouls <br>Personal Fouls Per Game <br>Points <br>Points Against <br>Points in the Paint <br>Points in the Paint Attempts <br>Points in the Paint Attempts Per Game <br>Points in the Paint Made <br>Points in the Paint Made Per Game <br>Points in the Paint Per Game <br>Points in the Paint Percentage <br>Points off Turnovers <br>Points off Turnovers Per Game <br>Points Per Game <br>Rebounds <br>Rebounds Per Game <br>Second Chance Attempts </td>
<td>Second Chance Attempts Per Game <br>Second Chance Made <br>Second Chance Made Per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points Per Game <br>Steals <br>Steals Per Game <br>Technical Fouls <br>Technical Other <br>Team Defensive Rebounds <br>Team Fouls <br>Team Offensive Rebounds <br>Team Technical Fouls <br>Three Point Attempts <br>Three Point Attempts Per Game <br>Three Point Percentage <br>Three Points Made <br>Three Points Made Per Game <br>Total Fouls <br>Total Rebounds <br>True Shooting Attempts <br>True Shooting Attempts Per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers Per Game <br>Two Point Attempts <br>Two Point Attempts Per Game <br>Two Point Percentage <br>Two Points Made <br>Two Points Made Per Game </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Seasonal Statistics Data Points:</b></td>
<td style="width:170px">Assists <br>Assists Per Game <br>Assists to Turnover Ratio <br>Blocked Attempts <br>Blocked Attempts Per Game <br>Blocked Shots <br>Blocked Shots Per Game <br>Coach Ejections <br>Coach Tech Fouls <br>Defensive Rebounds <br>Defensive Rebounds Per Game <br>Double Doubles <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency Per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts Per Game <br>Fast Break Made <br>Fast Break Made Per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points Per Game <br>Field Goal Attempts <br>Field Goal Attempts Per Game <br>Field Goal Percentage <br>Field Goals Made <br>Field Goals Made Per Game <br>Flagrant Fouls <br>Flagrant Fouls Per Game </td>
<td style="width:170px">Fouled Out <br>Fouls Drawn <br>Fouls Drawn Per Game <br>Free Throw Attempts <br>Free Throw Attempts Per Game <br>Free Throw Percentage <br>Free Throws Made <br>Free Throws Made Per Game <br>Games Played <br>Games Started <br>Minus <br>Minutes Played <br>Minutes Played Per Game <br>Offensive Fouls <br>Offensive Fouls Per Game <br>Offensive Rebounds <br>Offensive Rebounds Per Game <br>Personal Fouls <br>Personal Fouls Per Game <br>Plus <br>Points <br>Points in the Paint <br>Points in the Paint Attempts <br>Points in the Paint Attempts Per Game <br>Points in the Paint Made <br>Points in the Paint Made Per Game <br>Points in the Paint Per Game <br>Points in the Paint Percentage <br>Points Off Turnovers <br>Points Off Turnovers Per Game </td>
<td style="width:170px">Points Per Game <br>Rebounds <br>Rebounds Per Game <br>Second Chance Attempts <br>Second Chance Attempts Per Game <br>Second Chance Made <br>Second Chance Made Per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points Per Game <br>Steals <br>Steals Per Game <br>Technical Fouls <br>Technical Fouls - Non-Unsportsmanlike <br>Three Point Attempts <br>Three Point Attempts Per Game <br>Three Point Percentage <br>Three Points Made <br>Three Points Made Per Game <br>Triple Doubles <br>True Shooting Attempts <br>True Shooting Attempts Per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers Per Game <br>Two Point Attempts <br>Two Point Attempts Per Game <br>Two Point Percentage <br>Two Points Made <br>Two Points Made Per Game </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Seasonal Statistics Data Points:</b></td>
<td style="width:170px">Assists <br>Assists Per Game <br>Assists To Turnover Ratio <br>Bench Points <br>Bench Points Per Game <br>Blocked Attempts <br>Blocked Attempts Per Game <br>Blocked Shots <br>Blocked Shots Per Game <br>Coach Ejections <br>Coach Technical Fouls <br>Defensive Rebounds <br>Defensive Rebounds Per Game <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts Per Game <br>Fast Break Made <br>Fast Break Made Per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points Per Game <br>Field Goal Attempts <br>Field Goal Attempts Per Game <br>Field Goal Percentage <br>Field Goals Made <br>Field Goals Made Per Game <br>Flagrant Fouls <br>Flagrant Fouls Per Game <br>Foul Outs </td>
<td style="width:170px">Fouls Drawn <br>Fouls Drawn Per Game <br>Free Throw Attempts <br>Free Throw Attempts Per Game <br>Free Throw Percentage <br>Free Throws Made <br>Free Throws Made Per Game <br>Games Played <br>Minutes Played <br>Minutes Played Per Game <br>Offensive Fouls <br>Offensive Fouls Per Game <br>Offensive Rebounds <br>Offensive Rebounds Per Game <br>Personal Fouls <br>Personal Fouls Per Game <br>Points <br>Points Against <br>Points in the Paint <br>Points in the Paint Attempts <br>Points in the Paint Attempts Per Game <br>Points in the Paint Made <br>Points in the Paint Made Per Game <br>Points in the Paint Per Game <br>Points in the Paint Percentage <br>Points off Turnovers <br>Points off Turnovers Per Game <br>Points Per Game <br>Rebounds <br>Rebounds Per Game <br>Second Chance Attempts <br>Second Chance Attempts Per Game </td>
<td style="width:170px">Second Chance Made <br>Second Chance Made Per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points Per Game <br>Steals <br>Steals Per Game <br>Technical Fouls <br>Technical Other <br>Team Defensive Rebounds <br>Team Fouls <br>Team Offensive Rebounds <br>Team Technical Fouls <br>Three Point Attempts <br>Three Point Attempts Per Game <br>Three Point Percentage <br>Three Points Made <br>Three Points Made Per Game <br>Total Fouls <br>Total Rebounds <br>True Shooting Attempts <br>True Shooting Attempts Per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers Per Game <br>Two Point Attempts <br>Two Point Attempts Per Game <br>Two Point Percentage <br>Two Points Made <br>Two Points Made Per Game </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Info Data Points:</b></td>
<td style="width:170px">Id <br>Market </td>
<td style="width:170px">Name <br>Reference </td>
<td style="width:170px">SR Id </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/seasons/2021/REG/teams/583eca2f-fb46-11e1-82cb-f4ce4684ea4c/statistics.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/seasons/2021/REG/teams/583eca2f-fb46-11e1-82cb-f4ce4684ea4c/statistics.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/seasons/2021/REG/teams/583eca2f-fb46-11e1-82cb-f4ce4684ea4c/statistics.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_seasonal_statistics_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_seasonal_statistics_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Seasonal Statistics feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/seasons/<code>{season_year}</code>/<code>{nba_season}</code>/teams/<code>{team_id}</code>/statistics.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), Trial (trial), or Simulation (simulation).</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>season_year</code></td>
<td>Year in 4 digit format (YYYY).</td>
</tr>
<tr>
<td><code>nba_season</code></td>
<td>Preseason (PRE), Regular Season (REG), Play in Tournament (PIT), In-Season Tournament (IST), or Postseason (PST).</td>
</tr>
<tr>
<td><code>team_id</code></td>
<td>ID for a given team.</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for Seasonal Statistics, use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/statistics-v3.0.xsd">https://feed.elasticstats.com/schema/basketball/statistics-v3.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="seasons">Seasons</h2>
<p>Provides a list of all available seasons, including preseasons and postseasons.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Info Data Points:</b></td>
<td style="width:170px">League Alias <br>League Id <br>League Name <br>Season End Date</td>
<td style="width:170px">Season Id <br>Season Start Date <br>Season Status </td>
<td style="width:170px">Season Type Code <br>Season Type Name <br>Season Year </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/league/seasons.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/league/seasons.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/league/seasons.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_seasons_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_seasons_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Seasons feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/league/seasons.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production) or Trial (trial)</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for Seasons use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/seasons-v6.0.xsd">https://feed.elasticstats.com/schema/basketball/seasons-v6.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="series-schedule">Series Schedule</h2>
<p>Playoff participant information as well as the date, time, location, and other event details for every match-up taking place for the entire playoffs.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Game Info Data Points:</b></td>
<td style="width:170px">Away Team Alias <br>Away Team Id <br>Away Team Name <br>Away Team Points <br>Away Team Reference <br>Away Team Seed Number <br>Away Team SR Id <br>Broadcast Cable <br>Broadcast Channel <br>Broadcast Internet <br>Broadcast Locale </td>
<td style="width:170px">Broadcast Network <br>Broadcast Radio <br>Broadcast Satellite <br>Broadcast Type <br>Game Coverage <br>Game Id <br>Game Reference <br>Game SR Id <br>Game Status <br>Game Title <br>Home Team Alias <br>Home Team Id </td>
<td style="width:170px">Home Team Name <br>Home Team Points <br>Home Team Reference <br>Home Team Seed Number <br>Home Team SR Id <br>Neutral Site <br>Scheduled Date and Time <br>Time Zones Away Team <br>Time Zones Home Team <br>Time Zones Venue <br>Track on Court </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Info Data Points:</b></td>
<td>League Alias <br>League Id </td>
<td>League Name <br>Season Id </td>
<td>Season Type <br>Season Year </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Series Info Data Points:</b></td>
<td>Participant - Name <br>Participant - Record <br>Participant - Seed <br>Round </td>
<td>Series Id <br>Series Title <br>Source Id <br>Source Title  </td>
<td>Source Round <br>Source Outcome <br>Start Date <br>Status  </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Info Data Points:</b></td>
<td style="width:170px">Alias <br>Id </td>
<td style="width:170px">Market <br>Name </td>
<td style="width:170px">Reference <br>SR Id </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Venue Info Data Points:</b></td>
<td style="width:170px">Address <br>Capacity <br>City <br>Country </td>
<td style="width:170px">Description <br>Name <br>SR Id </td>
<td style="width:170px">State <br>Venue Id <br>Zip </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/series/2020/PST/schedule.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/series/2020/PST/schedule.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/series/2020/PST/schedule.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_series_schedule_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_series_schedule_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Series Schedule feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/series/<code>{season_year}</code>/<code>{nba_season}</code>/schedule.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production) or Trial (trial)</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>season_year</code></td>
<td>Year in 4 digit format (YYYY).</td>
</tr>
<tr>
<td><code>nba_season</code></td>
<td>Regular Season (REG), In-Season Tournament (IST), or Postseason (PST).</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for the Series Schedule use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/schedule-v5.0.xsd">https://feed.elasticstats.com/schema/basketball/schedule-v5.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="series-statistics">Series Statistics</h2>
<p>Detailed team and player statistics for a given playoff series.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Series Info Data Points:</b></td>
<td style="width:170px">Series Id </td>
<td style="width:170px">Series Title </td>
<td style="width:170px">Series Status </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Info Data Points:</b></td>
<td>First Name <br>Full Name <br>Jersey Number <br>Last Name </td>
<td>Name Suffix <br>Player Id <br>Position </td>
<td>Primary Position <br>Reference <br>SR Id </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Opponent Seasonal Statistics Data Points:</b></td>
<td>Assists <br>Assists Per Game <br>Assists To Turnover Ratio <br>Bench Points <br>Bench Points Per Game <br>Blocked Attempts <br>Blocked Attempts Per Game <br>Blocked Shots <br>Blocked Shots Per Game <br>Coach Ejections <br>Coach Technical Fouls <br>Defensive Rebounds <br>Defensive Rebounds Per Game <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts Per Game <br>Fast Break Made <br>Fast Break Made Per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points Per Game <br>Field Goal Attempts <br>Field Goal Attempts Per Game <br>Field Goal Percentage <br>Field Goals Made <br>Field Goals Made Per Game <br>Flagrant Fouls <br>Flagrant Fouls Per Game <br>Foul Outs </td>
<td>Fouls Drawn <br>Fouls Drawn Per Game <br>Free Throw Attempts <br>Free Throw Attempts Per Game <br>Free Throw Percentage <br>Free Throws Made <br>Free Throws Made Per Game <br>Games Played <br>Minutes Played <br>Minutes Played Per Game <br>Offensive Fouls <br>Offensive Fouls Per Game <br>Offensive Rebounds <br>Offensive Rebounds Per Game <br>Personal Fouls <br>Personal Fouls Per Game <br>Points <br>Points Against <br>Points in the Paint <br>Points in the Paint Attempts <br>Points in the Paint Attempts Per Game <br>Points in the Paint Made <br>Points in the Paint Made Per Game <br>Points in the Paint Per Game <br>Points in the Paint Percentage <br>Points off Turnovers <br>Points off Turnovers Per Game <br>Points Per Game <br>Rebounds <br>Rebounds Per Game <br>Second Chance Attempts </td>
<td>Second Chance Attempts Per Game <br>Second Chance Made <br>Second Chance Made Per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points Per Game <br>Steals <br>Steals Per Game <br>Technical Fouls <br>Technical Other <br>Team Defensive Rebounds <br>Team Fouls <br>Team Offensive Rebounds <br>Team Technical Fouls <br>Three Point Attempts <br>Three Point Attempts Per Game <br>Three Point Percentage <br>Three Points Made <br>Three Points Made Per Game <br>Total Fouls <br>Total Rebounds <br>True Shooting Attempts <br>True Shooting Attempts Per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers Per Game <br>Two Point Attempts <br>Two Point Attempts Per Game <br>Two Point Percentage <br>Two Points Made <br>Two Points Made Per Game </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Seasonal Statistics Data Points:</b></td>
<td style="width:170px">Assists <br>Assists Per Game <br>Assists to Turnover Ratio <br>Blocked Attempts <br>Blocked Attempts Per Game <br>Blocked Shots <br>Blocked Shots Per Game <br>Coach Ejections <br>Coach Tech Fouls <br>Defensive Rebounds <br>Defensive Rebounds Per Game <br>Double Doubles <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency Per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts Per Game <br>Fast Break Made <br>Fast Break Made Per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points Per Game <br>Field Goal Attempts <br>Field Goal Attempts Per Game <br>Field Goal Percentage <br>Field Goals Made <br>Field Goals Made Per Game <br>Flagrant Fouls <br>Flagrant Fouls Per Game </td>
<td style="width:170px">Fouled Out <br>Fouls Drawn <br>Fouls Drawn Per Game <br>Free Throw Attempts <br>Free Throw Attempts Per Game <br>Free Throw Percentage <br>Free Throws Made <br>Free Throws Made Per Game <br>Games Played <br>Games Started <br>Minus <br>Minutes Played <br>Minutes Played Per Game <br>Offensive Fouls <br>Offensive Fouls Per Game <br>Offensive Rebounds <br>Offensive Rebounds Per Game <br>Personal Fouls <br>Personal Fouls Per Game <br>Plus <br>Points <br>Points in the Paint <br>Points in the Paint Attempts <br>Points in the Paint Attempts Per Game <br>Points in the Paint Made <br>Points in the Paint Made Per Game <br>Points in the Paint Per Game <br>Points in the Paint Percentage <br>Points Off Turnovers <br>Points Off Turnovers Per Game </td>
<td style="width:170px">Points Per Game <br>Rebounds <br>Rebounds Per Game <br>Second Chance Attempts <br>Second Chance Attempts Per Game <br>Second Chance Made <br>Second Chance Made Per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points Per Game <br>Steals <br>Steals Per Game <br>Technical Fouls <br>Technical Fouls - Non-Unsportsmanlike <br>Three Point Attempts <br>Three Point Attempts Per Game <br>Three Point Percentage <br>Three Points Made <br>Three Points Made Per Game <br>Triple Doubles <br>True Shooting Attempts <br>True Shooting Attempts Per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers Per Game <br>Two Point Attempts <br>Two Point Attempts Per Game <br>Two Point Percentage <br>Two Points Made <br>Two Points Made Per Game </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Seasonal Statistics Data Points:</b></td>
<td style="width:170px">Assists <br>Assists Per Game <br>Assists To Turnover Ratio <br>Bench Points <br>Bench Points Per Game <br>Blocked Attempts <br>Blocked Attempts Per Game <br>Blocked Shots <br>Blocked Shots Per Game <br>Coach Ejections <br>Coach Technical Fouls <br>Defensive Rebounds <br>Defensive Rebounds Per Game <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts Per Game <br>Fast Break Made <br>Fast Break Made Per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points Per Game <br>Field Goal Attempts <br>Field Goal Attempts Per Game <br>Field Goal Percentage <br>Field Goals Made <br>Field Goals Made Per Game <br>Flagrant Fouls <br>Flagrant Fouls Per Game <br>Foul Outs </td>
<td style="width:170px">Fouls Drawn <br>Fouls Drawn Per Game <br>Free Throw Attempts <br>Free Throw Attempts Per Game <br>Free Throw Percentage <br>Free Throws Made <br>Free Throws Made Per Game <br>Games Played <br>Minutes Played <br>Minutes Played Per Game <br>Offensive Fouls <br>Offensive Fouls Per Game <br>Offensive Rebounds <br>Offensive Rebounds Per Game <br>Personal Fouls <br>Personal Fouls Per Game <br>Points <br>Points Against <br>Points in the Paint <br>Points in the Paint Attempts <br>Points in the Paint Attempts Per Game <br>Points in the Paint Made <br>Points in the Paint Made Per Game <br>Points in the Paint Per Game <br>Points in the Paint Percentage <br>Points off Turnovers <br>Points off Turnovers Per Game <br>Points Per Game <br>Rebounds <br>Rebounds Per Game <br>Second Chance Attempts <br>Second Chance Attempts Per Game </td>
<td style="width:170px">Second Chance Made <br>Second Chance Made Per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points Per Game <br>Steals <br>Steals Per Game <br>Technical Fouls <br>Technical Other <br>Team Defensive Rebounds <br>Team Fouls <br>Team Offensive Rebounds <br>Team Technical Fouls <br>Three Point Attempts <br>Three Point Attempts Per Game <br>Three Point Percentage <br>Three Points Made <br>Three Points Made Per Game <br>Total Fouls <br>Total Rebounds <br>True Shooting Attempts <br>True Shooting Attempts Per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers Per Game <br>Two Point Attempts <br>Two Point Attempts Per Game <br>Two Point Percentage <br>Two Points Made <br>Two Points Made Per Game </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Data Points:</b></td>
<td style="width:170px">Id <br>Market </td>
<td style="width:170px">Name </td>
<td style="width:170px">SR Id </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/series/ede9d891-2f05-4baf-82ea-f813221aa052/teams/583ecefd-fb46-11e1-82cb-f4ce4684ea4c/statistics.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/series/ede9d891-2f05-4baf-82ea-f813221aa052/teams/583ecefd-fb46-11e1-82cb-f4ce4684ea4c/statistics.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/series/ede9d891-2f05-4baf-82ea-f813221aa052/teams/583ecefd-fb46-11e1-82cb-f4ce4684ea4c/statistics.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_series_statistics_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_series_statistics_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Series Statistics feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/series/<code>{series_id}</code>/teams/<code>{team_id}</code>/statistics.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production) or Trial (trial)</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>series id</code></td>
<td>ID of a given series.</td>
</tr>
<tr>
<td><code>team_id</code></td>
<td>ID for a given team.</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for Series Statistics use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/statistics-v3.0.xsd">https://feed.elasticstats.com/schema/basketball/statistics-v3.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="splits-game">Splits (Game)</h2>
<p>Detailed Team, Player, and Opponent game splits across various views including: Home Team, Loss, Vs Opponent, Overtime, Over 500, Road, Under 500, At Venue, and Wins.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Info Data Points:</b></td>
<td style="width:170px">Conference Alias <br>Conference Id <br>Conference Name </td>
<td style="width:170px">Division Alias <br>Division Id <br>Division Name </td>
<td style="width:170px">Season Id <br>Season Type <br>Season Year </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Info Data Points:</b></td>
<td>First Name <br>Full Name <br>Jersey Number <br>Last Name </td>
<td>Name Suffix <br>Player Id <br>Position </td>
<td>Primary Position <br>Reference <br>SR Id </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Opponent Splits Data Points:</b></td>
<td>Assists <br>Assists per Game <br>Assists to Turnover Ratio <br>Bench Points <br>Bench Points per Game <br>Blocked Attempts <br>Blocked Attempts per Game <br>Blocks <br>Blocks per Game <br>Coach Ejections <br>Coach Technical Fouls <br>Day of Week <br>Days of Rest <br>Defensive Rebounds <br>Defensive Rebounds per Game <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts per Game <br>Fast Break Made <br>Fast Break Made per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points per Game <br>Field Goals Attempted <br>Field Goals Attempted per Game <br>Field Goals Made <br>Field Goals Made per Game <br>Field Goals Percentage <br>Flagrant Fouls <br>Flagrant Fouls per Game </td>
<td>Foulouts <br>Fouls Drawn <br>Fouls Drawn per Game <br>Free Throws Attempted <br>Free Throws Attempted per Game <br>Free Throws Made <br>Free Throws Made per Game <br>Free Throws Percentage <br>Games Played <br>Minutes Played <br>Minutes Played per Game <br>Month <br>Offensive Fouls <br>Offensive Fouls per Game <br>Offensive Rebounds <br>Offensive Rebounds per Game <br>Personal Fouls <br>Personal Fouls per Game <br>Points <br>Points Against <br>Points in Paint <br>Points in Paint Attempted <br>Points in Paint Attempts per Game <br>Points in Paint Made <br>Points in Paint Made per Game <br>Points in Paint per Game <br>Points in Paint Percentage <br>Points Off Turnovers <br>Points Off Turnovers per Game <br>Points per Game <br>Rebounds <br>Rebounds per Game <br>Second Chance Attempts </td>
<td>Second Chance Attempts per Game <br>Second Chance Made <br>Second Chance Made per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points per Game <br>Split Category <br>Steals <br>Steals per Game <br>Team Defensive Rebounds <br>Team Fouls <br>Team Offensive Rebounds <br>Team Technical Fouls <br>Technical Fouls <br>Technical Other <br>Three Points Attempted <br>Three Points Attempted per Game <br>Three Points Made <br>Three Points Made per Game <br>Three Points Percentage <br>Total Fouls <br>Total Rebounds <br>True Shooting Attempts <br>True Shooting Attempts per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers per Game <br>Two Points Attempted <br>Two Points Attempted per Game <br>Two Points Made <br>Two Points Made per Game <br>Two Points Percentage <br>Week </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Splits Data Points:</b></td>
<td>Assists <br>Assists per Game <br>Assists to Turnover Ratio <br>Blocked Attempts <br>Blocked Attempts per Game <br>Blocks <br>Blocks per Game <br>Coach Ejections <br>Coach Technical Fouls <br>Day of Week <br>Days of Rest <br>Defensive Rebounds <br>Defensive Rebounds per Game <br>Double Doubles <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts per Game <br>Fast Break Made <br>Fast Break Made per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points per Game <br>Field Goals Attempted <br>Field Goals Attempts per Game <br>Field Goals Made <br>Field Goals Made per Game <br>Field Goals Percentage <br>Flagrant Fouls <br>Flagrant Fouls per Game </td>
<td>Foulouts <br>Fouls Drawn <br>Fouls Drawn per Game <br>Free Throws Attempts <br>Free Throws Attempts per Game <br>Free Throws Made <br>Free Throws Made per Game <br>Free Throws Percentage <br>Games Played <br>Games Started <br>Minus <br>Minutes <br>Minutes per Game <br>Month <br>Offensive Fouls <br>Offensive Fouls per Game <br>Offensive Rebounds <br>Offensive Rebounds per Game <br>Personal Fouls <br>Personal Fouls per Game <br>Plus <br>Points <br>Points in Paint <br>Points in Paint Attempts <br>Points in Paint Attempts per Game <br>Points in Paint Made <br>Points in Paint Made per Game <br>Points in Paint per Game <br>Points in Paint Percentage <br>Points Off Turnovers <br>Points Off Turnovers per Game </td>
<td>Points per Game <br>Rebounds <br>Rebounds per Game <br>Second Chance Attempts <br>Second Chance Attempts per Game <br>Second Chance Made <br>Second Chance Made per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points per Game <br>Split Category <br>Steals <br>Steals per Game <br>Technical Fouls <br>Technical Fouls - Non-Unsportsmanlike <br>Three Points Attempted <br>Three Points Attempts per Game <br>Three Points Made <br>Three Points Made per Game <br>Three Points Percentage <br>Triple Doubles <br>True Shooting Attempts <br>True Shooting Attempts per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers per Game <br>Two Points Attempted <br>Two Points Attempts per Game <br>Two Points Made <br>Two Points Made per Game <br>Two Points Percentage <br>Week </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Splits Data Points:</b></td>
<td>Assists <br>Assists per Game <br>Assists to Turnover Ratio <br>Bench Points <br>Bench Points per Game <br>Blocked Attempts <br>Blocked Attempts per Game <br>Blocks <br>Blocks per Game <br>Coach Ejections <br>Coach Technical Fouls <br>Day of Week <br>Days of Rest <br>Defensive Rebounds <br>Defensive Rebounds per Game <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts per Game <br>Fast Break Made <br>Fast Break Made per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points per Game <br>Field Goals Attempted <br>Field Goals Attempted per Game <br>Field Goals Made <br>Field Goals Made per Game <br>Field Goals Percentage <br>Flagrant Fouls <br>Flagrant Fouls per Game </td>
<td>Foulouts <br>Fouls Drawn <br>Fouls Drawn per Game <br>Free Throws Attempted <br>Free Throws Attempted per Game <br>Free Throws Made <br>Free Throws Made per Game <br>Free Throws Percentage <br>Games Played <br>Minutes Played <br>Minutes Played per Game <br>Month <br>Offensive Fouls <br>Offensive Fouls per Game <br>Offensive Rebounds <br>Offensive Rebounds per Game <br>Personal Fouls <br>Personal Fouls per Game <br>Points <br>Points Against <br>Points in Paint <br>Points in Paint Attempted <br>Points in Paint Attempts per Game <br>Points in Paint Made <br>Points in Paint Made per Game <br>Points in Paint per Game <br>Points in Paint Percentage <br>Points Off Turnovers <br>Points Off Turnovers per Game <br>Points per Game <br>Rebounds <br>Rebounds per Game <br>Second Chance Attempts </td>
<td>Second Chance Attempts per Game <br>Second Chance Made <br>Second Chance Made per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points per Game <br>Split Category <br>Steals <br>Steals per Game <br>Team Defensive Rebounds <br>Team Fouls <br>Team Offensive Rebounds <br>Team Technical Fouls <br>Technical Fouls <br>Technical Other <br>Three Points Attempted <br>Three Points Attempted per Game <br>Three Points Made <br>Three Points Made per Game <br>Three Points Percentage <br>Total Fouls <br>Total Rebounds <br>True Shooting Attempts <br>True Shooting Attempts per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers per Game <br>Two Points Attempted <br>Two Points Attempted per Game <br>Two Points Made <br>Two Points Made per Game <br>Two Points Percentage <br>Week </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Data Points:</b></td>
<td>Id <br>Market </td>
<td>Name <br>Reference </td>
<td>SR Id </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/seasons/2020/PST/teams/583ece50-fb46-11e1-82cb-f4ce4684ea4c/splits/game.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/seasons/2020/PST/teams/583ece50-fb46-11e1-82cb-f4ce4684ea4c/splits/game.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/seasons/2020/PST/teams/583ece50-fb46-11e1-82cb-f4ce4684ea4c/splits/game.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_splits_game_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_splits_game_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Game Splits feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/seasons/<code>{season_year}</code>/<code>{nba_season}</code>/teams/<code>{team_id}</code>/splits/game.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production) or Trial (trial)</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>season_year</code></td>
<td>Year in 4 digit format (YYYY).</td>
</tr>
<tr>
<td><code>nba_season</code></td>
<td>Preseason (PRE), Regular Season (REG), Play in Tournament (PIT), In-Season Tournament (IST), or Postseason (PST).</td>
</tr>
<tr>
<td><code>team_id</code></td>
<td>Id for a given team.</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for Game Splits use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/statistics-v3.0.xsd">https://feed.elasticstats.com/schema/basketball/statistics-v3.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="splits-hierarchy">Splits (Hierarchy)</h2>
<p>Detailed Team, Player, and Opponent splits across each Conference and Division.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Info Data Points:</b></td>
<td style="width:170px">Conference Alias <br>Conference Id <br>Conference Name </td>
<td style="width:170px">Division Alias <br>Division Id <br>Division Name </td>
<td style="width:170px">Season Id <br>Season Type <br>Season Year </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Info Data Points:</b></td>
<td>First Name <br>Full Name <br>Jersey Number <br>Last Name </td>
<td>Name Suffix <br>Player Id <br>Position </td>
<td>Primary Position <br>Reference <br>SR Id </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Opponent Splits Data Points:</b></td>
<td>Assists <br>Assists per Game <br>Assists to Turnover Ratio <br>Bench Points <br>Bench Points per Game <br>Blocked Attempts <br>Blocked Attempts per Game <br>Blocks <br>Blocks per Game <br>Coach Ejections <br>Coach Technical Fouls <br>Day of Week <br>Days of Rest <br>Defensive Rebounds <br>Defensive Rebounds per Game <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts per Game <br>Fast Break Made <br>Fast Break Made per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points per Game <br>Field Goals Attempted <br>Field Goals Attempted per Game <br>Field Goals Made <br>Field Goals Made per Game <br>Field Goals Percentage <br>Flagrant Fouls <br>Flagrant Fouls per Game </td>
<td>Foulouts <br>Fouls Drawn <br>Fouls Drawn per Game <br>Free Throws Attempted <br>Free Throws Attempted per Game <br>Free Throws Made <br>Free Throws Made per Game <br>Free Throws Percentage <br>Games Played <br>Minutes Played <br>Minutes Played per Game <br>Month <br>Offensive Fouls <br>Offensive Fouls per Game <br>Offensive Rebounds <br>Offensive Rebounds per Game <br>Personal Fouls <br>Personal Fouls per Game <br>Points <br>Points Against <br>Points in Paint <br>Points in Paint Attempted <br>Points in Paint Attempts per Game <br>Points in Paint Made <br>Points in Paint Made per Game <br>Points in Paint per Game <br>Points in Paint Percentage <br>Points Off Turnovers <br>Points Off Turnovers per Game <br>Points per Game <br>Rebounds <br>Rebounds per Game <br>Second Chance Attempts </td>
<td>Second Chance Attempts per Game <br>Second Chance Made <br>Second Chance Made per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points per Game <br>Split Category <br>Steals <br>Steals per Game <br>Team Defensive Rebounds <br>Team Fouls <br>Team Offensive Rebounds <br>Team Technical Fouls <br>Technical Fouls <br>Technical Other <br>Three Points Attempted <br>Three Points Attempted per Game <br>Three Points Made <br>Three Points Made per Game <br>Three Points Percentage <br>Total Fouls <br>Total Rebounds <br>True Shooting Attempts <br>True Shooting Attempts per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers per Game <br>Two Points Attempted <br>Two Points Attempted per Game <br>Two Points Made <br>Two Points Made per Game <br>Two Points Percentage <br>Week </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Splits Data Points:</b></td>
<td>Assists <br>Assists per Game <br>Assists to Turnover Ratio <br>Blocked Attempts <br>Blocked Attempts per Game <br>Blocks <br>Blocks per Game <br>Coach Ejections <br>Coach Technical Fouls <br>Day of Week <br>Days of Rest <br>Defensive Rebounds <br>Defensive Rebounds per Game <br>Double Doubles <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts per Game <br>Fast Break Made <br>Fast Break Made per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points per Game <br>Field Goals Attempted <br>Field Goals Attempts per Game <br>Field Goals Made <br>Field Goals Made per Game <br>Field Goals Percentage <br>Flagrant Fouls <br>Flagrant Fouls per Game </td>
<td>Foulouts <br>Fouls Drawn <br>Fouls Drawn per Game <br>Free Throws Attempts <br>Free Throws Attempts per Game <br>Free Throws Made <br>Free Throws Made per Game <br>Free Throws Percentage <br>Games Played <br>Games Started <br>Minus <br>Minutes <br>Minutes per Game <br>Month <br>Offensive Fouls <br>Offensive Fouls per Game <br>Offensive Rebounds <br>Offensive Rebounds per Game <br>Personal Fouls <br>Personal Fouls per Game <br>Plus <br>Points <br>Points in Paint <br>Points in Paint Attempts <br>Points in Paint Attempts per Game <br>Points in Paint Made <br>Points in Paint Made per Game <br>Points in Paint per Game <br>Points in Paint Percentage <br>Points Off Turnovers <br>Points Off Turnovers per Game </td>
<td>Points per Game <br>Rebounds <br>Rebounds per Game <br>Second Chance Attempts <br>Second Chance Attempts per Game <br>Second Chance Made <br>Second Chance Made per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points per Game <br>Split Category <br>Steals <br>Steals per Game <br>Technical Fouls <br>Technical Fouls - Non-Unsportsmanlike <br>Three Points Attempted <br>Three Points Attempts per Game <br>Three Points Made <br>Three Points Made per Game <br>Three Points Percentage <br>Triple Doubles <br>True Shooting Attempts <br>True Shooting Attempts per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers per Game <br>Two Points Attempted <br>Two Points Attempts per Game <br>Two Points Made <br>Two Points Made per Game <br>Two Points Percentage <br>Week </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Splits Data Points:</b></td>
<td>Assists <br>Assists per Game <br>Assists to Turnover Ratio <br>Bench Points <br>Bench Points per Game <br>Blocked Attempts <br>Blocked Attempts per Game <br>Blocks <br>Blocks per Game <br>Coach Ejections <br>Coach Technical Fouls <br>Day of Week <br>Days of Rest <br>Defensive Rebounds <br>Defensive Rebounds per Game <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts per Game <br>Fast Break Made <br>Fast Break Made per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points per Game <br>Field Goals Attempted <br>Field Goals Attempted per Game <br>Field Goals Made <br>Field Goals Made per Game <br>Field Goals Percentage <br>Flagrant Fouls <br>Flagrant Fouls per Game </td>
<td>Foulouts <br>Fouls Drawn <br>Fouls Drawn per Game <br>Free Throws Attempted <br>Free Throws Attempted per Game <br>Free Throws Made <br>Free Throws Made per Game <br>Free Throws Percentage <br>Games Played <br>Minutes Played <br>Minutes Played per Game <br>Month <br>Offensive Fouls <br>Offensive Fouls per Game <br>Offensive Rebounds <br>Offensive Rebounds per Game <br>Personal Fouls <br>Personal Fouls per Game <br>Points <br>Points Against <br>Points in Paint <br>Points in Paint Attempted <br>Points in Paint Attempts per Game <br>Points in Paint Made <br>Points in Paint Made per Game <br>Points in Paint per Game <br>Points in Paint Percentage <br>Points Off Turnovers <br>Points Off Turnovers per Game <br>Points per Game <br>Rebounds <br>Rebounds per Game <br>Second Chance Attempts </td>
<td>Second Chance Attempts per Game <br>Second Chance Made <br>Second Chance Made per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points per Game <br>Split Category <br>Steals <br>Steals per Game <br>Team Defensive Rebounds <br>Team Fouls <br>Team Offensive Rebounds <br>Team Technical Fouls <br>Technical Fouls <br>Technical Other <br>Three Points Attempted <br>Three Points Attempted per Game <br>Three Points Made <br>Three Points Made per Game <br>Three Points Percentage <br>Total Fouls <br>Total Rebounds <br>True Shooting Attempts <br>True Shooting Attempts per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers per Game <br>Two Points Attempted <br>Two Points Attempted per Game <br>Two Points Made <br>Two Points Made per Game <br>Two Points Percentage <br>Week </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Data Points:</b></td>
<td>Id <br>Market </td>
<td>Name <br>Reference </td>
<td>SR Id </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/seasons/2021/REG/teams/583ec825-fb46-11e1-82cb-f4ce4684ea4c/splits/hierarchy.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/seasons/2021/REG/teams/583ec825-fb46-11e1-82cb-f4ce4684ea4c/splits/hierarchy.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/seasons/2021/REG/teams/583ec825-fb46-11e1-82cb-f4ce4684ea4c/splits/hierarchy.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_splits_hierarchy_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_splits_hierarchy_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Hierarchy Splits feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/seasons/<code>{season_year}</code>/<code>{nba_season}</code>/teams/<code>{team_id}</code>/splits/hierarchy.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production) or Trial (trial)</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>season_year</code></td>
<td>Year in 4 digit format (YYYY).</td>
</tr>
<tr>
<td><code>nba_season</code></td>
<td>Preseason (PRE), Regular Season (REG), Play in Tournament (PIT), In-Season Tournament (IST), or Postseason (PST).</td>
</tr>
<tr>
<td><code>team_id</code></td>
<td>Id for a given team.</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for Hierarchy Splits, use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/statistics-v3.0.xsd">https://feed.elasticstats.com/schema/basketball/statistics-v3.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="splits-in-game">Splits (In-game)</h2>
<p>Detailed Team, Player, and Opponent in-game splits across various views including: Higher Field Goal Percentage, Less Personal Fouls, Less Rebounds, Less Turnovers, Lower Field Goal Percentage, More Personal Fouls, More Rebounds, More Turnovers, Over 100 Against, Over 100 For, Same Personal Fouls, Same Rebounds, Same Turnovers, Under 100 Against, and Under 100 For.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Info Data Points:</b></td>
<td style="width:170px">Conference Alias <br>Conference Id <br>Conference Name </td>
<td style="width:170px">Division Alias <br>Division Id <br>Division Name </td>
<td style="width:170px">Season Id <br>Season Type <br>Season Year </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Info Data Points:</b></td>
<td>First Name <br>Full Name <br>Jersey Number <br>Last Name </td>
<td>Name Suffix <br>Player Id <br>Position </td>
<td>Primary Position <br>Reference <br>SR Id </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Opponent Splits Data Points:</b></td>
<td>Assists <br>Assists per Game <br>Assists to Turnover Ratio <br>Bench Points <br>Bench Points per Game <br>Blocked Attempts <br>Blocked Attempts per Game <br>Blocks <br>Blocks per Game <br>Coach Ejections <br>Coach Technical Fouls <br>Day of Week <br>Days of Rest <br>Defensive Rebounds <br>Defensive Rebounds per Game <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts per Game <br>Fast Break Made <br>Fast Break Made per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points per Game <br>Field Goals Attempted <br>Field Goals Attempted per Game <br>Field Goals Made <br>Field Goals Made per Game <br>Field Goals Percentage <br>Flagrant Fouls <br>Flagrant Fouls per Game </td>
<td>Foulouts <br>Fouls Drawn <br>Fouls Drawn per Game <br>Free Throws Attempted <br>Free Throws Attempted per Game <br>Free Throws Made <br>Free Throws Made per Game <br>Free Throws Percentage <br>Games Played <br>Minutes Played <br>Minutes Played per Game <br>Month <br>Offensive Fouls <br>Offensive Fouls per Game <br>Offensive Rebounds <br>Offensive Rebounds per Game <br>Personal Fouls <br>Personal Fouls per Game <br>Points <br>Points Against <br>Points in Paint <br>Points in Paint Attempted <br>Points in Paint Attempts per Game <br>Points in Paint Made <br>Points in Paint Made per Game <br>Points in Paint per Game <br>Points in Paint Percentage <br>Points Off Turnovers <br>Points Off Turnovers per Game <br>Points per Game <br>Rebounds <br>Rebounds per Game <br>Second Chance Attempts </td>
<td>Second Chance Attempts per Game <br>Second Chance Made <br>Second Chance Made per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points per Game <br>Split Category <br>Steals <br>Steals per Game <br>Team Defensive Rebounds <br>Team Fouls <br>Team Offensive Rebounds <br>Team Technical Fouls <br>Technical Fouls <br>Technical Other <br>Three Points Attempted <br>Three Points Attempted per Game <br>Three Points Made <br>Three Points Made per Game <br>Three Points Percentage <br>Total Fouls <br>Total Rebounds <br>True Shooting Attempts <br>True Shooting Attempts per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers per Game <br>Two Points Attempted <br>Two Points Attempted per Game <br>Two Points Made <br>Two Points Made per Game <br>Two Points Percentage <br>Week </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Splits Data Points:</b></td>
<td>Assists <br>Assists per Game <br>Assists to Turnover Ratio <br>Blocked Attempts <br>Blocked Attempts per Game <br>Blocks <br>Blocks per Game <br>Coach Ejections <br>Coach Technical Fouls <br>Day of Week <br>Days of Rest <br>Defensive Rebounds <br>Defensive Rebounds per Game <br>Double Doubles <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts per Game <br>Fast Break Made <br>Fast Break Made per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points per Game <br>Field Goals Attempted <br>Field Goals Attempts per Game <br>Field Goals Made <br>Field Goals Made per Game <br>Field Goals Percentage <br>Flagrant Fouls <br>Flagrant Fouls per Game </td>
<td>Foulouts <br>Fouls Drawn <br>Fouls Drawn per Game <br>Free Throws Attempts <br>Free Throws Attempts per Game <br>Free Throws Made <br>Free Throws Made per Game <br>Free Throws Percentage <br>Games Played <br>Games Started <br>Minus <br>Minutes <br>Minutes per Game <br>Month <br>Offensive Fouls <br>Offensive Fouls per Game <br>Offensive Rebounds <br>Offensive Rebounds per Game <br>Personal Fouls <br>Personal Fouls per Game <br>Plus <br>Points <br>Points in Paint <br>Points in Paint Attempts <br>Points in Paint Attempts per Game <br>Points in Paint Made <br>Points in Paint Made per Game <br>Points in Paint per Game <br>Points in Paint Percentage <br>Points Off Turnovers <br>Points Off Turnovers per Game </td>
<td>Points per Game <br>Rebounds <br>Rebounds per Game <br>Second Chance Attempts <br>Second Chance Attempts per Game <br>Second Chance Made <br>Second Chance Made per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points per Game <br>Split Category <br>Steals <br>Steals per Game <br>Technical Fouls <br>Technical Fouls - Non-Unsportsmanlike <br>Three Points Attempted <br>Three Points Attempts per Game <br>Three Points Made <br>Three Points Made per Game <br>Three Points Percentage <br>Triple Doubles <br>True Shooting Attempts <br>True Shooting Attempts per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers per Game <br>Two Points Attempted <br>Two Points Attempts per Game <br>Two Points Made <br>Two Points Made per Game <br>Two Points Percentage <br>Week </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Splits Data Points:</b></td>
<td>Assists <br>Assists per Game <br>Assists to Turnover Ratio <br>Bench Points <br>Bench Points per Game <br>Blocked Attempts <br>Blocked Attempts per Game <br>Blocks <br>Blocks per Game <br>Coach Ejections <br>Coach Technical Fouls <br>Day of Week <br>Days of Rest <br>Defensive Rebounds <br>Defensive Rebounds per Game <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts per Game <br>Fast Break Made <br>Fast Break Made per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points per Game <br>Field Goals Attempted <br>Field Goals Attempted per Game <br>Field Goals Made <br>Field Goals Made per Game <br>Field Goals Percentage <br>Flagrant Fouls <br>Flagrant Fouls per Game </td>
<td>Foulouts <br>Fouls Drawn <br>Fouls Drawn per Game <br>Free Throws Attempted <br>Free Throws Attempted per Game <br>Free Throws Made <br>Free Throws Made per Game <br>Free Throws Percentage <br>Games Played <br>Minutes Played <br>Minutes Played per Game <br>Month <br>Offensive Fouls <br>Offensive Fouls per Game <br>Offensive Rebounds <br>Offensive Rebounds per Game <br>Personal Fouls <br>Personal Fouls per Game <br>Points <br>Points Against <br>Points in Paint <br>Points in Paint Attempted <br>Points in Paint Attempts per Game <br>Points in Paint Made <br>Points in Paint Made per Game <br>Points in Paint per Game <br>Points in Paint Percentage <br>Points Off Turnovers <br>Points Off Turnovers per Game <br>Points per Game <br>Rebounds <br>Rebounds per Game <br>Second Chance Attempts </td>
<td>Second Chance Attempts per Game <br>Second Chance Made <br>Second Chance Made per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points per Game <br>Split Category <br>Steals <br>Steals per Game <br>Team Defensive Rebounds <br>Team Fouls <br>Team Offensive Rebounds <br>Team Technical Fouls <br>Technical Fouls <br>Technical Other <br>Three Points Attempted <br>Three Points Attempted per Game <br>Three Points Made <br>Three Points Made per Game <br>Three Points Percentage <br>Total Fouls <br>Total Rebounds <br>True Shooting Attempts <br>True Shooting Attempts per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers per Game <br>Two Points Attempted <br>Two Points Attempted per Game <br>Two Points Made <br>Two Points Made per Game <br>Two Points Percentage <br>Week </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Data Points:</b></td>
<td>Id <br>Market </td>
<td>Name <br>Reference </td>
<td>SR Id </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/seasons/2021/REG/teams/583ec825-fb46-11e1-82cb-f4ce4684ea4c/splits/ingame.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/seasons/2021/REG/teams/583ec825-fb46-11e1-82cb-f4ce4684ea4c/splits/ingame.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/seasons/2021/REG/teams/583ec825-fb46-11e1-82cb-f4ce4684ea4c/splits/ingame.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_splits_ingame_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_splits_ingame_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the In-Game Splits feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/seasons/<code>{season_year}</code>/<code>{nba_season}</code>/teams/<code>{team_id}</code>/splits/ingame.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production) or Trial (trial)</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>season_year</code></td>
<td>Year in 4 digit format (YYYY).</td>
</tr>
<tr>
<td><code>nba_season</code></td>
<td>Preseason (PRE), Regular Season (REG), Play in Tournament (PIT), In-Season Tournament (IST), or Postseason (PST).</td>
</tr>
<tr>
<td><code>team_id</code></td>
<td>Id for a given team.</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for In-Game Splits, use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/statistics-v3.0.xsd">https://feed.elasticstats.com/schema/basketball/statistics-v3.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="splits-schedule">Splits (Schedule)</h2>
<p>Detailed Team, Player, and Opponent splits across various schedule views including: Days of Rest (1, 2, or 3+), Day of the Week, Last 5, Last 10, By Month, and By Week.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Info Data Points:</b></td>
<td style="width:170px">Conference Alias <br>Conference Id <br>Conference Name </td>
<td style="width:170px">Division Alias <br>Division Id <br>Division Name </td>
<td style="width:170px">Season Id <br>Season Type <br>Season Year </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Info Data Points:</b></td>
<td>First Name <br>Full Name <br>Jersey Number <br>Last Name </td>
<td>Name Suffix <br>Player Id <br>Position </td>
<td>Primary Position <br>Reference <br>SR Id </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Opponent Splits Data Points:</b></td>
<td>Assists <br>Assists per Game <br>Assists to Turnover Ratio <br>Bench Points <br>Bench Points per Game <br>Blocked Attempts <br>Blocked Attempts per Game <br>Blocks <br>Blocks per Game <br>Coach Ejections <br>Coach Technical Fouls <br>Day of Week <br>Days of Rest <br>Defensive Rebounds <br>Defensive Rebounds per Game <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts per Game <br>Fast Break Made <br>Fast Break Made per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points per Game <br>Field Goals Attempted <br>Field Goals Attempted per Game <br>Field Goals Made <br>Field Goals Made per Game <br>Field Goals Percentage <br>Flagrant Fouls <br>Flagrant Fouls per Game </td>
<td>Foulouts <br>Fouls Drawn <br>Fouls Drawn per Game <br>Free Throws Attempted <br>Free Throws Attempted per Game <br>Free Throws Made <br>Free Throws Made per Game <br>Free Throws Percentage <br>Games Played <br>Minutes Played <br>Minutes Played per Game <br>Month <br>Offensive Fouls <br>Offensive Fouls per Game <br>Offensive Rebounds <br>Offensive Rebounds per Game <br>Personal Fouls <br>Personal Fouls per Game <br>Points <br>Points Against <br>Points in Paint <br>Points in Paint Attempted <br>Points in Paint Attempts per Game <br>Points in Paint Made <br>Points in Paint Made per Game <br>Points in Paint per Game <br>Points in Paint Percentage <br>Points Off Turnovers <br>Points Off Turnovers per Game <br>Points per Game <br>Rebounds <br>Rebounds per Game <br>Second Chance Attempts </td>
<td>Second Chance Attempts per Game <br>Second Chance Made <br>Second Chance Made per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points per Game <br>Split Category <br>Steals <br>Steals per Game <br>Team Defensive Rebounds <br>Team Fouls <br>Team Offensive Rebounds <br>Team Technical Fouls <br>Technical Fouls <br>Technical Other <br>Three Points Attempted <br>Three Points Attempted per Game <br>Three Points Made <br>Three Points Made per Game <br>Three Points Percentage <br>Total Fouls <br>Total Rebounds <br>True Shooting Attempts <br>True Shooting Attempts per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers per Game <br>Two Points Attempted <br>Two Points Attempted per Game <br>Two Points Made <br>Two Points Made per Game <br>Two Points Percentage <br>Week </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Splits Data Points:</b></td>
<td>Assists <br>Assists per Game <br>Assists to Turnover Ratio <br>Blocked Attempts <br>Blocked Attempts per Game <br>Blocks <br>Blocks per Game <br>Coach Ejections <br>Coach Technical Fouls <br>Day of Week <br>Days of Rest <br>Defensive Rebounds <br>Defensive Rebounds per Game <br>Double Doubles <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts per Game <br>Fast Break Made <br>Fast Break Made per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points per Game <br>Field Goals Attempted <br>Field Goals Attempts per Game <br>Field Goals Made <br>Field Goals Made per Game <br>Field Goals Percentage <br>Flagrant Fouls <br>Flagrant Fouls per Game </td>
<td>Foulouts <br>Fouls Drawn <br>Fouls Drawn per Game <br>Free Throws Attempts <br>Free Throws Attempts per Game <br>Free Throws Made <br>Free Throws Made per Game <br>Free Throws Percentage <br>Games Played <br>Games Started <br>Minus <br>Minutes <br>Minutes per Game <br>Month <br>Offensive Fouls <br>Offensive Fouls per Game <br>Offensive Rebounds <br>Offensive Rebounds per Game <br>Personal Fouls <br>Personal Fouls per Game <br>Plus <br>Points <br>Points in Paint <br>Points in Paint Attempts <br>Points in Paint Attempts per Game <br>Points in Paint Made <br>Points in Paint Made per Game <br>Points in Paint per Game <br>Points in Paint Percentage <br>Points Off Turnovers <br>Points Off Turnovers per Game </td>
<td>Points per Game <br>Rebounds <br>Rebounds per Game <br>Second Chance Attempts <br>Second Chance Attempts per Game <br>Second Chance Made <br>Second Chance Made per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points per Game <br>Split Category <br>Steals <br>Steals per Game <br>Technical Fouls <br>Technical Fouls - Non-Unsportsmanlike <br>Three Points Attempted <br>Three Points Attempts per Game <br>Three Points Made <br>Three Points Made per Game <br>Three Points Percentage <br>Triple Doubles <br>True Shooting Attempts <br>True Shooting Attempts per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers per Game <br>Two Points Attempted <br>Two Points Attempts per Game <br>Two Points Made <br>Two Points Made per Game <br>Two Points Percentage <br>Week </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Splits Data Points:</b></td>
<td>Assists <br>Assists per Game <br>Assists to Turnover Ratio <br>Bench Points <br>Bench Points per Game <br>Blocked Attempts <br>Blocked Attempts per Game <br>Blocks <br>Blocks per Game <br>Coach Ejections <br>Coach Technical Fouls <br>Day of Week <br>Days of Rest <br>Defensive Rebounds <br>Defensive Rebounds per Game <br>Effective Field Goal Percentage <br>Efficiency <br>Efficiency per Game <br>Ejections <br>Fast Break Attempts <br>Fast Break Attempts per Game <br>Fast Break Made <br>Fast Break Made per Game <br>Fast Break Percentage <br>Fast Break Points <br>Fast Break Points per Game <br>Field Goals Attempted <br>Field Goals Attempted per Game <br>Field Goals Made <br>Field Goals Made per Game <br>Field Goals Percentage <br>Flagrant Fouls <br>Flagrant Fouls per Game </td>
<td>Foulouts <br>Fouls Drawn <br>Fouls Drawn per Game <br>Free Throws Attempted <br>Free Throws Attempted per Game <br>Free Throws Made <br>Free Throws Made per Game <br>Free Throws Percentage <br>Games Played <br>Minutes Played <br>Minutes Played per Game <br>Month <br>Offensive Fouls <br>Offensive Fouls per Game <br>Offensive Rebounds <br>Offensive Rebounds per Game <br>Personal Fouls <br>Personal Fouls per Game <br>Points <br>Points Against <br>Points in Paint <br>Points in Paint Attempted <br>Points in Paint Attempts per Game <br>Points in Paint Made <br>Points in Paint Made per Game <br>Points in Paint per Game <br>Points in Paint Percentage <br>Points Off Turnovers <br>Points Off Turnovers per Game <br>Points per Game <br>Rebounds <br>Rebounds per Game <br>Second Chance Attempts </td>
<td>Second Chance Attempts per Game <br>Second Chance Made <br>Second Chance Made per Game <br>Second Chance Percentage <br>Second Chance Points <br>Second Chance Points per Game <br>Split Category <br>Steals <br>Steals per Game <br>Team Defensive Rebounds <br>Team Fouls <br>Team Offensive Rebounds <br>Team Technical Fouls <br>Technical Fouls <br>Technical Other <br>Three Points Attempted <br>Three Points Attempted per Game <br>Three Points Made <br>Three Points Made per Game <br>Three Points Percentage <br>Total Fouls <br>Total Rebounds <br>True Shooting Attempts <br>True Shooting Attempts per Game <br>True Shooting Percentage <br>Turnovers <br>Turnovers per Game <br>Two Points Attempted <br>Two Points Attempted per Game <br>Two Points Made <br>Two Points Made per Game <br>Two Points Percentage <br>Week </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Data Points:</b></td>
<td>Id <br>Market </td>
<td>Name <br>Reference </td>
<td>SR Id </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/seasons/2021/REG/teams/583ec825-fb46-11e1-82cb-f4ce4684ea4c/splits/schedule.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/seasons/2021/REG/teams/583ec825-fb46-11e1-82cb-f4ce4684ea4c/splits/schedule.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/seasons/2021/REG/teams/583ec825-fb46-11e1-82cb-f4ce4684ea4c/splits/schedule.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_splits_schedule_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_splits_schedule_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Schedule Splits feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/seasons/<code>{season_year}</code>/<code>{nba_season}</code>/teams/<code>{team_id}</code>/splits/schedule.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production) or Trial (trial)</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>season_year</code></td>
<td>Year in 4 digit format (YYYY).</td>
</tr>
<tr>
<td><code>nba_season</code></td>
<td>Preseason (PRE), Regular Season (REG), Play in Tournament (PIT), In-Season Tournament (IST), or Postseason (PST).</td>
</tr>
<tr>
<td><code>team_id</code></td>
<td>Id for a given team.</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for Schedule Splits use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/statistics-v3.0.xsd">https://feed.elasticstats.com/schema/basketball/statistics-v3.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="standings-1">Standings</h2>
<p>Detailed team records across various views including, overall, conference, and division information.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Info Data Points:</b></td>
<td style="width:170px">Conference Alias <br>Conference Id <br>Conference Name <br>Division Alias </td>
<td style="width:170px">Division Id <br>Division Name <br>League Alias <br>League Id </td>
<td style="width:170px">League Name <br>Season Id <br>Season Type <br>Season Year </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Standings Data Points:</b></td>
<td>Conference Losses <br>Conference Rank Calculated <br>Conference Tiebreak <br>Conference Winning Percentage <br>Conference Wins <br>Division Losses <br>Division Rank Calculated <br>Division Winning Percentage <br>Division Wins <br>Equal Rebounds Losses <br>Equal Rebounds Winning Percentage <br>Equal Rebounds Wins <br>Equal Turnovers Losses <br>Equal Turnovers Winning Percentage <br>Equal Turnovers Wins <br>Fewer Turnovers Losses <br>Fewer Turnovers Winning Percentage <br>Fewer Turnovers Wins <br>Games Behind Conference <br>Games Behind Division <br>Games Behind League <br>Games Decided by 10 pts or More Losses <br>Games Decided by 10 pts or More Winning Percentage <br>Games Decided by 10 pts or More Wins <br>Games Decided by 3 pts or Less Losses <br>Games Decided by 3 pts or Less Winning Percentage <br>Games Decided by 3 pts or Less Wins <br>Home Losses <br>Home Winning Percentage <br>Home Wins <br>Last 10 Games Losses <br>Last 10 Games Winning Percentage <br>Last 10 Games Wins <br>Last 10 Home Games Losses <br>Last 10 Home Games Winning Percentage </td>
<td>Last 10 Home Games Wins <br>Last 10 Road Games Losses <br>Last 10 Road Games Winning Percentage <br>Last 10 Road Games Wins <br>Leads Field Goal Percentage Losses <br>Leads Field Goal Percentage Winning Percentage <br>Leads Field Goal Percentage Wins <br>Leads Rebounds Losses <br>Leads Rebounds Winning Percentage <br>Leads Rebounds Wins <br>Opponent Fewer Turnovers Losses <br>Opponent Fewer Turnovers Winning Percentage <br>Opponent Fewer Turnovers Wins <br>Opponent Leads Field Goal Percentage Losses <br>Opponent Leads Field Goal Percentage Winning Percentage <br>Opponent Leads Field Goal Percentage Wins <br>Opponent Leads Rebounds Losses <br>Opponent Leads Rebounds Winning Percentage <br>Opponent Leads Rebounds Wins <br>Opponent Scores 100 or More Losses <br>Opponent Scores 100 or More Winning Percentage <br>Opponent Scores 100 or More Wins <br>Overall Losses <br>Overall Point Differential <br>Overall Points Against <br>Overall Points For <br>Overall Winning Percentage <br>Overall Wins <br>Overtime Losses <br>Overtime Winning Percentage <br>Overtime Wins </td>
<td>Road Losses <br>Road Winning Percentage <br>Road Wins <br>Scores 100 or More Losses <br>Scores 100 or More Winning Percentage <br>Scores 100 or More Wins <br>Streak <br>Versus Atlantic Division Losses <br>Versus Atlantic Division Winning Percentage <br>Versus Atlantic Division Wins <br>Versus Central Division Losses <br>Versus Central Division Winning Percentage <br>Versus Central Division Wins <br>Versus Northwest Division Losses <br>Versus Northwest Division Winning Percentage <br>Versus Northwest Division Wins <br>Versus Pacific Division Losses <br>Versus Pacific Division Winning Percentage <br>Versus Pacific Division Wins <br>Versus Southeast Division Losses <br>Versus Southeast Division Winning Percentage <br>Versus Southeast Division Wins <br>Versus Southwest Division Losses <br>Versus Southwest Division Winning Percentage <br>Versus Southwest Division Wins <br>Versus Teams Above 500 Losses <br>Versus Teams Above 500 Winning Percentage <br>Versus Teams Above 500 Wins <br>Versus Teams Below 500 Losses <br>Versus Teams Below 500 Winning Percentage <br>Versus Teams Below 500 Wins </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Data Points:</b></td>
<td>Id <br>Market </td>
<td>Name <br>Reference </td>
<td>SR Id </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/seasons/2021/REG/standings.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/seasons/2021/REG/standings.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/seasons/2021/REG/standings.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_standings_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_standings_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Standings feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/seasons/<code>{season_year}</code>/<code>{nba_season}</code>/standings.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), Trial (trial), or Simulation (simulation).</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>season_year</code></td>
<td>Year in 4 digit format (YYYY).</td>
</tr>
<tr>
<td><code>nba_season</code></td>
<td>Preseason (PRE), Regular Season (REG), In-Season Tournament (IST), or Postseason (PST).</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for Standings use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/nba/standings-v4.0.xsd">https://feed.elasticstats.com/schema/basketball/nba/standings-v4.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="team-draft-summary">Team Draft Summary</h2>
<p>Provides pre-draft pick order with live pick selections during the draft for a given team.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">Raw XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Draft Information Data Points:</b></td>
<td style="width:170px">Broadcast Channel <br>Broadcast Internet <br>Broadcast Network <br>Draft End Date <br>Draft Id <br>Draft Start Date <br>Draft Status <br>Draft Team Alias </td>
<td style="width:170px">Draft Team Id <br>Draft Team Market <br>Draft Team Name <br>Draft Year <br>Pick Id <br>Pick Number <br>Pick Overall </td>
<td style="width:170px">Round End Date <br>Round Id <br>Round Number <br>Round Start Date <br>Round Status <br>Trade Id </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>League Information Data Points:</b></td>
<td style="width:170px">Alias </td>
<td style="width:170px">Id </td>
<td style="width:170px">Name </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>Player Information Data Points:</b></td>
<td style="width:170px">Prospect Birth Place <br>Prospect Experience <br>Prospect First Name <br>Prospect Height <br>Prospect Id </td>
<td style="width:170px">Prospect Last Name <br>Prospect League Id <br>Prospect Name <br>Prospect Position </td>
<td style="width:170px">Prospect Source Id <br>Prospect Top Prospect <br>Prospect Weight </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>Team Information Data Points:</b></td>
<td style="width:170px">Alias <br>Id </td>
<td style="width:170px">Market <br>Name </td>
<td style="width:170px">Sequence </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>Venue Information Data Points:</b></td>
<td style="width:170px">Address <br>City </td>
<td style="width:170px">Country <br>Name </td>
<td style="width:170px">State </td>
</tr>
</tbody>
</table>
<blockquote>
  <p>To generate a Team Draft Summary for the Team ID below replace {your_api_key} with your API key:</p>
</blockquote>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/draft/nba/trial/v1/en/2021/teams/583ecc9a-fb46-11e1-82cb-f4ce4684ea4c/draft.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/draft/nba/trial/v1/en/2021/teams/583ecc9a-fb46-11e1-82cb-f4ce4684ea4c/draft.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/draft/nba/trial/v1/en/2021/teams/583ecc9a-fb46-11e1-82cb-f4ce4684ea4c/draft.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/NBA_Team_Draft_Summary_Sample_v7.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/NBA_Team_Draft_Summary_Sample_v7.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Team Draft Summary feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/draft/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/<code>{year}</code>/teams/<code>{team_id}</code>/draft.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), or Trial (trial).</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the Draft API you are accessing (current version: v1). NOTE: All draft feeds are currently v1.</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English).</td>
</tr>
<tr>
<td><code>year</code></td>
<td>Year in 4 digit format (YYYY).</td>
</tr>
<tr>
<td><code>team_id</code></td>
<td>ID of a given team.</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for the Team Draft Summary use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/draft/summary-v1.0.xsd">https://feed.elasticstats.com/schema/draft/summary-v1.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="team-profile-rosters">Team Profile (Rosters)</h2>
<p>Provides top-level team information and a full roster of active players.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>League Info Data Points:</b></td>
<td style="width:170px">Conference Alias <br>Conference Id <br>Conference Name </td>
<td style="width:170px">Division Alias <br>Division Id <br>Division Name </td>
<td style="width:170px">League Alias <br>League Id <br>League Name </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Player Info Data Points:</b></td>
<td>Abbreviated Name <br>Birth Date <br>Birth Place <br>College <br>Draft Pick <br>Draft Round <br>Draft Team <br>Draft Year <br>Experience <br>First Name </td>
<td>Full Name <br>Height (in) <br>High School <br>Injuries - Injury Comment <br>Injuries - Injury Description <br>Injuries - Injury Id <br>Injuries - Injury Start Date <br>Injuries - Injury Status <br>Injuries - Update Date </td>
<td>Jersey Number <br>Last Name <br>Name Suffix <br>Player Id <br>Position <br>Primary Position <br>Reference <br>Rookie Year <br>SR Id <br>Status <br>Updated <br>Weight (lbs) </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Team Info Data Points:</b></td>
<td>Alias <br>Coach - Experience (Years) <br>Coach - First Name <br>Coach - Full Name <br>Coach - Id <br>Coach - Last Name </td>
<td>Coach - Name Suffix <br>Coach - Position <br>Coach - Reference <br>Id <br>Market </td>
<td>Name <br>Reference <br>SR Id <br>Year Founded </td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Venue Info Data Points:</b></td>
<td style="width:170px">Address <br>Capacity <br>City <br>Country </td>
<td style="width:170px">Description <br>Name <br>SR Id </td>
<td style="width:170px">State <br>Venue Id <br>Zip </td>
</tr>
</tbody>
</table>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/v7/en/teams/583eca2f-fb46-11e1-82cb-f4ce4684ea4c/profile.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/nba/trial/v7/en/teams/583eca2f-fb46-11e1-82cb-f4ce4684ea4c/profile.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/nba/trial/v7/en/teams/583eca2f-fb46-11e1-82cb-f4ce4684ea4c/profile.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/nba_v7_team_profile_example.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/nba_v7_team_profile_example.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Team Profile feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/teams/<code>{team_id}</code>/profile.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), Trial (trial), or Simulation (simulation).</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the API you are accessing (Current Version: v7).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English), ru (Russian), zh (simplified Chinese), and ja (Japanese).</td>
</tr>
<tr>
<td><code>team_id</code></td>
<td>ID for a given team.</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for the Team Profile use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/basketball/team-v2.0.xsd">https://feed.elasticstats.com/schema/basketball/team-v2.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="top-prospects">Top Prospects</h2>
<p>Provides a list of the top prospects for a given year.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">Raw XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Draft Information Data Points:</b></td>
<td style="width:170px">Broadcast Channel <br>Broadcast Internet <br>Broadcast Network <br>Draft End Date </td>
<td style="width:170px">Draft Id <br>Draft Start Date <br>Draft Status <br>Draft Team Alias </td>
<td style="width:170px">Draft Team Id <br>Draft Team Market <br>Draft Team Name <br>Draft Year </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>League Information Data Points:</b></td>
<td style="width:170px">Alias <br>Conference Alias <br>Conference Id </td>
<td style="width:170px">Conference Name <br>Division Alias <br>Division Id </td>
<td style="width:170px">Division Name <br>Id <br>Name </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>Player Information Data Points:</b></td>
<td style="width:170px">Prospect Birth Place <br>Prospect Experience <br>Prospect First Name <br>Prospect Height <br>Prospect Id </td>
<td style="width:170px">Prospect Last Name <br>Prospect League Id <br>Prospect Name <br>Prospect Position </td>
<td style="width:170px">Prospect Source Id <br>Prospect Top Prospect <br>Prospect Weight </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>Team Information Data Points:</b></td>
<td style="width:170px">Alias <br>Id </td>
<td style="width:170px">Market </td>
<td style="width:170px">Name </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>Venue Information Data Points:</b></td>
<td style="width:170px">Address <br>City </td>
<td style="width:170px">Country <br>Name </td>
<td style="width:170px">State </td>
</tr>
</tbody>
</table>
<blockquote>
  <p>To generate the Top Prospects for the year below replace {your_api_key} with your API key:</p>
</blockquote>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/draft/nba/trial/v1/en/2021/top_prospects.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/draft/nba/trial/v1/en/2021/top_prospects.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/draft/nba/trial/v1/en/2021/top_prospects.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/NBA_Top_Prospects_Sample_v7.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/NBA_Top_Prospects_Sample_v7.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Top Prospects feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/draft/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/<code>{year}</code>/top_prospects.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), or Trial (trial).</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the Draft API you are accessing (current version: v1). NOTE: All draft feeds are currently v1.</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English).</td>
</tr>
<tr>
<td><code>year</code></td>
<td>Year in 4 digit format (YYYY).</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for the Top Prospects use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/draft/prospects-v1.0.xsd">https://feed.elasticstats.com/schema/draft/prospects-v1.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<h2 id="trades">Trades</h2>
<p>Provides summary details of all in-draft trades.</p>
<table class="basetable version">
<thead>
<tr>
<td style="width:130px" class="heading"><b>Update Frequency:</b></td>
<td colspan="3">As Necessary</td>
</tr>
</thead>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Content Type:</b></td>
<td colspan="3">Raw XML or JSON</td>
</tr>
</tbody>
<tbody>
<tr>
<td style="width:130px" class="heading"><b>Draft Information Data Points:</b></td>
<td style="width:170px">Broadcast Channel <br>Broadcast Internet <br>Broadcast Network <br>Draft End Date <br>Draft Id <br>Draft Start Date <br>Draft Status <br>Draft Team Alias <br>Draft Team Id <br>Draft Team Market </td>
<td style="width:170px">Draft Team Name <br>Draft Year <br>Future Pick Round <br>Future Pick Year <br>Item Amount <br>Item Id <br>Item Type <br>Pick Id <br>Pick Number <br>Pick Overall </td>
<td style="width:170px">Pick Supplemental <br>Round End Date <br>Round Id <br>Round Number <br>Round Start Date <br>Trade Complete <br>Trade Id <br>Trade Sequence <br>Transaction Id </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>League Information Data Points:</b></td>
<td style="width:170px">Alias </td>
<td style="width:170px">Id </td>
<td style="width:170px">Name </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>Team Information Data Points:</b></td>
<td style="width:170px">Alias <br>Team Direction </td>
<td style="width:170px">Id <br>Market </td>
<td style="width:170px">Name </td>
</tr>
</tbody>
<tbody>
<tr>
<td class="heading"><b>Venue Information Data Points:</b></td>
<td style="width:170px">Address <br>City </td>
<td style="width:170px">Country <br>Name </td>
<td style="width:170px">State </td>
</tr>
</tbody>
</table>
<blockquote>
  <p>To generate the Trades for the year below replace {your_api_key} with your API key:</p>
</blockquote>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/draft/nba/trial/v1/en/2021/trades.xml?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import http.client

conn = http.client.HTTPSConnection("api.sportradar.us")

conn.request("GET", "/draft/nba/trial/v1/en/2021/trades.xml?api_key={your_api_key}")

res = conn.getresponse()
data = res.read()

print(data.decode("utf-8"))</code></pre>
<pre><code class="shell language-shell">curl -X GET "https://api.sportradar.com/draft/nba/trial/v1/en/2021/trades.xml?api_key={your_api_key}"</code></pre>
<blockquote>
  <p>Click below for XML and JSON samples of this feed<br><br>
  <a onclick="window.open('/files/NBA_Trades_Sample_v7.xml','','scrollbars=yes,resizable=yes');return false;">XML</a> - <a onclick="window.open('/files/NBA_Trades_Sample_v7.json','','scrollbars=yes,resizable=yes');return false;">JSON</a></p>
</blockquote>
<p>Access the Trades feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/draft/nba/<code>{access_level}</code>/<code>{version}</code>/<code>{language_code}</code>/<code>{year}</code>/trades.<code>{format}</code>?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), or Trial (trial).</td>
</tr>
<tr>
<td><code>version</code></td>
<td>Version number of the Draft API you are accessing (current version: v1). NOTE: All draft feeds are currently v1.</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>2 letter code for supported languages: en (English).</td>
</tr>
<tr>
<td><code>year</code></td>
<td>Year in 4 digit format (YYYY).</td>
</tr>
<tr>
<td><code>format</code></td>
<td>xml or json.</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<p>To retrieve the XML Schema Definition (.XSD) for Trades use the following URL.</p>
<p><a href="https://feed.elasticstats.com/schema/draft/trades-v1.0.xsd">https://feed.elasticstats.com/schema/draft/trades-v1.0.xsd</a></p>
<p><a href="#top">Return to top</a></p>
<p><a id="Push"></a></p>
<h2 id="push-feeds">Push Feeds</h2>
<blockquote>
  <p>To best utilize Push feeds, we have included code samples in Ruby, Java and Python which provide an example of a way you can consume the feeds. Using these samples will output the feeds content to STDOUT. <br>For Java, we have also provided a <a href="https://developer.sportradar.com/files/stream-client.zip">Stream Client</a> to assist your integration. <br><br>Note: In the provided Java sample, replace "URL GOES HERE" with the desired Push feed URL.</p>
</blockquote>
<pre><code class="ruby language-ruby">require 'httpclient'

module Sportradar
    module HTTP
        module Stream
            class Client
                attr_reader :url, :logger

                def initialize(url, publisher, logger)
                    @url = url
                    @logger = logger
                    @publisher = publisher
                    @client = ::HTTPClient.new(:agent_name =&gt; 'SportsData/1.0')
                end

                def start
                    @thread ||= Thread.new do
                        logger.debug "Starting loop"
                        @client.get_content(url, :follow_redirect =&gt; true) do |chunk|
                            @publisher.publish(::JSON.parse(chunk)) if @publisher
                        end
                        logger.debug "finished loop"
                    end
                end

                def stop
                    @thread.terminate if @thread
                end

            end
        end
    end
end</code></pre>
<pre><code class="java language-java">package com.sportradar.http.stream.client;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class StreamClientTest {

    private StreamClient client;

    private static String SERVICE_URL = "&lt;url goes="" here=""&gt;";

    @Before
    public void setup() {
        client = new StreamClient();
    }

    @After
    public void cleanup() {
        client.terminate();
    }

    @Test
    public void testStream() throws Exception {
        Handler handler = new ConsoleHandler();
        client.stream(SERVICE_URL, handler);
        System.out.println("Connecting....");
        Thread.sleep(1 * 60 * 1000);
        System.out.println("Disconnecting....");
    }

}</code></pre>
<p>Some of our APIs include Push feeds that allow you to get updates as soon as they are available. Push API feeds automatically send JSON payload to you via a push service, and can dramatically reduce the number of calls you need to make to our RESTful API feeds. The structure of the Push feeds are similar to the structure of the corresponding RESTful API feed (i.e. Push Clock, Push Events, and Push Statistics). The push service ensures reliable and efficient delivery of the most up to date information.</p>
<p>Our Push services are based on a HTTP publish/subscribe model. When making a call to the Push APIs, you "subscribe" to various data feeds provided by our service; whenever new content is available on one of those feeds, the server pushes that information out to your client. When no new information is available on the feed, a heartbeat message is sent every 5 seconds to keep the connection active. If you want to filter the results of the feeds, there are several optional query string parameters that can be applied to the API call. If left unfiltered all data for the feed is displayed (i.e. all games, events, or statistics).</p>
<p>For your applications to accept data from our Push feeds, ensure that your application can:</p>
<ul>
<li>Can follow a HTTP redirect or use the location provided in the feeds header within one minute of your initial request.</li>
<li>Can accept HTTP data transfer encoded as chunked.</li>
</ul>
<p>Our Push service does not provide a "stateful session", there is no memory of what data has been sent previously. If you are disconnected from the Push session, you can use the RESTful API to catch up or recover from the disconnection.</p>
<p>Syntax for using our Push feeds and examples of the JSON payloads can be found below.</p>
<h2 id="push-clock">Push Clock</h2>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/stream/en/clock/subscribe?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import requests
import json

r = requests.get("https://api.sportradar.com/nba/trial/stream/en/clock/subscribe",
    params = {'api_key': 'your_api_key'},
    allow_redirects=False)

redirect_url = r.headers['Location']
r = requests.get(redirect_url, stream=True)

for line in r.iter_lines():
    # filter out keep-alive new lines
    if line:
        decoded_line = line.decode('utf-8')
        print(json.loads(decoded_line))</code></pre>
<pre><code class="shell language-shell">curl -L GET 'api.sportradar.us/nba/trial/stream/en/clock/subscribe?api_key={your_api_key}'</code></pre>
<blockquote>
  <p>The above command returns json like <a onclick="window.open('/files/NBA_v7_Push_Clock_Example.json','','scrollbars=yes,resizable=yes');return false;">this</a>.</p>
</blockquote>
<p>Access the Clock feed by replacing the parameters in the following URL:</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/stream/<code>{language_code}</code>/clock/subscribe?api_key=<code>{your_api_key}</code></p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production) or Trial (trial).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>Optional code for supported languages: en (English) or translations (Any other language translations. See optional query string parameters for locale.)</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<h3 id="optional-query-string-parameters">Optional Query String Parameters</h3>
<blockquote>
  <p>Example including optional query string parameters:</p>
</blockquote>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/stream/en/clock/subscribe?api_key={your_api_key}&amp;amp;status=inprogress&amp;amp;match=sd:match:76b2e680-7da7-461f-95ad-e7c34dbc4c56")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import requests
import json

r = requests.get("https://api.sportradar.com/nba/trial/stream/en/clock/subscribe",
    params = {'api_key': 'your_api_key', 'status': 'inprogress', 'match': 'sd:match:76b2e680-7da7-461f-95ad-e7c34dbc4c56'},
    allow_redirects=False)

redirect_url = r.headers['Location']
r = requests.get(redirect_url, stream=True)

for line in r.iter_lines():
    # filter out keep-alive new lines
    if line:
        decoded_line = line.decode('utf-8')
        print(json.loads(decoded_line))</code></pre>
<pre><code class="shell language-shell">curl -L GET 'api.sportradar.us/nba/trial/stream/en/clock/subscribe?api_key={your_api_key}&amp;amp;status=inprogress&amp;amp;match=sd:match:76b2e680-7da7-461f-95ad-e7c34dbc4c56'</code></pre>
<blockquote>
  <p>Example including query string parameters for translations:</p>
</blockquote>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/stream/translations/clock/subscribe?api_key={your_api_key}&amp;amp;locale=zh")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import requests
import json

r = requests.get("https://api.sportradar.com/nba/trial/stream/translations/clock/subscribe",
    params = {'api_key': 'your_api_key', 'locale': 'zh'},
    allow_redirects=False)

redirect_url = r.headers['Location']
r = requests.get(redirect_url, stream=True)

for line in r.iter_lines():
    # filter out keep-alive new lines
    if line:
        decoded_line = line.decode('utf-8')
        print(json.loads(decoded_line))</code></pre>
<pre><code class="shell language-shell">curl -L GET 'api.sportradar.us/nba/trial/stream/translations/clock/subscribe?api_key={your_api_key}&amp;amp;locale=zh'</code></pre>
<p>In addition to the URL parameters listed above, you can filter the Clock information with one or more of the following optional query string parameters.</p>
<table>
<thead><tr>
<td style="padding:20px;background-color:#00003c;color:white;width:57%;text-align:left;cursor:default;">
<b>Note</b>: Optional query string parameters must be added after your API key with an ampersand (&amp;). If you are filtering for more than one result, separate the results with a comma (,) and no spaces.
</td>
</tr></thead><tbody>
</tbody></table>
<p>Replace placeholders with the following query parameters:</p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>locale</code></td>
<td>Locale expressed as 2 letter code: locale={language_code} <br>Example: locale:en</td>
</tr>
<tr>
<td><code>match</code></td>
<td>Match id expressed as: sd:match:{match_id}. <br>Example: sd:match:76b2e680-7da7-461f-95ad-e7c34dbc4c56</td>
</tr>
<tr>
<td><code>status</code></td>
<td>Status type expressed as: inprogress or created. <br>Example: status=inprogress</td>
</tr>
</tbody>
</table>
<p><a href="#top">Return to top</a></p>
<h2 id="push-draft-picks">Push Draft Picks</h2>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/draft/nba/trial/stream/en/picks/subscribe?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import requests
import json

r = requests.get("https://api.sportradar.com/draft/nba/trial/stream/en/picks/subscribe",
    params = {'api_key': 'your_api_key'},
    allow_redirects=False)

redirect_url = r.headers['Location']
r = requests.get(redirect_url, stream=True)

for line in r.iter_lines():
    # filter out keep-alive new lines
    if line:
        decoded_line = line.decode('utf-8')
        print(json.loads(decoded_line))</code></pre>
<pre><code class="shell language-shell">curl -L GET 'api.sportradar.us/draft/nba/trial/stream/en/picks/subscribe?api_key={your_api_key}'</code></pre>
<blockquote>
  <p>The above command returns json like <a onclick="window.open('/files/NBA_Push_Draft_Picks_Sample.json','','scrollbars=yes,resizable=yes');return false;">this</a>.</p>
</blockquote>
<p>This endpoint retrieves pre-draft pick order with real-time pick selections during the draft.</p>
<p>https://api.sportradar.com/draft/nba/<code>{access_level}</code>/stream/en/picks/subscribe?api_key=<code>{your_api_key}</code></p>
<p>Replace placeholders with the following query parameters:</p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), or Trial (trial).</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<h3 id="optional-query-string-parameters-1">Optional Query String Parameters</h3>
<blockquote>
  <p>Example including optional query string parameters:</p>
</blockquote>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/draft/nba/trial/stream/en/picks/subscribe?api_key={your_api_key}&amp;amp;draft=sd:draft:e04e45a4-7a76-470c-a3ee-ed6bd56583f1&amp;amp;league=NBA")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import requests
import json

r = requests.get("https://api.sportradar.com/draft/nba/trial/stream/en/picks/subscribe",
    params = {'api_key': 'your_api_key', 'draft': 'sd:draft:e04e45a4-7a76-470c-a3ee-ed6bd56583f1', 'league': 'NBA'},
    allow_redirects=False)

redirect_url = r.headers['Location']
r = requests.get(redirect_url, stream=True)

for line in r.iter_lines():
    # filter out keep-alive new lines
    if line:
        decoded_line = line.decode('utf-8')
        print(json.loads(decoded_line))</code></pre>
<pre><code class="shell language-shell">curl -L GET 'api.sportradar.us/draft/nba/trial/stream/en/picks/subscribe?api_key={your_api_key}&amp;amp;draft=sd:draft:e04e45a4-7a76-470c-a3ee-ed6bd56583f1&amp;amp;league=NBA'</code></pre>
<p>In addition to the URL parameters listed above, you can filter the Pick information with one or more of the following optional query string parameters.</p>
<table>
<thead><tr>
<td style="padding:20px;background-color:#00003c;color:white;width:57%;text-align:left;cursor:default;">
<b>Note</b>: Optional query string parameters must be added after your API key with an ampersand (&amp;). If you are filtering for more than one result, separate the results with a comma (,) and no spaces.
</td>
</tr></thead><tbody>
</tbody></table>
<p>Replace placeholders with the following query parameters:</p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>draft</code></td>
<td>Draft id expressed as: sd:draft:{draft_id}. <br>Example: draft=sd:draft:e04e45a4-7a76-470c-a3ee-ed6bd56583f1</td>
</tr>
</tbody>
</table>
<p><a href="#top">Return to top</a></p>
<h2 id="push-draft-trades">Push Draft Trades</h2>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/draft/nba/trial/stream/en/trades/subscribe?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import requests
import json

r = requests.get("https://api.sportradar.com/draft/nba/trial/stream/en/trades/subscribe",
    params = {'api_key': 'your_api_key'},
    allow_redirects=False)

redirect_url = r.headers['Location']
r = requests.get(redirect_url, stream=True)

for line in r.iter_lines():
    # filter out keep-alive new lines
    if line:
        decoded_line = line.decode('utf-8')
        print(json.loads(decoded_line))</code></pre>
<pre><code class="shell language-shell">curl -L GET 'api.sportradar.us/draft/nba/trial/stream/en/trades/subscribe?api_key={your_api_key}'</code></pre>
<blockquote>
  <p>The above command returns json like <a onclick="window.open('/files/NBA_Push_Draft_Trades_Sample.json','','scrollbars=yes,resizable=yes');return false;">this</a>.</p>
</blockquote>
<p>This endpoint retrieves summary details of all in-draft trades in real-time.</p>
<p>https://api.sportradar.com/draft/nba/<code>{access_level}</code>/stream/en/trades/subscribe?api_key=<code>{your_api_key}</code></p>
<p>Replace placeholders with the following query parameters:</p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), or Trial (trial).</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<h3 id="optional-query-string-parameters-2">Optional Query String Parameters</h3>
<blockquote>
  <p>Example including optional query string parameters:</p>
</blockquote>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/draft/nfl/trial/stream/en/trades/subscribe?api_key={your_api_key}&amp;amp;draft=sd:draft:e04e45a4-7a76-470c-a3ee-ed6bd56583f1&amp;amp;league=NBA")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import requests
import json

r = requests.get("https://api.sportradar.com/draft/nfl/trial/stream/en/trades/subscribe",
    params = {'api_key': 'your_api_key', 'draft': 'sd:draft:e04e45a4-7a76-470c-a3ee-ed6bd56583f1', 'league': 'NFL'},
    allow_redirects=False)

redirect_url = r.headers['Location']
r = requests.get(redirect_url, stream=True)

for line in r.iter_lines():
    # filter out keep-alive new lines
    if line:
        decoded_line = line.decode('utf-8')
        print(json.loads(decoded_line))</code></pre>
<pre><code class="shell language-shell">curl -L GET 'api.sportradar.us/draft/nfl/trial/stream/en/trades/subscribe?api_key={your_api_key}&amp;amp;draft=sd:draft:e04e45a4-7a76-470c-a3ee-ed6bd56583f1&amp;amp;league=NBA'</code></pre>
<p>In addition to the URL parameters listed above, you can filter the Trades information with one or more of the following optional query string parameters.</p>
<table>
<thead><tr>
<td style="padding:20px;background-color:#00003c;color:white;width:57%;text-align:left;cursor:default;">
<b>Note</b>: Optional query string parameters must be added after your API key with an ampersand (&amp;). If you are filtering for more than one result, separate the results with a comma (,) and no spaces.
</td>
</tr></thead><tbody>
</tbody></table>
<p>Replace placeholders with the following query parameters:</p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>draft</code></td>
<td>Draft id expressed as: sd:draft:{draft_id}. <br>Example: draft=sd:draft:e04e45a4-7a76-470c-a3ee-ed6bd56583f1</td>
</tr>
</tbody>
</table>
<p><a href="#top">Return to top</a></p>
<h2 id="push-events">Push Events</h2>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/stream/en/events/subscribe?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import requests
import json

r = requests.get("https://api.sportradar.com/nba/trial/stream/en/events/subscribe",
    params = {'api_key': 'your_api_key'},
    allow_redirects=False)

redirect_url = r.headers['Location']
r = requests.get(redirect_url, stream=True)

for line in r.iter_lines():
    # filter out keep-alive new lines
    if line:
        decoded_line = line.decode('utf-8')
        print(json.loads(decoded_line))</code></pre>
<pre><code class="shell language-shell">curl -L GET 'api.sportradar.us/nba/trial/stream/en/events/subscribe?api_key={your_api_key}'</code></pre>
<blockquote>
  <p>The above command returns json like <a onclick="window.open('/files/NBA_v7_Push_Events_Example.json','','scrollbars=yes,resizable=yes');return false;">this</a>.</p>
</blockquote>
<p>This endpoint retrieves detailed, real-time information on every game event.</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/stream/<code>{language_code}</code>/events/subscribe?api_key=<code>{your_api_key}</code></p>
<p>Replace placeholders with the following query parameters:</p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), Trial (trial), or Simulation (simulation).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>Optional code for supported languages: en (English) or translations (Any other language translations. See optional query string parameters for locale.)</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<h3 id="optional-query-string-parameters-3">Optional Query String Parameters</h3>
<blockquote>
  <p>Example including optional query string parameters:</p>
</blockquote>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/stream/en/events/subscribe?api_key={your_api_key}&amp;amp;status=inprogress&amp;amp;match=sd:match:76b2e680-7da7-461f-95ad-e7c34dbc4c56")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import requests
import json

r = requests.get("https://api.sportradar.com/nba/trial/stream/en/events/subscribe",
    params = {'api_key': 'your_api_key', 'status': 'inprogress', 'match': 'sd:match:76b2e680-7da7-461f-95ad-e7c34dbc4c56'},
    allow_redirects=False)

redirect_url = r.headers['Location']
r = requests.get(redirect_url, stream=True)

for line in r.iter_lines():
    # filter out keep-alive new lines
    if line:
        decoded_line = line.decode('utf-8')
        print(json.loads(decoded_line))</code></pre>
<pre><code class="shell language-shell">curl -L GET 'api.sportradar.us/nba/trial/stream/en/events/subscribe?api_key={your_api_key}&amp;amp;status=inprogress&amp;amp;match=sd:match:76b2e680-7da7-461f-95ad-e7c34dbc4c56'</code></pre>
<blockquote>
  <p>Example including query string parameters for translations:</p>
</blockquote>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/stream/translations/events/subscribe?api_key={your_api_key}&amp;amp;locale=zh")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import requests
import json

r = requests.get("https://api.sportradar.com/nba/trial/stream/translations/events/subscribe",
    params = {'api_key': 'your_api_key', 'locale': 'zh'},
    allow_redirects=False)

redirect_url = r.headers['Location']
r = requests.get(redirect_url, stream=True)

for line in r.iter_lines():
    # filter out keep-alive new lines
    if line:
        decoded_line = line.decode('utf-8')
        print(json.loads(decoded_line))</code></pre>
<pre><code class="shell language-shell">curl -L GET 'api.sportradar.us/nba/trial/stream/translations/events/subscribe?api_key={your_api_key}&amp;amp;locale=zh'</code></pre>
<p>In addition to the URL parameters listed above, you can filter the Events information with one or more of the following optional query string parameters.</p>
<table>
<thead><tr>
<td style="padding:20px;background-color:#00003c;color:white;width:57%;text-align:left;cursor:default;">
<b>Note</b>: Optional query string parameters must be added after your API key with an ampersand (&amp;). If you are filtering for more than one result, separate the results with a comma (,) and no spaces.
</td>
</tr></thead><tbody>
</tbody></table>
<p>Replace placeholders with the following query parameters:</p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>event_category</code></td>
<td>Event category expressed as: {event_category}. <br>Example: event_category=shot</td>
</tr>
<tr>
<td><code>event_type</code></td>
<td>Event type expressed as: {event_type}. <br>Example: event_type=stoppage</td>
</tr>
<tr>
<td><code>locale</code></td>
<td>Locale expressed as 2 letter code: locale={language_code} <br>Example: locale:en</td>
</tr>
<tr>
<td><code>match</code></td>
<td>Match id expressed as: sd:match:{match_id}. <br>Example: sd:match:76b2e680-7da7-461f-95ad-e7c34dbc4c56</td>
</tr>
<tr>
<td><code>players</code></td>
<td>Player id expressed as: sd:player:{player_id}. <br>Example: sd:player:c1ff3e58-266f-4183-9fa1-d7c914cf4886</td>
</tr>
<tr>
<td><code>status</code></td>
<td>Status type expressed as: inprogress or created. <br>Example: status=inprogress</td>
</tr>
<tr>
<td><code>team</code></td>
<td>Team id expressed as: sd:team:{team_id}. <br>Example: sd:team:583eca2f-fb46-11e1-82cb-f4ce4684ea4c</td>
</tr>
</tbody>
</table>
<p><a href="#top">Return to top</a></p>
<h2 id="push-statistics">Push Statistics</h2>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/stream/en/statistics/subscribe?api_key={your_api_key}")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import requests
import json

r = requests.get("https://api.sportradar.com/nba/trial/stream/en/statistics/subscribe",
    params = {'api_key': 'your_api_key'},
    allow_redirects=False)

redirect_url = r.headers['Location']
r = requests.get(redirect_url, stream=True)

for line in r.iter_lines():
    # filter out keep-alive new lines
    if line:
        decoded_line = line.decode('utf-8')
        print(json.loads(decoded_line))</code></pre>
<pre><code class="shell language-shell">curl -L GET 'api.sportradar.us/nba/trial/stream/en/statistics/subscribe?api_key={your_api_key}'</code></pre>
<blockquote>
  <p>The above command returns json like <a onclick="window.open('/files/NBA_v7_Push_Statistics_Example.json','','scrollbars=yes,resizable=yes');return false;">this</a>.</p>
</blockquote>
<p>This endpoint retrieves detailed, real-time game stats at the team and player level for all live games.</p>
<p>https://api.sportradar.com/nba/<code>{access_level}</code>/stream/<code>{language_code}</code>/statistics/subscribe?api_key=<code>{your_api_key}</code></p>
<p>Replace placeholders with the following query parameters:</p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>access_level</code></td>
<td>Defines the access level of your API key as Production (production), Trial (trial), or Simulation (simulation).</td>
</tr>
<tr>
<td><code>language_code</code></td>
<td>Optional code for supported languages: en (English) or translations (Any other language translations. See optional query string parameters for locale.)</td>
</tr>
<tr>
<td><code>your_api_key</code></td>
<td>Your API key.</td>
</tr>
</tbody>
</table>
<h3 id="optional-query-string-parameters-4">Optional Query String Parameters</h3>
<blockquote>
  <p>Example including optional query string parameters:</p>
</blockquote>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/stream/en/statistics/subscribe?api_key={your_api_key}&amp;amp;status=inprogress&amp;amp;match=sd:match:0f4a0ce6-9abb-44ac-867f-75cc2154bb40")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import requests
import json

r = requests.get("https://api.sportradar.com/nba/trial/stream/en/statistics/subscribe",
    params = {'api_key': 'your_api_key', 'status': 'inprogress', 'match': 'sd:match:0f4a0ce6-9abb-44ac-867f-75cc2154bb40'},
    allow_redirects=False)

redirect_url = r.headers['Location']
r = requests.get(redirect_url, stream=True)

for line in r.iter_lines():
    # filter out keep-alive new lines
    if line:
        decoded_line = line.decode('utf-8')
        print(json.loads(decoded_line))</code></pre>
<pre><code class="shell language-shell">curl -L GET 'api.sportradar.us/nba/trial/stream/en/statistics/subscribe?api_key={your_api_key}&amp;amp;status=inprogress&amp;amp;match=sd:match:0f4a0ce6-9abb-44ac-867f-75cc2154bb40'</code></pre>
<blockquote>
  <p>Example including query string parameters for translations:</p>
</blockquote>
<pre><code class="ruby language-ruby">require 'uri'
require 'net/http'
require 'openssl'

url = URI("https://api.sportradar.com/nba/trial/stream/translations/statistics/subscribe?api_key={your_api_key}&amp;amp;locale=zh")

http = Net::HTTP.new(url.host, url.port)
http.use_ssl = true
http.verify_mode = OpenSSL::SSL::VERIFY_NONE

request = Net::HTTP::Get.new(url)

response = http.request(request)
puts response.read_body</code></pre>
<pre><code class="python language-python">import requests
import json

r = requests.get("https://api.sportradar.com/nba/trial/stream/translations/statistics/subscribe",
    params = {'api_key': 'your_api_key', 'locale': 'zh'},
    allow_redirects=False)

redirect_url = r.headers['Location']
r = requests.get(redirect_url, stream=True)

for line in r.iter_lines():
    # filter out keep-alive new lines
    if line:
        decoded_line = line.decode('utf-8')
        print(json.loads(decoded_line))</code></pre>
<pre><code class="shell language-shell">curl -L GET 'api.sportradar.us/nba/trial/stream/translations/statistics/subscribe?api_key={your_api_key}&amp;amp;locale=zh'</code></pre>
<p>In addition to the URL parameters listed above, you can filter the Statistics information with one or more of the following optional query string parameters.</p>
<table>
<thead><tr>
<td style="padding:20px;background-color:#00003c;color:white;width:57%;text-align:left;cursor:default;">
<b>Note</b>: Optional query string parameters must be added after your API key with an ampersand (&amp;). If you are filtering for more than one result, separate the results with a comma (,) and no spaces.
</td>
</tr></thead><tbody>
</tbody></table>
<p>Replace placeholders with the following query parameters:</p>
<table>
<thead>
<tr>
<th id="parameter">Parameter</th>
<th id="description">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>locale</code></td>
<td>Locale expressed as 2 letter code: locale={language_code} <br>Example: locale:en</td>
</tr>
<tr>
<td><code>match</code></td>
<td>Match id expressed as: sd:match:{match_id}. <br>Example: sd:match:0f4a0ce6-9abb-44ac-867f-75cc2154bb40</td>
</tr>
<tr>
<td><code>player</code></td>
<td>Player id expressed as: sd:player:{player_id}. <br>Example: sd:player:92ec1ed2-95f7-45da-a923-71fd541d6cdb</td>
</tr>
<tr>
<td><code>stats_type</code></td>
<td>Stat type expressed as {stats_type}. Example: stats_type=player</td>
</tr>
<tr>
<td><code>team</code></td>
<td>Team id expressed as: sd:team:{team_id}. <br>Example: sd:team:583eca2f-fb46-11e1-82cb-f4ce4684ea4c</td>
</tr>
<tr>
<td><code>status</code></td>
<td>Status type expressed as: inprogress or created. <br>Example: status=inprogress</td>
</tr>
</tbody>
</table>
<p><a href="#top">Return to top</a></p>
<p><a id="FAQNBAv7"></a></p>
<h2 id="frequently-asked-questions">Frequently Asked Questions</h2>
<p><strong>Q: What format are date fields presented in?</strong></p>
<p>A: When we present date only values we present these in the ISO 8601 standard format.
<br>
ex: 2013-04-03
<br>
We use these for attributes that have date and no time (such as birthdate). For more information: <a href="https://en.wikipedia.org/wiki/ISO_8601">https://en.wikipedia.org/wiki/ISO_8601</a></p>
<p><strong>Q: What format are the date/time fields presented in?</strong></p>
<p>A: All of our Date/Time attributes are in UTC, presented in the ISO 8601 standard format.
<br>
ex: 2013-04-03T18:15:00+00:00
<br>
For more information: <a href="https://en.wikipedia.org/wiki/ISO_8601">https://en.wikipedia.org/wiki/ISO_8601</a></p>
<p><strong>Q: What game statuses can I expect to see in the feeds and what are their definitions?</strong></p>
<p>A: Here is a list of the valid game statuses you can expect to see, and their definitions.</p>
<ul>
<li>scheduled - The game is scheduled to occur.</li>
<li>created – The game has been created and we have begun logging information.</li>
<li>inprogress – The game is in progress.</li>
<li>halftime - The game is currently at halftime.</li>
<li>complete – The game is over, but stat validation is not complete.</li>
<li>closed – The game is over and the stats have been validated.</li>
<li>cancelled – The game has been cancelled. No makeup game will be played as a result.</li>
<li>delayed – The start of the game is currently delayed or the game has gone from in progress to delayed for some reason.</li>
<li>postponed – The game has been postponed, to be made up at another day and time. Once the makeup game is announced, a new game and ID will be created and scheduled on the announced makeup date. </li>
<li>time-tbd – The game has been scheduled, but a time has yet to be announced.</li>
<li>if-necessary – The game will be scheduled if it is required.</li>
<li>unnecessary – The series game was scheduled to occur, but will not take place due to one team clinching the series early.</li>
</ul>
<p><strong>Q: What series statuses can I expect to see in the feeds and what are their definitions?</strong></p>
<p>A: Here is a list of the valid series statuses you can expect to see, and their definitions.</p>
<ul>
<li>scheduled – The series is scheduled to occur.</li>
<li>inprogress – The series is in progress.</li>
<li>closed – The series is over.</li>
</ul>
<p><strong>Q: What player positions can I expect to see in the feeds?</strong></p>
<p>A: Here is a list of the valid player positions you can expect to see.</p>
<ul>
<li>NA</li>
<li>C</li>
<li>C-F</li>
<li>F</li>
<li>F-C</li>
<li>F-G</li>
<li>G</li>
<li>G-F</li>
</ul>
<p><strong>Q: What player primary positions can I expect to see in the feeds?</strong></p>
<p>A: Here is a list of the valid player primary positions you can expect to see.</p>
<ul>
<li>NA</li>
<li>C</li>
<li>PF</li>
<li>PG</li>
<li>SF</li>
<li>SG</li>
</ul>
<p><strong>Q: What player statuses can I expect to see in the feeds?</strong></p>
<p>A: Here is a list of the valid player statuses you can expect to see.</p>
<ul>
<li>ACT – The player is on the team’s active roster</li>
<li>SUS – The player is suspended</li>
<li>IR – The player is on injured reserve</li>
<li>TWO-WAY - The player is on a two-way contract</li>
<li>NWT – The player is no longer with the team</li>
<li>FA – Free Agent</li>
<li>RET – Retired</li>
<li>DUP – Duplicate</li>
<li>M-LEAGUE – Sent to minor league team</li>
</ul>
<p><strong>Q: What player injury statuses can I expect to see in the feeds?</strong></p>
<p>A: Here is a list of the valid player injury statuses you can expect to see.</p>
<ul>
<li>Unknown</li>
<li>Day to Day</li>
<li>Out</li>
<li>Out for Season</li>
<li>Out Indefinitely</li>
</ul>
<p><strong>Q: What shot type descriptions can I expect to see in the feeds?</strong></p>
<p>A: Here is a list of the valid shot types with the descriptions you can expect to see for each shot type.</p>
<p>Jump Shot (This is the only shot type for 3-point attempts)</p>
<ul>
<li>bank</li>
<li>driving</li>
<li>driving bank</li>
<li>driving floating</li>
<li>driving floating bank</li>
<li>turnaround</li>
<li>turnaround bank</li>
<li>turnaround fadeaway</li>
<li>turnaround fadeaway bank</li>
<li>floating</li>
<li>fadeaway</li>
<li>fadeaway bank</li>
<li>stepback</li>
<li>stepback bank</li>
<li>pullup</li>
<li>pullup bank</li>
<li>running</li>
<li>running pullup</li>
</ul>
<p>Layup</p>
<ul>
<li>alley-oop</li>
<li>cutting</li>
<li>cutting finger roll</li>
<li>driving</li>
<li>driving reverse</li>
<li>driving finger roll</li>
<li>finger roll</li>
<li>putback</li>
<li>reverse</li>
<li>running</li>
<li>running reverse</li>
<li>running finger roll</li>
<li>running alley-oop</li>
<li>tip</li>
</ul>
<p>Dunk</p>
<ul>
<li>alley-oop</li>
<li>tip</li>
<li>driving</li>
<li>driving reverse</li>
<li>putback</li>
<li>running</li>
<li>reverse</li>
<li>running reverse</li>
<li>running alley-oop</li>
<li>cutting</li>
</ul>
<p>Tip Shot</p>
<p>Hook</p>
<ul>
<li>bank</li>
<li>driving</li>
<li>driving bank</li>
<li>turnaround</li>
<li>turnaround bank</li>
</ul>
<p><strong>Q: What are the valid turnover type descriptions I can expect to see in the feeds?</strong></p>
<p>A: Here is a list of the valid turnover types you can expect to see.</p>
<ul>
<li>Traveling</li>
<li>Bad Pass</li>
<li>Lost Ball</li>
<li>Carrying</li>
<li>Palming</li>
<li>Out of Bounds</li>
<ul>
<li>Lost Ball</li>
<li>Step</li>
<li>Bad Pass</li>
</ul>
<li>Double Dribble</li>
<li>Offensive Goaltending</li>
<li>3-second violation</li>
<li>5-second violation</li>
<li>8-second violation</li>
<li>10-second violation</li>
<li>Back Court Violation</li>
<li>Shot Clock Violation</li>
<li>Lane Violation</li>
<li>Illegal Assist</li>
<li>Illegal Screen</li>
<li>Turnover</li>
<li>Too Many Players</li>
<li>Excess Timeout</li>
<li>Basket from Below</li>
<li>Swinging Elbows</li>
<li>Offensive Foul</li>
<li>Punched Ball</li>
<li>Opposite Basket</li>
<li>Jump Ball Violation</li>
<li>Inbound</li>
<li>Discontinue Dribble</li>
<li>5-second Violation Inbound</li>
<li>Kicked ball Violation</li>
<li>5-second Violation Back to the Basket</li>
</ul>
<p><strong>Q: What are the valid stoppage reasons I can expect to see in the feeds?</strong></p>
<p>A: Here is a list of the valid stoppage reasons you can expect to see.</p>
<ul>
<li>Out of Bounds</li>
<li>Equipment Malfunction</li>
<li>Blood Rule</li>
<li>Court Cleanup</li>
<li>Injury</li>
<li>Other</li>
</ul>
<p><strong>Q: What are the valid jump ball reasons I can expect to see in the feeds?</strong></p>
<p>A: Here is a list of the valid jump ball reasons you can expect to see.</p>
<ul>
<li>Lodged Ball</li>
<li>Held Ball</li>
<li>Double Violation</li>
<li>Unclear Pass</li>
<li>Double Foul</li>
</ul>
<p><strong>Q: What are the valid foul type descriptions I can expect to see in the feeds?</strong></p>
<p>A: Here is a list of the valid foul type descriptions you can expect to see.</p>
<ul>
<li>Charge</li>
<li>Off the Ball</li>
<li>Block</li>
<li>Take</li>
<li>Double</li>
<li>Shooting</li>
<li>Clear Path</li>
<li>Loose Ball</li>
<li>Blocking</li>
<li>Player Control</li>
<li>Shooting block</li>
<li>Elbowing</li>
<li>Punching</li>
<li>Flagrant One</li>
<li>Flagrant Two</li>
<li>Away from Play</li>
<li>Unsportsmanlike Conduct</li>
<li>Rim Hanging</li>
<li>Delay of Game</li>
<li>Taunting</li>
<li>Indirect</li>
<li>Excess Timeout</li>
<li>Too Many Players</li>
<li>Inbound</li>
<li>Defensive Three Second</li>
<li>Flopping</li>
</ul>
<p><strong>Q: What are the valid free throw types I can expect to see in the feeds?</strong></p>
<p>A: Here is a list of the valid free throw types you can expect to see.</p>
<ul>
<li>Regular</li>
<li>Technical</li>
<li>Flagrant</li>
<li>Clear Path</li>
</ul>
<p><strong>Q: What ejection types can I expect to see in the feeds?</strong></p>
<p>A: Here is a list of the valid ejection types you can expect to see.</p>
<ul>
<li>Technical</li>
<li>Second Technical</li>
<li>Second Flagrant Type 1</li>
<li>Flagrant Type 2</li>
<li>Other</li>
</ul>
<p><strong>Q: Are there cases when not all game data is available?</strong></p>
<p>A: Yes, in cases when Sportradar is unable to receive data from the venue, Sportradar's in-house operators will take over coverage of the game. In these cases, the following data points will not be available or will not update during the game.</p>
<ul>
<li>Defensive Points per Possession</li>
<li>Defensive Rating</li>
<li>Defensive Rebounds Percentage</li>
<li>Fast Break Attempts</li>
<li>Fast Break Made</li>
<li>Fast Break Percentage</li>
<li>Minus</li>
<li>Offensive Points per Possession</li>
<li>Offensive Rating</li>
<li>Offensive Rebounds Percentage</li>
<li>Opponent Possessions</li>
<li>Plus</li>
<li>Rebounds Percentage</li>
<li>Second Chance Attempts</li>
<li>Second Chance Made</li>
<li>Second Chance Percentage</li>
<li>Team Defensive Rebounds</li>
<li>Team Offensive Rebounds</li>
<li>Time Spent Leading</li>
<li>Turnovers Percentage</li>
</ul>
<p>After the game, when on-venue data can be received again, these fields will be updated.</p>
<p><strong>Q: What is the scale of the X Y coordinates?</strong></p>
<p>A: The court we use is 1128 by 600. The scale is in inches. Here is a layout of the court:</p>
<table border="1">
<thead>
<tr class="header">
<th style="width:100px">0</th>
<th style="width:100px"></th>
<th style="width:100px"><em><strong>X</strong></em></th>
<th style="width:100px"></th>
<th style="width:100px">1128</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="odd">
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="odd">
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="odd">
<td><em><strong>Y</strong></em></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="odd">
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="odd">
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td><strong>600</strong></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Q: What x/y vertices define action areas in the x/y coordinate graph?</strong></p>
<p>A: A list of areas is included below. Note that these vertices are for the left side of the court. For the right side, we use the following calculation, where length=1128 and width=600:</p>
<ul>
<li>right-court-point =&nbsp;(length - x, width - y)</li>
<li>left_basket=[63, 300]</li>
<li>right_basket=[1065, 300]</li>
</ul>
<p>Areas:</p>
<ul>
<li>underbasket: [ 48, 252 ], [ 77, 258 ], [ 111, 300 ], [ 77, 342 ], [ 48, 348 ]</li>
<li>inthepaint: [ 0, 204 ], [ 228, 204 ], [ 228, 396 ], [ 0, 396 ]</li>
<li>insiderightwing: [ 0, 36 ], [ 115, 36 ], [ 77, 204 ], [ 0, 204 ]</li>
<li>insideright: [ 115, 36 ], [ 225, 87 ], [ 294, 161 ], [ 225, 204 ], [ 77, 204 ]</li>
<li>insidecenter: [ 225, 204 ], [ 294, 161 ], [ 324, 218 ], [ 337, 300 ], [ 324, 382 ], [ 294, 439 ], [ 225, 396 ]</li>
<li>insideleft: [ 115, 564 ], [ 225, 513 ], [ 294, 439 ], [ 225, 396 ], [ 77, 396 ]</li>
<li>insideleftwing: [ 0, 564 ], [ 115, 564 ], [ 77, 396 ], [ 0, 396 ]</li>
<li>outsiderightwing: [ 0, 0 ], [ 122, 0 ], [ 115, 36 ], [ 0, 36 ]</li>
<li>outsideright: [ 122, 0 ], [ 492, 0 ], [ 492, 69 ], [ 324, 218 ], [ 294, 161 ], [ 225, 87 ], [ 115, 36 ]</li>
<li>outsidecenter: [ 324, 216 ], [ 492, 69 ], [ 492, 531 ], [ 324, 382 ], [ 337, 300 ]</li>
<li>outsideleft: [ 122, 600 ], [ 492, 600 ], [ 492, 531 ], [ 324, 382 ], [ 294, 439 ], [ 225, 513 ], [ 115, 564 ]</li>
<li>outsideleftwing: [ 0, 600 ], [ 122, 600 ], [ 115, 564 ], [ 0, 564 ]</li>
<li>backcourt: [ 492, 0 ], [ 564, 0 ], [ 564, 600 ], [ 492, 600 ]</li>
</ul>
<p><strong>Q: Why does the team_basket attribution in the play-by-play feed not match the basket orientation (left vs. right) in the broadcast or game tracking that I'm viewing?</strong>&nbsp;</p>
<p>A: Our team_basket attribution is set to match the orientation of the local television broadcast, which is on the opposite side of the scorer's table. The team_basket attribution&nbsp;<strong>may not match</strong>&nbsp;the orientation used by the particular broadcast or game tracker that you are viewing.</p>
<p>If you want to provide a perspective from the scorer's table, you will have to map the coordinates so that the coordinates attributed to left side of the court are attributed to the right side of the court on your end (and vice versa).</p>
<p><strong>Q: What are the valid events types tracked in the play by play feed?</strong></p>
<p>A: Here is a list of the valid event types you can expect to see.</p>
<ul>
<li>challengereview - Instant replay (challenge: &lt;outcome&gt;)</li>
<li>challengetimeout - &lt;team name&gt; challenge timeout</li>
<li>clearpathfoul - &lt;charged_to&gt; clear path foul (&lt;drawn_by&gt; draws the foul)</li>
<li>deadball - &lt;given_to&gt; rebound (deadball)</li>
<li>defaultviolation - &lt;charged_to&gt; violation</li>
<li>defensivegoaltending - &lt;charged_to&gt; defensive goaltending violation</li>
<li>delay - &lt;charged_to&gt; delay of game violation</li>
<li>doublelane - &lt;charged_to&gt; double lane violation</li>
<li>ejection - &lt;given_to&gt; ejected from the game (&lt;ejection_type&gt;)</li>
<li>endperiod - End of &lt;nth period/half&gt;</li>
<li>flagrantone - &lt;charged_to&gt; flagrant 1 (&lt;drawn_by&gt; draws the foul)</li>
<li>flagranttwo - &lt;charged_to&gt; flagrant 2 (&lt;drawn_by&gt; draws the foul)</li>
<li>freethrowmade - &lt;taken_by&gt; makes &lt;free_throw_type&gt; free throw &lt;attempt&gt;</li>
<li>freethrowmiss - &lt;taken_by&gt; misses &lt;free_throw_type&gt; free throw &lt;attempt&gt; (&lt;charged_to&gt; lane_violation)</li>
<li>jumpball - Jump ball &lt;reason&gt;. &lt;possessor&gt; vs &lt;challenger&gt; (&lt;possession&gt; gains possession)</li>
<li>jumpballviolation - &lt;charged_to&gt; jump ball violation</li>
<li>kickball - &lt;charged_to&gt; kicked ball violation</li>
<li>lane - &lt;charged_to&gt; lane violation</li>
<li>lineupchange - &lt;team_name&gt; lineup change (&lt;players&gt;)</li>
<li>offensivefoul - &lt;charged_to&gt; offensive foul (&lt;foul_type_desc&gt;) (&lt;drawn_by&gt; draws the foul)</li>
<li>officialtimeout - Official timeout</li>
<li>openinbound - Open inbound &lt;team_name&gt;</li>
<li>opentip - &lt;home&gt; vs &lt;away&gt; (&lt;possession&gt; gains possession)</li>
<li>personalfoul - &lt;charged_to&gt; personal foul (&lt;foul_type_desc&gt;) (&lt;drawn_by&gt; draws the foul)</li>
<li>possession - &lt;possession&gt; gain possession</li>
<li>rebound - &lt;given_to&gt; &lt;offensive/defensive&gt; rebound</li>
<li>requestreview - Instant replay (request)</li>
<li>review - Play review (&lt;reason&gt;, &lt;outcome&gt;)</li>
<li>shootingfoul - &lt;charged_to&gt; shooting foul (&lt;drawn_by&gt; draws the foul)</li>
<li>stoppage - Stoppage (&lt;reason&gt;)</li>
<li>teamtimeout - &lt;team_name&gt; &lt;duration&gt; second timeout</li>
<li>technicalfoul - &lt;charged_to&gt; technical foul (&lt;foul_type_desc&gt;)</li>
<li>technicalfoulnonunsportsmanlike - &lt;charged_to&gt; technical foul (&lt;foul_type_desc&gt;)</li>
<li>threepointmade - &lt;taken_by&gt; makes three point &lt;shot_type_desc&gt; &lt;shot_type&gt; (&lt;assisted_by&gt; assists)</li>
<li>threepointmiss - &lt;taken_by&gt; misses three point &lt;shot_type_desc&gt; &lt;shot_type&gt; or &lt;blocked_by&gt; blocks &lt;taken_by&gt; three point &lt;shot_type_desc&gt; &lt;shot_type&gt;</li>
<li>turnover - &lt;charged_to&gt; turnover (turnover_type_desc&gt;)</li>
<li>tvtimeout - TV Timeout</li>
<li>twopointmade - &lt;taken_by&gt; makes two point &lt;shot_type_desc&gt; &lt;shot_type&gt; (&lt;assisted_by&gt; assists)</li>
<li>twopointmiss - &lt;taken_by&gt; misses two point &lt;shot_type_desc&gt; &lt;shot_type&gt; or &lt;blocked_by&gt; blocks &lt;taken_by&gt; two point &lt;shot_type_desc&gt; &lt;shot_type&gt;</li>
</ul>
<p><strong>Q: What are the valid playoff statuses and their definitions?</strong></p>
<p>A: Here is a list of the valid playoff statuses and their definitions:</p>
<ul>
<li>conference – The team has clinched the best record home court advantage for the playoffs.</li>
<li>division – The team has clinched the division.</li>
<li>eliminated – The team has been eliminated from playoff contention.</li>
<li>playoff_berth – The team has clinched a playoff berth.</li>
</ul>
<p><strong>Q: What are the valid qualifier names?</strong></p>
<p>A: Here is a list of the valid qualifier names:</p>
<ul>
<li>2ndchance</li>
<li>fastbreak</li>
<li>fromturnover</li>
<li>defensivegoaltending</li>
<li>pointsinthepaint</li>
<li>fastbreak</li>
<li>fromturnover</li>
<li>team</li>
<li>deadball</li>
<li>1freethrow</li>
<li>2freethrow</li>
<li>mandatory</li>
</ul>
<p><strong>Q: When are scores added to the schedule feeds?</strong></p>
<p>A: Final scores are added to the schedule feeds when the game status changes to completed.</p>
<p><strong>Q: Do you provide your feeds in any languages other than English?</strong></p>
<p>A: Currently, we provide our feeds in 4 languages: English, Russian, Simplified Chinese, and Japanese. The codes are as follows:</p>
<ul>
<li>English: eu</li>
<li>Russian: ru</li>
<li>Simplified Chinese: zh</li>
<li>Japanese: ja</li>
</ul>
<p>Please note, our translated feeds include translated teams, players, and play-by-play descriptions. The feeds themselves are in English, but the content of the attributes has been translated.</p>
<p><strong>Q: What are the possible values for event category used in the Push Events feed?</strong></p>
<p>A: Here is a list of the valid event categories you can expect to see.</p>
<ul>
<li>freethrow</li>
<li>freethrow,score</li>
<li>foul</li>
<li>foul,flagrant</li>
<li>foul,warning</li>
<li>lineupchange</li>
<li>period,stoppage</li>
<li>period,stoppage,possession</li>
<li>possession</li>
<li>shot</li>
<li>shot,score</li>
<li>stoppage</li>
<li>timeout,stoppage</li>
<li>turnover</li>
<li>violation</li>
</ul>
<p><strong>Q: What are the possible values for statistics type used in the Push Events feed?</strong></p>
<p>A: Here is a list of the valid statistics types you can expect to see.</p>
<ul>
<li>fieldgoal</li>
<li>assist</li>
<li>block</li>
<li>attemptblocked</li>
<li>rebound</li>
<li>freethrow</li>
<li>turnover</li>
<li>steal</li>
<li>personalfoul</li>
<li>flagrantfoul</li>
<li>technicalfoul</li>
<li>ejection</li>
<li>fouldrawn</li>
<li>offensivefoul</li>
</ul>
<p><strong>Q: What formulas are used to calculate efficiency and efficiency game score?</strong></p>
<p>A: Here are the formulas we use:</p>
<p><strong>Efficiency</strong>: (Points + Rebounds + Assists + Steals + Blocks − Missed Field Goal Attempts − Missed Free Throw Attempts - Turnovers)</p>
<p><strong>Efficiency Game Score</strong>:&nbsp;(Points) + (0.4*Field Goals Made) - (0.7*Field Goals Attempted) - (0.4*Free Throws Missed) + (0.7*Offensive Rebounds) + (0.3*Defensive Rebounds) + (Steals) + (0.7*Assists) + (0.7*Blocks) – (0.4*Personal Fouls) – (Turnovers)</p>
<p><strong>Note:</strong>&nbsp;<em>For this team efficiency calculations, statistics attributed to the team rather than a player are not counted (i.e. team rebounds, team turnovers, team fouls, etc.).</em></p>
<p><strong>Q: What types of splits do you provide?</strong></p>
<p>A: Our splits are broken down into the following categories based on feed endpoint:</p>
<p><strong>Game</strong>:</p>
<ul>
<li>home</li>
<li>loss</li>
<li>opponent</li>
<li>over_500</li>
<li>road</li>
<li>under_500</li>
<li>venue</li>
<li>win</li>
</ul>
<p><strong>Hierarchy</strong>:</p>
<ul>
<li>conference</li>
<li>division</li>
</ul>
<p><strong>In-game</strong>:</p>
<ul>
<li>higher_fg_pct</li>
<li>less_personal_fouls</li>
<li>less_rebounds</li>
<li>less_turnovers</li>
<li>lower_fg_pct</li>
<li>more_personal_fouls</li>
<li>more_rebounds</li>
<li>more_turnovers</li>
<li>over_100_against</li>
<li>over_100_for</li>
<li>same_personal_fouls</li>
<li>same_rebounds</li>
<li>same_turnovers</li>
<li>under_100_against</li>
<li>under_100_for</li>
</ul>
<p><strong>Schedule</strong>:</p>
<ul>
<li>days_of_rest</li>
<li>day_of_week</li>
<li>last_5</li>
<li>last_10</li>
<li>month</li>
<li>week</li>
</ul>
<p><strong>Q: What are the possible values for player – not_playing_reason?</strong></p>
<p>A: Here is a list of the valid not playing reasons you can expect to see, and their descriptions.</p>
<ul>
<li>DNP - Coaches Decision</li>
<li>DNP - Injury/Illness</li>
<li>DNP - Personal</li>
<li>DNP - Rest</li>
<li>DNP - Trade Pending</li>
<li>DNP - League Suspension</li>
<li>DNP - Team Suspension</li>
<li>DNP - Return to Competition Reconditioning</li>
<li>DNP - Ineligible to Play</li>
<li>DNP - Health and Safety Protocols</li>
<li>DND - Coaches Decision</li>
<li>DND - Injury/Illness</li>
<li>DND - Personal</li>
<li>DND - Rest</li>
<li>DND - Trade Pending</li>
<li>DND - League Suspension</li>
<li>DND - Team Suspension</li>
<li>DND - Return to Competition Reconditioning</li>
<li>DND - Ineligible to Play</li>
<li>DND - Health and Safety Protocols</li>
<li>NWT - Coaches Decision</li>
<li>NWT - Injury/Illness</li>
<li>NWT - Personal</li>
<li>NWT - Rest</li>
<li>NWT - Trade Pending</li>
<li>NWT - League Suspension</li>
<li>NWT - Team Suspension</li>
<li>NWT - Return to Competition Reconditioning</li>
<li>NWT - Ineligible to Play</li>
<li>NWT - Health and Safety Protocols</li>
<li>NWT - Not With Team</li>
<li>Inactive - Injury/Illness</li>
<li>Inactive - Personal</li>
<li>Inactive - Rest</li>
<li>Inactive - Suspended</li>
<li>Inactive - Trade Pending</li>
<li>Inactive - Coaches Decision</li>
<li>Inactive - G League Team</li>
<li>Inactive - G League - On Assignment</li>
<li>Inactive - G League - Two-Way</li>
<li>Inactive - Not With Team</li>
<li>Inactive - Team Suspension</li>
<li>Inactive - League Suspension</li>
<li>Inactive - Health and Safety Protocols</li>
<li>Inactive - Return to Competition Reconditioning</li>
<li>Inactive - NWT Return to Competition Reconditioning</li>
<li>Inactive - Ineligible to Play</li>
</ul>
<p><strong>Q: What are the valid transaction_code and transaction_type values?</strong></p>
<p>A: Here is a list of the valid transaction codes and types:</p>
<ul>
<li>ACT - Activated</li>
<li>MIN - Assigned to Minors</li>
<li>CL - Claimed</li>
<li>CEXP - Contract Expired</li>
<li>CEXT - Contract Extension</li>
<li>DEC - Deceased</li>
<li>FA - Declared Free Agency</li>
<li>DRA - Drafted</li>
<li>SUS - League Suspension</li>
<li>ABS - Leave of Absence</li>
<li>NWT - Not With Team</li>
<li>TRAN - Other Transaction</li>
<li>INACT - Placed on Inactive List</li>
<li>RSGN - Re-Signed</li>
<li>REC - Recalled from Minors</li>
<li>RSUS - Reinstated from Suspension</li>
<li>REL - Released</li>
<li>RET - Retired</li>
<li>EDRA - Selected in Expansion Draft</li>
<li>SGN - Signed</li>
<li>10D - Signed to 10-Day Contract</li>
<li>10D2- Signed to Second 10-Day Contract</li>
<li>TSUS - Team Suspension</li>
<li>TRD - Traded</li>
<li>WA - Waived</li>
</ul>
<p><strong>Q: When should I expect to see prospect data in the Prospects endpoint?</strong></p>
<p>A: College prospects will appear after the NCAA Early-Entrant withdrawal deadline has passed. International prospects will appear after the the NBA Early-Entrant withdrawal deadline has passed.</p>
<p><strong>Q: When should I expect pre-draft trades to be reflected in Trades and Draft Summary endpoints?</strong></p>
<p>A: The trades and draft summary endpoints will reflect pre-draft trades after the NBA Draft Lottery has occurred.</p>
<p><a href="#top">Return to top</a><br>
        </p></div><div class="grid-nav offside offside--left"><div id="docs-nav-inner" class="padding-top"><ul id="nav-docs">
<li class="active"><a href="https://developer.sportradar.com/docs/read/Home">Documentation</a></li>
<li><a href="https://developer.sportradar.com/docs/read/american_football" class="js-ajax-ignore">Football (American Football)</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/american_football/NFL_v7">NFL v7</a></li>
<li><a href="https://developer.sportradar.com/docs/read/american_football/NFL_v6">NFL v6</a></li>
<li><a href="https://developer.sportradar.com/docs/read/american_football/NFL_v5">NFL v5</a></li>
<li><a href="https://developer.sportradar.com/docs/read/american_football/NCAA_Mens_Football_v7">NCAA Men's Football v7</a></li>
<li><a href="https://developer.sportradar.com/docs/read/american_football/USFL_v7">USFL v7</a></li>
<li><a href="https://developer.sportradar.com/docs/read/american_football/Global_American_Football_v2">Global American Football v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/american_football/Global_American_Football_v1">Global American Football v1</a></li>
</ul>
</li>
<li><a href="https://developer.sportradar.com/docs/read/football_soccer" class="js-ajax-ignore">Football (Soccer)</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/football_soccer/Soccer_Advanced_Analytics_v1">Soccer Advanced Analytics v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/football_soccer/Soccer_Extended_v4">Soccer Extended v4</a></li>
<li><a href="https://developer.sportradar.com/docs/read/football_soccer/Soccer_v4">Soccer v4</a></li>
</ul>
</li>
<li><a href="https://developer.sportradar.com/docs/read/australian_rules_football" class="js-ajax-ignore">Australian Rules Football</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/australian_rules_football/Australian_Rules_Football_v3">Australian Rules Football v3</a></li>
<li><a href="https://developer.sportradar.com/docs/read/australian_rules_football/Australian_Rules_Football_v2">Australian Rules Football v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/australian_rules_football/Australian_Rules_Football_v1">Australian Rules Football v1</a></li>
</ul>
</li>
<li><a href="https://developer.sportradar.com/docs/read/baseball" class="js-ajax-ignore">Baseball</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/baseball/MLB_v7_with_Statcast">MLB v7 with Statcast</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseball/MLB_v7">MLB v7</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseball/MLB_v66">MLB v6.6</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseball/MLB_v65">MLB v6.5</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseball/MLB_v6">MLB v6</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseball/MLB_v5">MLB v5</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseball/Global_Baseball_v2">Global Baseball v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseball/Global_Baseball_v1">Global Baseball v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseball/MLB_Historical_v1">MLB Historical v1</a></li>
</ul>
</li>
<li class="active"><a href="https://developer.sportradar.com/docs/read/basketball" class="js-ajax-ignore">Basketball</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/basketball/NBA_v8">NBA v8</a></li>
<li class="active current-page"><a href="https://developer.sportradar.com/docs/read/basketball/NBA_v7" class="active js-ajax-ignore">NBA v7</a><ul><li><a href="#nba-api-overview">NBA API Overview</a></li><li><a href="#nba-api-map">NBA API Map</a></li><li><a href="#coverage-levels">Coverage Levels</a></li><li><a href="#nba-api-v7-simulations">NBA API v7 Simulations</a></li><li><a href="#in-season-tournament">In-Season Tournament</a></li><li><a href="#play-in-tournament">Play-In Tournament</a></li><li><a href="#all-star-game-faq">All-Star Game FAQ</a></li><li><a href="#daily-change-log">Daily Change Log</a></li><li><a href="#daily-schedule">Daily Schedule</a></li><li><a href="#daily-transfers">Daily Transfers</a></li><li><a href="#draft-summary">Draft Summary</a></li><li><a href="#free-agents">Free Agents</a></li><li><a href="#game-boxscore">Game Boxscore</a></li><li><a href="#game-summary">Game Summary</a></li><li><a href="#injuries">Injuries</a></li><li><a href="#league-hierarchy">League Hierarchy</a></li><li><a href="#league-leaders">League Leaders</a></li><li><a href="#play-by-play">Play-By-Play</a></li><li><a href="#player-profile">Player Profile</a></li><li><a href="#prospects">Prospects</a></li><li><a href="#rankings">Rankings</a></li><li><a href="#schedule">Schedule</a></li><li><a href="#seasonal-statistics-season-to-date">Seasonal Statistics (Season To Date)</a></li><li><a href="#seasons">Seasons</a></li><li><a href="#series-schedule">Series Schedule</a></li><li><a href="#series-statistics">Series Statistics</a></li><li><a href="#splits-game">Splits (Game)</a></li><li><a href="#splits-hierarchy">Splits (Hierarchy)</a></li><li><a href="#splits-in-game">Splits (In-game)</a></li><li><a href="#splits-schedule">Splits (Schedule)</a></li><li><a href="#standings-1">Standings</a></li><li><a href="#team-draft-summary">Team Draft Summary</a></li><li><a href="#team-profile-rosters">Team Profile (Rosters)</a></li><li><a href="#top-prospects">Top Prospects</a></li><li><a href="#trades">Trades</a></li><li><a href="#push-feeds">Push Feeds</a></li><li><a href="#push-clock">Push Clock</a></li><li><a href="#push-draft-picks">Push Draft Picks</a></li><li><a href="#push-draft-trades">Push Draft Trades</a></li><li><a href="#push-events">Push Events</a></li><li><a href="#push-statistics">Push Statistics</a></li><li><a href="#frequently-asked-questions">Frequently Asked Questions</a></li></ul></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/NBA_v5">NBA v5</a></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/NBA_v4">NBA v4</a></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/WNBA_v8">WNBA v8</a></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/WNBA_v7">WNBA v7</a></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/WNBA_v4">WNBA v4</a></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/WNBA_v3">WNBA v3</a></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/NBA_G_League_v8">NBA G League v8</a></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/NBA_G_League_v7">NBA G League v7</a></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/NBA_G_League">NBA G League v5</a></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/NCAA_Mens_Basketball_v8">NCAA Men's Basketball v8</a></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/NCAA_Mens_Basketball_v7">NCAA Men's Basketball v7</a></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/NCAA_Mens_Basketball_v4">NCAA Men's Basketball v4</a></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/NCAA_Mens_Basketball_v3">NCAA Men's Basketball v3</a></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/NCAA_Womens_Basketball_v8">NCAA Women's Basketball v8</a></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/NCAA_Womens_Basketball_v7">NCAA Women's Basketball v7</a></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/NCAA_Womens_Basketball_v3">NCAA Women's Basketball v3</a></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/Global_Basketball_v2">Global Basketball v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/Global_Basketball_v1">Global Basketball v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/basketball/NBA_Historical_v1">NBA Historical v1</a></li>
</ul>
</li>
<li><a href="https://developer.sportradar.com/docs/read/combat_sports" class="js-ajax-ignore">Combat Sports</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/combat_sports/MMA_v2">MMA v2</a></li>
</ul>
</li>
<li><a href="https://developer.sportradar.com/docs/read/cricket" class="js-ajax-ignore">Cricket</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/cricket/Cricket_v2">Cricket v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/cricket/Cricket_Legacy_v2">Cricket Legacy v2</a></li>
</ul>
</li>
<li><a href="https://developer.sportradar.com/docs/read/editorial_content" class="js-ajax-ignore">Editorial Content</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/editorial_content/Editorial_Content_v3">Editorial Content v3</a></li>
</ul>
</li>
<li><a href="https://developer.sportradar.com/docs/read/golf" class="js-ajax-ignore">Golf</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/golf/Golf_v3">Golf v3</a></li>
<li><a href="https://developer.sportradar.com/docs/read/golf/Golf_v2">Golf v2</a></li>
</ul>
</li>
<li><a href="https://developer.sportradar.com/docs/read/handball" class="js-ajax-ignore">Handball</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/handball/Handball_v2">Handball v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/handball/Handball_v1">Handball v1</a></li>
</ul>
</li>
<li><a href="https://developer.sportradar.com/docs/read/hockey" class="js-ajax-ignore">Hockey</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/hockey/NHL_v7">NHL v7</a></li>
<li><a href="https://developer.sportradar.com/docs/read/hockey/NHL_v6">NHL v6</a></li>
<li><a href="https://developer.sportradar.com/docs/read/hockey/NHL_v5">NHL v5</a></li>
<li><a href="https://developer.sportradar.com/docs/read/hockey/NCAA_Mens_Hockey_v3">NCAA Mens Hockey v3</a></li>
<li><a href="https://developer.sportradar.com/docs/read/hockey/Global_Ice_Hockey_v2">Global Ice Hockey v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/hockey/Global_Ice_Hockey_v1">Global Ice Hockey v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/hockey/NHL_Historical_v1">NHL Historical v1</a></li>
</ul>
</li>
<li><a href="https://developer.sportradar.com/docs/read/images" class="js-ajax-ignore">Images</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/images/Images_v3">Images v3</a></li>
</ul>
</li>
<li><a href="https://developer.sportradar.com/docs/read/Insights" class="js-ajax-ignore">Insights</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/insights/Insights_User_Interface">Insights User Interface</a></li>
<li><a href="https://developer.sportradar.com/docs/read/insights/NBA_Insights_v2">NBA Insights v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/insights/NFL_Insights_v2">NFL Insights v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/insights/NHL_Insights_v2">NHL Insights v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/insights/MLB_Insights_v2">MLB Insights v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/insights/NBA_Betting_Splits_v2">NBA Betting Splits v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/insights/NHL_Betting_Splits_v2">NHL Betting Splits v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/insights/MLB_Betting_Splits_v2">MLB Betting Splits v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/insights/NFL_Betting_Splits_v2">NFL Betting Splits v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/insights/NCAAFB_Betting_Splits_v2">NCAAFB Betting Splits v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/insights/NCAAMB_Betting_Splits_v2">NCAAMB Betting Splits v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/insights/NCAAWB_Betting_Splits_v2">NCAAWB Betting Splits v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/insights/Soccer_Betting_Splits_v2">Soccer Betting Splits v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/insights/NBA_Insights_v1">NBA Insights v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/insights/NHL_Insights_v1">NHL Insights v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/insights/MLB_Insights_v1">MLB Insights v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/insights/NFL_Insights_v1">NFL Insights v1</a></li>
</ul>
</li>
<li><a href="https://developer.sportradar.com/docs/read/odds" class="js-ajax-ignore">Odds</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/odds/Odds_Comparison_v1">Odds Comparison Regular</a></li>
<li><a href="https://developer.sportradar.com/docs/read/odds/Odds_Comparison_Futures">Odds Comparison Futures</a></li>
<li><a href="https://developer.sportradar.com/docs/read/odds/Odds_Comparison_Player_Props">Odds Comparison Player Props</a></li>
<li><a href="https://developer.sportradar.com/docs/read/odds/Odds_Comparison_Prematch">Odds Comparison Prematch</a></li>
<li><a href="https://developer.sportradar.com/docs/read/odds/Probabilities_v1">Probabilities v1</a></li>
</ul>
</li>
<li><a href="https://developer.sportradar.com/docs/read/OnAir">Broadcast Graphics</a></li>
<li><a href="https://developer.sportradar.com/docs/read/racing" class="js-ajax-ignore">Racing</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/racing/NASCAR_v3">NASCAR v3</a></li>
<li><a href="https://developer.sportradar.com/docs/read/racing/Classic_NASCAR_v3">Classic NASCAR v3</a></li>
<li><a href="https://developer.sportradar.com/docs/read/racing/Formula_1_v2">Formula 1 v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/racing/MotoGP_v2">MotoGP v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/racing/IndyCar_v2">IndyCar v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/racing/Formula_E_v2">Formula E v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/racing/Rally_v2">Rally v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/racing/Indy_Lights_v2">Indy Lights v2</a></li>
</ul>
</li>
<li><a href="https://developer.sportradar.com/docs/read/rugby" class="js-ajax-ignore">Rugby</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/rugby/Rugby_v3">Rugby v3</a></li>
<li><a href="https://developer.sportradar.com/docs/read/rugby/Rugby_v2">Rugby v2</a></li>
</ul>
</li>
<li><a href="https://developer.sportradar.com/docs/read/tennis" class="js-ajax-ignore">Tennis</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/tennis/Tennis_v3">Tennis v3</a></li>
<li><a href="https://developer.sportradar.com/docs/read/tennis/Tennis_v2">Tennis v2</a></li>
</ul>
</li>
<li><a href="https://developer.sportradar.com/docs/read/widgets" class="js-ajax-ignore">Widgets</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/widgets/General_Information">General Information</a></li>
<li><a href="https://developer.sportradar.com/docs/read/widgets/MLB_Widgets">MLB Widgets</a></li>
<li><a href="https://developer.sportradar.com/docs/read/widgets/NBA_Widgets">NBA Widgets</a></li>
<li><a href="https://developer.sportradar.com/docs/read/widgets/NCAA_Football">NCAA Football Widgets</a></li>
<li><a href="https://developer.sportradar.com/docs/read/widgets/NCAA_Mens_Basketball">NCAA Men's Basketball Widgets</a></li>
<li><a href="https://developer.sportradar.com/docs/read/widgets/NFL_Widgets">NFL Widgets</a></li>
<li><a href="https://developer.sportradar.com/docs/read/widgets/NHL_Widgets">NHL Widgets</a></li>
<li><a href="https://developer.sportradar.com/docs/read/widgets/Golf">Golf Widgets</a></li>
<li><a href="https://developer.sportradar.com/docs/read/widgets/WNBA_Widgets">WNBA Widgets</a></li>
<li><a href="https://developer.sportradar.com/docs/read/widgets/Soccer">Soccer Widgets</a></li>
</ul>
</li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage" class="js-ajax-ignore">Baseline Sports Coverage</a><ul>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Badminton_v2">Badminton v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Badminton_v1">Badminton v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Bandy_v2">Bandy v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Bandy_v1">Bandy v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Beach_Soccer_v2">Beach Soccer v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Beach_Soccer_v1">Beach Soccer v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Curling_v2">Curling v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Curling_v1">Curling v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Cycling_v2">Cycling v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Darts_v2">Darts v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Darts_v1">Darts v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Field_Hockey_v2">Field Hockey v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Field_Hockey_v1">Field Hockey v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Floorball_v2">Floorball v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Floorball_v1">Floorball v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Futsal_v2">Futsal v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Futsal_v1">Futsal v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Pesapallo_v2">Pesapallo v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Pesapallo_v1">Pesapallo v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Snooker_v2">Snooker v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Snooker_v1">Snooker v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Squash_v2">Squash v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Squash_v1">Squash v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Table_Tennis_v2">Table Tennis v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Volleyball_Beach_v2">Volleyball (Beach) v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Volleyball_Beach_v1">Volleyball (Beach) v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Volleyball_Indoor_v2">Volleyball (Indoor) v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Volleyball_Indoor_v1">Volleyball (Indoor) v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Waterpolo_v2">Waterpolo v2</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Waterpolo_v1">Waterpolo v1</a></li>
<li><a href="https://developer.sportradar.com/docs/read/baseline_sports_coverage/Winter_Sports_v1">Winter Sports v1</a></li>
</ul>
</li>
</ul></div></div></div></div></main><footer class="footer" id="footer"><div id="footer-1-wrapper">
    <div class="container">
        <a class="logo-contact" href="https://developer.sportradar.com/contact"><img src="https://developer.sportradar.com/files/contact.png"></a>
        <div class="text-small">
            <div class="row">
                <div class="grid-third">
                    <h2 class="h4 no-padding-top no-margin-bottom">Sportradar</h2>
                    <p>
                        150 South 5th St. Suite 400<br>
                        Minneapolis, MN 55402<br>
                        USA
                    </p>
                </div>
                <div class="grid-third">
                    <p>
                        <a href="mailto:us-sales@sportradar.com">us-sales@sportradar.com</a><br>
                        <a href="mailto:us-jobs@sportradar.com">us-jobs@sportradar.com</a><br>
                        Main: 612-361-4100<br>
                        Sales: 612-361-4102<br>
                        <a href="https://developer.sportradar.com/Terms_and_Conditions">Terms and Conditions</a><br>
                    </p>
                </div>
                <div class="grid-third">
                    <h2 class="h4 no-padding-top">Sportradar is Social</h2>
                    <ul class="list-inline">
                        <li>
                            <a class="link-icon" href="https://www.facebook.com/sportradarofficial/">
                                <svg xmlns="http://www.w3.org/2000/svg" style="height:1em;width:1em;" viewBox="0 0 48 48" aria-labelledby="title-facebook"><title id="title-facebook">Facebook</title><path fill="#ffffff" d="M31.5 7.5c-4.142 0-7.5 3.358-7.5 7.5v4.5h-6v6h6v21h6v-21h6.75l1.5-6H30V15c0-.828.672-1.5 1.5-1.5H39v-6h-7.5z"></path></svg>
                            </a>
                        </li>
                        <li>
                            <a class="link-icon" href="https://twitter.com/Sportradar">
                                <svg xmlns="http://www.w3.org/2000/svg" style="height:1em;width:1em;" viewBox="0 0 48 48" aria-labelledby="title-twitter"><title id="title-twitter">Twitter</title><path fill="#ffffff" d="M48 9.113c-1.766.783-3.664 1.313-5.656 1.55 2.033-1.218 3.595-3.148 4.33-5.447-1.903 1.13-4.01 1.948-6.254 2.39-1.796-1.914-4.356-3.11-7.188-3.11-5.44 0-9.848 4.41-9.848 9.847 0 .772.087 1.523.255 2.244-8.185-.41-15.442-4.33-20.3-10.29C2.494 7.753 2.01 9.445 2.01 11.25c0 3.416 1.738 6.43 4.38 8.196-1.613-.05-3.132-.494-4.46-1.232v.124c0 4.77 3.395 8.75 7.9 9.656-.827.225-1.697.346-2.595.346-.635 0-1.25-.062-1.853-.177 1.253 3.912 4.89 6.76 9.2 6.84-3.37 2.64-7.618 4.215-12.23 4.215-.796 0-1.58-.047-2.35-.138 4.358 2.794 9.534 4.425 15.096 4.425 18.114 0 28.02-15.006 28.02-28.02 0-.426-.01-.85-.03-1.273C45.01 12.824 46.68 11.09 48 9.114z"></path></svg>
                            </a>
                        </li>
                        <li>
                            <a class="link-icon" href="https://www.linkedin.com/company/sportradar">
                                <svg xmlns="http://www.w3.org/2000/svg" style="height:1em;width:1em;" viewBox="0 0 48 48" aria-labelledby="title-linkedin">LinkedIn<title id="title-"></title><path fill="#ffffff" d="M18 18h8.302v4.255h.12C27.575 20.183 30.4 18 34.616 18 43.38 18 45 23.455 45 30.55V45h-8.653V32.19c0-3.056-.063-6.986-4.5-6.986-4.508 0-5.196 3.327-5.196 6.764V45H18V18zM3 18h9v27H3V18zM12 10.5c0 2.485-2.015 4.5-4.5 4.5S3 12.985 3 10.5 5.015 6 7.5 6 12 8.015 12 10.5z"></path>
                            </svg></a>
                        </li>
                    </ul>
                </div>
            </div>
            <p><a href="https://sportradar.com/privacy-notice/">Privacy Policy</a> © Sportradar, a subsidiary of Sportradar AG</p>
        </div>
    </div>
</div><nav id="nav-secondary-wrapper"><div class="nav-secondary container" id="nav-secondary"><ul id="nav-secondary-list"></ul></div></nav><div id="footer-2-wrapper">
	<div class="container text-center-large">
		<p class="margin-bottom-small"><img height="37" width="101" src="https://developer.sportradar.com/files/FB_techpartners.png"></p>
		<p></p>
	</div>
</div></footer><div id="mashery-made"><div class="container"><p></p></div></div></div></div>
<script type="text/javascript">
//<![CDATA[
/*!
 * Templates & Initializations
 * sportradar v2.0.0
 * Portal Theme Starter Kit v2.6.1 - Default Theme
 * http://github.com/mashery/portal-theme-starter-kit
 */

/**
 * Theme Templates
 */

// Base layout
// The markup structure that all of the content will get loaded into.
// {{layout.navUser}} - The wrapper for the user navigation.
// {{layout.navPrimary}} - The wrapper for the primary navigation.
// {{layout.main}} - The wrapper for the main content area.
// {{layout.footer1}} - The wrapper for the first footer content area.
// {{layout.navSecondary}} - The wrapper for the secondary navigation.
// {{layout.footer2}} - The wrapper for the second footer content area.
portalOptions.templates.layout =
	'<a class="screen-reader screen-reader-focusable" href="#main-wrapper">Skip to content</a>' +
	'{{layout.navPrimary}}' +
	'{{layout.navUser}}' +
	'{{layout.main}}' +
	'<footer class="footer" id="footer">' +
		'{{layout.footer1}}' +
		'{{layout.navSecondary}}' +
		'{{layout.footer2}}' +
	'</footer>';

// Primary Navigation
// The primary navigation content for the Portal.
// {{content.menuToggle}} - The label on the button to expand and collapse the navigation menu on smaller screens.
portalOptions.templates.primaryNav = function () {
	var template =
		'<div class="nav-primary nav-wrap" id="nav-primary">' +
			'<div class="container padding-top-small padding-bottom-small">' +
				'<a id="logo" class="logo" href="/">{{content.logo}}</a>' +
				(mashery.contentType === 'docs' ? '<div class="nav-toggle-wrap">' : '' ) +
					'<a role="button" class="nav-toggle" id="nav-primary-toggle" data-nav-toggle=".nav-collapse" href="#">&#9776; Menu</a>' +
					(mashery.contentType === 'docs' ? '<a role="button" class="nav-toggle margin-right js-scroll-ignore" id="nav-docs-toggle" href="#">&#8942; Docs Navigation</a>' : '') +
				(mashery.contentType === 'docs' ? '</div>' : '' ) +
				'<div class="nav-menu nav-collapse" id="nav-primary-menu">' +
					'<ul class="nav" id="nav-primary-list">' +
						'{{content.navItemsPrimary}}' +
					'</ul>' +
				'</div>' +
			'</div>' +
		'</div>';
	return template;
};

// User Navigation
// The navigation menu for sign in, registration, account, and logout links.
portalOptions.templates.userNav =
	'<div class="nav-user container" id="nav-user">' +
		'<div class="nav-menu nav-collapse" id="nav-user-menu">' +
			'<ul class="nav-user-list list-inline text-muted text-right-large padding-top-small padding-bottom-small no-margin-bottom" id="nav-user-list">' +
				'{{content.navItemsUser}}' +
			'</ul>' +
		'</div>' +
	'</div>';

// Documentation
// The layout for API documentation. This page includes an automatically generated navigation menu.
// {{content.subheading}} - The heading above the documentation sub-navigation.
portalOptions.templates.docs =
	'<div class="main" id="main">' +
		'<div class="row row-docs">' +
			'<div class="grid-docs grid-flip content">' +
				'<h1>{{content.heading}}</h1>' +
				'{{content.main}}' +
			'</div>' +
			'<div class="grid-nav">' +
				'<div id="docs-nav-inner" class="padding-top">' +
					'<ul id="nav-docs">{{content.secondary}}</ul>' +
				'</div>' +
			'</div>' +
		'</div>' +
	'</div>';

// Footer 1
// The first of two footer content sections.
portalOptions.templates.footer1 = function () {
	var template = mashery.dom.querySelector('#footer [data-footer-template-1]');
	if (!template) return '';
	return template.innerHTML;
};

// Footer 2
// The first of two footer content sections.
portalOptions.templates.footer2 = function () {
	var template = mashery.dom.querySelector('#footer [data-footer-template-2]');
	if (!template) return '';
	return template.innerHTML;
};

// Enable full width layouts
window.portalOptions.templates.page = function () {
	return	'<div class="main container container-small content" id="main">' +
				(mashery.globals.noHeader ? '' : '<h1>{{content.heading}}</h1>') +
				'{{content.main}}' +
			'</div>';
};

// Add theme style hook
document.documentElement.className += ' js-theme-default';


/**
 * Load custom typeface
 */
window.addEventListener('portalAfterInit', function () {
	m$.loadJS('https://cdn.jsdelivr.net/gh/bramstein/fontfaceobserver@2.0.13/fontfaceobserver.standalone.js', function () {
		m$.loadCSS('https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,400i,600,600i,700,700i');
		var font = new FontFaceObserver('Source Sans Pro');
		font.load().then(function () {
			document.documentElement.classList.add('fonts-loaded');
		});
	});
}, false);


/**
 * Favicon
 * Add a favicon/tab icon for your Portal.
 */

// If true, inject a favicon
window.portalOptions.favicon = true;

// The favicon sizes
window.portalOptions.faviconSizes = '16x16 24x24 32x32 64x64';



/**
 * Logo
 * Add a custom logo. Accepts any markup as a string (`<img src>`, `<svg></svg>`, etc.).
 */
portalOptions.logo = '<img height="35" width="202" alt="Sportradar Developer Portal" src="https://developer.sportradar.com/files/logo.svg">';


// Sign In
// The sign in page.
portalOptions.labels.signin = {
    main: '<p class="h3">Sign in to {{mashery.area}} using your Mashery ID.</p>', // The message above the sign in form
};


/**
 * Validate a form with JS
 * @param  {String} form       A selector for the form
 * @param  {Array}  checkGroup Checkbox groups to validate
 */
var formValidation = function (form, checkGroup) {

	'use strict';

	//
	// Variables
	//

	var form = document.querySelector(form);
	if (!form) return;
	var fields = Array.prototype.slice.call(form.querySelectorAll('input.require:not(#members-sr_contact), textarea.require, select.require'));
	var fieldError = 'This value is not allowed to be blank.';


	//
	// Methods
	//

	var shiftFocus = function () {
		var field = form.querySelector('ul.error');
		if (!field) return;
		if (!field.hasAttribute('tabindex')) {
			field.setAttribute('tabindex', '-1');
		}
		field.focus();
	};

	var removeErrors = function () {
		var errors = Array.prototype.slice.call(form.querySelectorAll('ul.error'));
		errors.forEach(function (error) {
			var field = error.parentNode.querySelector('.failure');
			error.parentNode.removeChild(error);
			if (field) {
				field.classList.remove('failure');
			}
		});
	};

	var showFormError = function () {

		// If error already exists, use it
		var existing = form.querySelector('ul.failure');
		if (existing) return;

		// Otherwise, create one
		var error = document.createElement('ul');
		error.className = 'failure';
		error.innerHTML = '<li>Please correct the noted errors.</li>';
		form.insertBefore(error, form.firstChild);

	};

	var showFieldError = function (field) {

		// Get target location
		var target = field;
		if (field.type === 'radio') {

			// Get radio button last input
			var allFields = form.querySelectorAll('[name="' + field.name + '"]');
			target = allFields[allFields.length - 1].parentNode;

			// If an error is already there, bail
			if (target.parentNode.querySelector('ul.error li')) return
				;
		}

		// Insert error
		var error = document.createElement('ul');
		error.className = 'error';
		error.innerHTML = '<li>' + fieldError + '</li>';
		target.parentNode.insertBefore(error, target.nextSibling);
		target.classList.add('failure');

	};

	var isValid = function (field) {
		if (field.hasAttribute('hidden') || field.type === 'submit' || field.type === 'hidden') return true;
		if (field.type !== 'radio' && field.value.length > 0) return true;
		if (field.type === 'radio') {
			var allFields = Array.prototype.slice.call(form.querySelectorAll('[name="' + field.name + '"]'));
			var valid = false;
			allFields.forEach(function (radio) {
				if (radio.checked) {
					valid = true;
				}
			});
			return valid;
		}
		return false;
	};

	/**
	 * Validate form
	 */
	var submitHandler = function (event) {

		// // Stop form from submitting
		// event.preventDefault();

		// Default form validity
		var valid = true;

		// Remove existing errors
		removeErrors();

		// Validate all fields
		fields.forEach(function (field) {
			if (isValid(field)) return;
			showFieldError(field);
			valid = false;
		});

		// Checkboxes
		if (checkGroup && checkGroup.length > 0) {
			checkGroup.forEach(function (checkboxes) {

				var selectedCheckboxes = checkboxes.checkboxes.filter(function (selector) {
					var checkbox = document.querySelector(selector);
					return (!!checkbox && checkbox.checked);
				});

				var isHidden = checkboxes.checkboxes.filter(function (selector) {
					var checkbox = document.querySelector(selector);
					return (!!checkbox && checkbox.closest('[hidden]'));
				});

				if (isHidden.length > 0) return;

				if (selectedCheckboxes.length < 1) {
					showFieldError(document.querySelector(checkboxes.legend));
					valid = false;
				}

			});
		}

		if (valid) return;

		// Stop form from submitting
		event.preventDefault();
		showFormError();
		shiftFocus();

	};


	//
	// Event Listeners
	//

	form.addEventListener('submit', submitHandler, false);

};


/**
 * Initialize plugins
 */
window.addEventListener('portalAfterRender', function () {

	// Expand-and-collapse nav on small viewports
	astro.init();

	// Enhanced documentation
	var docs = {};
	if (document.querySelector('.better-docs-nav')) {
		docs = new BetterDocs('.content', {
			langs: {
				bash: {
					selector: 'bash',
					title: 'Bash'
				},
				ruby: {
					selector: 'ruby',
					title: 'Ruby'
				},
				python: {
					selector: 'python',
					title: 'Python'
				}
			},
			langDefault: 'bash',
			tocSelector: 'h2',
			wideLayout: true,
		});
		var betterDocsNav = document.querySelector('.better-docs-nav');
		var betterDocsHeader = document.querySelector('h1');
		if (betterDocsNav && betterDocsHeader) {
			betterDocsHeader.before(betterDocsNav);
		}
	}
	// Destroy instantiation on Ajax page reload
	window.addEventListener('portalBeforeRender', function () {
		if ('destroy' in docs) {
			docs.destroy();
		}
	}, false);

	// Conditional content
	// Add logged-in/logged-out class
	if (window.mashery.loggedIn) {
		document.documentElement.classList.add('is-logged-in');
		document.documentElement.classList.remove('is-logged-out');
	} else {
		document.documentElement.classList.add('is-logged-out');
		document.documentElement.classList.remove('is-logged-in');
	}

	// Responsive iFrame Videos
	fluidvids.init({
		selector: ['iframe', 'object'], // runs querySelectorAll()
		players: ['www.youtube.com', 'player.vimeo.com'] // players to support
	});

	// Get the latest blog posts
	latestBlogPosts();

	// Smooth scrolling to anchor links
	var scroll = {};
	scroll = new SmoothScroll('.category-page #main-wrapper a[href*="#"], .category-docs #main-wrapper a[href*="#"], .category-docs #main-wrapper a[href*="#"], .category-blogall #main-wrapper a[href*="#"], .category-blogsingle #main-wrapper a[href*="#"], #nav-docs a[href*="#"]', {
		ignore: '.js-scroll-ignore, .tabs a'
	});

	// Destroy instantiation on Ajax page reload
	window.addEventListener('portalBeforeRender', function () {
		if ('destroy' in scroll) {
			scroll.destroy();
		}
	}, false);

	// Language translation
	// window.addEventListener('portalAfterRender', function () {
	// 	// NOTE: You should update this with your desired options, languages, and translations.
	// 	// Details at https://developer.mashery.com/docs/customizing_your_portal/plugins/Translate
	// 	var translate = new Translate();
	// }, false);

	// Sticky footer
	if (mashery.contentType === 'docs') {
		stickyFooter.destroy();
	} else {
		stickyFooter.init('#footer');
		window.setTimeout(function () {
			stickyFooter.setPush();
		}, 250);
	}

	// Toggle Tabs
	tabs();

	// Docs nav
	if (mashery.contentType === 'docs') {
		stickyDocs.init(function () {
			scrollspy.cacheOffsets();
		});
		scrollspy.init();
	} else {
		stickyDocs.destroy();
		scrollspy.destroy();
	}

	// Docs TOC on empty pages
	docsBodyTOC();

	//Offside.js
	var myOffside;
	if ('destroy' in offside) {
		offside.destroy();
	}
	if (mashery.contentType === 'docs') {
		myOffside = offside('.grid-nav', {
			slidingElementsSelector:'.grid-docs',
			buttonsSelector: '#nav-docs-toggle',
		});
	}

	// Docs navigation expand-and-collapse
	if ('destroy' in docsNavCollapse) {
		docsNavCollapse.destroy();
	}
	docsNavCollapse.init();

	// Slide Messages
	if (mashery.globals.messages) {
		slideMessages(mashery.globals.messages, mashery.globals.messagelinks || []);
	}

	// Registration form validation
	formValidation('[action*="/member/register"]');

}, false);

// User Registration
// The user registration page.
portalOptions.labels.register = {
  sidebar: '',
	// The message above the form
	main: 	'<p>There are two steps to getting started with Sportradar APIs:</p>' +
			'<ul>' +
				'<li>Register your account, creating a username that you’ll use to access your keys.</li>' +
				'<li>Register an application to get a free trial API key for each sport or league you are interested in.</li>' +
			'</ul>' +
			'<p>This key identifies your account and application, and is required for any API calls.</p>' +
			'<p>Once you have your keys, you can view our documentation to find the syntax used to call the Sportradar APIs. You don’t need to write any code to get started. Instead, you can use our API Sandbox to test those calls against our sports data.</p>' +
      '<p>* Denotes a required field.</p>',
};

// Toggle IO Docs APIs and endpoints with query strings
window.addEventListener('portalIODocsReady', function () {
    toggleIODocs();
}, false);
//]]>
</script>
    <script src="https://developer.sportradar.com/files/main.min.js" type="text/javascript"></script>
<script type="text/javascript">
        m$.init(portalOptions);
</script>    

</body></html>